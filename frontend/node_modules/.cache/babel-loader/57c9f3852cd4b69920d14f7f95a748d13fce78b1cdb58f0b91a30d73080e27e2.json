{"ast":null,"code":"import * as CONSTANT from './../base/constant';\nimport { ClearFormat } from './clearformat';\nimport * as EVENTS from './../../common/constant';\n/**\n * Clear Format EXEC internal component\n *\n * @hidden\n\n */\nvar ClearFormatExec = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element.\n   * @returns {void}\n   * @hidden\n    */\n  function ClearFormatExec(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  ClearFormatExec.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.CLEAR_TYPE, this.applyClear, this);\n    this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown, this);\n  };\n  ClearFormatExec.prototype.onKeyDown = function (e) {\n    switch (e.event.action) {\n      case 'clear-format':\n        this.applyClear({\n          subCommand: 'ClearFormat',\n          callBack: e.callBack,\n          enterAction: e.enterAction\n        });\n        e.event.preventDefault();\n        break;\n    }\n  };\n  ClearFormatExec.prototype.applyClear = function (e) {\n    if (e.subCommand === 'ClearFormat') {\n      ClearFormat.clear(this.parent.currentDocument, this.parent.editableElement, e.enterAction, e.selector);\n      if (e.callBack) {\n        e.callBack({\n          requestType: e.subCommand,\n          event: e.event,\n          editorMode: 'HTML',\n          range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n          elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n        });\n      }\n    }\n  };\n  return ClearFormatExec;\n}();\nexport { ClearFormatExec };","map":{"version":3,"names":["CONSTANT","ClearFormat","EVENTS","ClearFormatExec","parent","addEventListener","prototype","observer","on","CLEAR_TYPE","applyClear","KEY_DOWN_HANDLER","onKeyDown","e","event","action","subCommand","callBack","enterAction","preventDefault","clear","currentDocument","editableElement","selector","requestType","editorMode","range","nodeSelection","getRange","elements","getSelectedNodes"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/clearformat-exec.js"],"sourcesContent":["import * as CONSTANT from './../base/constant';\nimport { ClearFormat } from './clearformat';\nimport * as EVENTS from './../../common/constant';\n/**\n * Clear Format EXEC internal component\n *\n * @hidden\n\n */\nvar ClearFormatExec = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element.\n     * @returns {void}\n     * @hidden\n\n     */\n    function ClearFormatExec(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    ClearFormatExec.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.CLEAR_TYPE, this.applyClear, this);\n        this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown, this);\n    };\n    ClearFormatExec.prototype.onKeyDown = function (e) {\n        switch (e.event.action) {\n            case 'clear-format':\n                this.applyClear({ subCommand: 'ClearFormat', callBack: e.callBack, enterAction: e.enterAction });\n                e.event.preventDefault();\n                break;\n        }\n    };\n    ClearFormatExec.prototype.applyClear = function (e) {\n        if (e.subCommand === 'ClearFormat') {\n            ClearFormat.clear(this.parent.currentDocument, this.parent.editableElement, e.enterAction, e.selector);\n            if (e.callBack) {\n                e.callBack({\n                    requestType: e.subCommand,\n                    event: e.event,\n                    editorMode: 'HTML',\n                    range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                    elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n                });\n            }\n        }\n    };\n    return ClearFormatExec;\n}());\nexport { ClearFormatExec };\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,oBAAoB;AAC9C,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG,aAAe,YAAY;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;EAEI,SAASA,eAAeA,CAACC,MAAM,EAAE;IAC7B,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,gBAAgB,EAAE;EAC3B;EACAF,eAAe,CAACG,SAAS,CAACD,gBAAgB,GAAG,YAAY;IACrD,IAAI,CAACD,MAAM,CAACG,QAAQ,CAACC,EAAE,CAACR,QAAQ,CAACS,UAAU,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAAC;IACnE,IAAI,CAACN,MAAM,CAACG,QAAQ,CAACC,EAAE,CAACN,MAAM,CAACS,gBAAgB,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAAC;EAC1E,CAAC;EACDT,eAAe,CAACG,SAAS,CAACM,SAAS,GAAG,UAAUC,CAAC,EAAE;IAC/C,QAAQA,CAAC,CAACC,KAAK,CAACC,MAAM;MAClB,KAAK,cAAc;QACf,IAAI,CAACL,UAAU,CAAC;UAAEM,UAAU,EAAE,aAAa;UAAEC,QAAQ,EAAEJ,CAAC,CAACI,QAAQ;UAAEC,WAAW,EAAEL,CAAC,CAACK;QAAY,CAAC,CAAC;QAChGL,CAAC,CAACC,KAAK,CAACK,cAAc,EAAE;QACxB;IAAM;EAElB,CAAC;EACDhB,eAAe,CAACG,SAAS,CAACI,UAAU,GAAG,UAAUG,CAAC,EAAE;IAChD,IAAIA,CAAC,CAACG,UAAU,KAAK,aAAa,EAAE;MAChCf,WAAW,CAACmB,KAAK,CAAC,IAAI,CAAChB,MAAM,CAACiB,eAAe,EAAE,IAAI,CAACjB,MAAM,CAACkB,eAAe,EAAET,CAAC,CAACK,WAAW,EAAEL,CAAC,CAACU,QAAQ,CAAC;MACtG,IAAIV,CAAC,CAACI,QAAQ,EAAE;QACZJ,CAAC,CAACI,QAAQ,CAAC;UACPO,WAAW,EAAEX,CAAC,CAACG,UAAU;UACzBF,KAAK,EAAED,CAAC,CAACC,KAAK;UACdW,UAAU,EAAE,MAAM;UAClBC,KAAK,EAAE,IAAI,CAACtB,MAAM,CAACuB,aAAa,CAACC,QAAQ,CAAC,IAAI,CAACxB,MAAM,CAACiB,eAAe,CAAC;UACtEQ,QAAQ,EAAE,IAAI,CAACzB,MAAM,CAACuB,aAAa,CAACG,gBAAgB,CAAC,IAAI,CAAC1B,MAAM,CAACiB,eAAe;QACpF,CAAC,CAAC;MACN;IACJ;EACJ,CAAC;EACD,OAAOlB,eAAe;AAC1B,CAAC,EAAG;AACJ,SAASA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}