{"ast":null,"code":"import { TreeView as BaseTreeView } from '@syncfusion/ej2-navigations';\nimport { isNullOrUndefined as isNOU, select, setValue, getValue, Draggable } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport * as CLS from '../base/classes';\nimport { read, Download, GetDetails, Delete } from '../common/operations';\nimport { createDialog } from '../pop-up/dialog';\nimport { updatePath, getPath, getDirectories } from '../common/utility';\nimport { createVirtualDragElement, dragStopHandler, dragStartHandler, draggingHandler, getDirectoryPath, getModule } from '../common/index';\nimport { copyFiles, cutFiles, removeActive, pasteHandler, getParentPath, readDropPath } from '../common/index';\nimport { hasEditAccess, createDeniedDialog, hasDownloadAccess, getAccessClass } from '../common/index';\n/**\n * NavigationPane module\n */\nvar NavigationPane = /** @class */function () {\n  /**\n   * Constructor for the TreeView module\n   *\n   * @param {IFileManager} parent - specifies the parent element.\n   * @hidden\n   */\n  function NavigationPane(parent) {\n    this.removeNodes = [];\n    this.moveNames = [];\n    this.expandTree = false;\n    this.isDrag = false;\n    this.isPathDragged = false;\n    this.isRenameParent = false;\n    this.isRightClick = false;\n    this.renameParent = null;\n    // Specifies the previously selected nodes in the treeview control.\n    this.previousSelected = null;\n    // Specifies whether the nodeClicked event of the treeview control is triggered or not.\n    this.isNodeClickCalled = false;\n    // Specifies whether to restrict node selection in the treeview control.\n    this.restrictSelecting = false;\n    this.parent = parent;\n    this.addEventListener();\n    this.keyConfigs = {\n      altEnter: 'alt+enter',\n      esc: 'escape',\n      del: 'delete',\n      ctrlX: 'ctrl+x',\n      ctrlC: 'ctrl+c',\n      ctrlV: 'ctrl+v',\n      ctrlShiftN: 'ctrl+shift+n',\n      shiftF10: 'shift+F10',\n      f2: 'f2'\n    };\n  }\n  NavigationPane.prototype.onInit = function () {\n    if (!isNOU(this.treeObj)) {\n      return;\n    }\n    // eslint-disable-next-line\n    var rootData = getValue(this.parent.pathId[0], this.parent.feParent);\n    setValue('_fm_icon', 'e-fe-folder', rootData);\n    // eslint-disable-next-line\n    var attr = {};\n    var id = getValue('id', rootData);\n    if (!isNOU(id)) {\n      setValue('data-id', id, attr);\n    }\n    if (!hasEditAccess(rootData)) {\n      setValue('class', getAccessClass(rootData), attr);\n    }\n    if (!isNOU(attr)) {\n      setValue('_fm_htmlAttr', attr, rootData);\n    }\n    this.treeObj = new BaseTreeView({\n      fields: {\n        dataSource: [rootData],\n        id: '_fm_id',\n        parentID: '_fm_pId',\n        expanded: '_fm_expanded',\n        selected: '_fm_selected',\n        text: 'name',\n        hasChildren: 'hasChild',\n        iconCss: '_fm_icon',\n        htmlAttributes: '_fm_htmlAttr',\n        tooltip: 'name'\n      },\n      enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n      sortOrder: this.parent.navigationPaneSettings.sortOrder,\n      nodeSelecting: this.onNodeSelecting.bind(this),\n      nodeSelected: this.onNodeSelected.bind(this),\n      nodeExpanding: this.onNodeExpand.bind(this),\n      nodeClicked: this.onNodeClicked.bind(this),\n      allowEditing: true,\n      nodeEditing: this.onNodeEditing.bind(this),\n      drawNode: this.onDrowNode.bind(this),\n      enableRtl: this.parent.enableRtl,\n      dataBound: this.addDragDrop.bind(this)\n    });\n    this.treeObj.isStringTemplate = true;\n    this.treeObj.appendTo('#' + this.parent.element.id + CLS.TREE_ID);\n    this.wireEvents();\n  };\n  NavigationPane.prototype.addDragDrop = function () {\n    var _this = this;\n    if (!this.parent.isMobile && this.treeObj) {\n      if (this.parent.allowDragAndDrop) {\n        if (this.dragObj) {\n          this.dragObj.destroy();\n        }\n        this.dragObj = new Draggable(this.treeObj.element, {\n          cursorAt: this.parent.dragCursorPosition,\n          dragTarget: '.' + CLS.FULLROW,\n          distance: 5,\n          dragArea: this.parent.element,\n          drag: draggingHandler.bind(this, this.parent),\n          dragStart: function (args) {\n            dragStartHandler(_this.parent, args, _this.dragObj);\n          },\n          dragStop: dragStopHandler.bind(this, this.parent),\n          enableTailMode: true,\n          enableAutoScroll: true,\n          helper: this.dragHelper.bind(this)\n        });\n      } else if (!this.parent.allowDragAndDrop && this.dragObj) {\n        this.dragObj.destroy();\n      }\n    }\n  };\n  NavigationPane.prototype.dragHelper = function (args) {\n    var dragTarget = args.sender.target;\n    if (!dragTarget.classList.contains(CLS.FULLROW)) {\n      return null;\n    }\n    var dragLi = closest(dragTarget, 'li');\n    this.parent.dragPath = '';\n    this.parent.dragData = [];\n    this.parent.activeElements = [];\n    this.parent.activeElements = [dragLi];\n    this.parent.dragNodes = [];\n    getModule(this.parent, dragLi);\n    // eslint-disable-next-line\n    this.parent.dragData = this.getTreeData(dragLi);\n    this.parent.dragPath = this.getDragPath(dragLi, this.parent.dragData[0].name);\n    this.parent.dragNodes.push(this.parent.dragData[0].name);\n    createVirtualDragElement(this.parent);\n    return this.parent.virtualDragElement;\n  };\n  NavigationPane.prototype.getDragPath = function (dragLi, text) {\n    var path = this.getDropPath(dragLi, text);\n    return getParentPath(path);\n  };\n  NavigationPane.prototype.getDropPath = function (node, text) {\n    var id = node.getAttribute('data-id');\n    var newText = this.parent.hasId ? id : text;\n    return getPath(node, newText, this.parent.hasId);\n  };\n  NavigationPane.prototype.onDrowNode = function (args) {\n    var eventArgs = {\n      element: args.node,\n      fileDetails: args.nodeData,\n      module: 'NavigationPane'\n    };\n    this.parent.trigger('fileLoad', eventArgs);\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.addChild = function (files, target, prevent) {\n    // eslint-disable-next-line\n    var directories = getDirectories(files);\n    if (directories.length > 0) {\n      var length_1 = 0;\n      // eslint-disable-next-line\n      var folders = directories;\n      while (length_1 < directories.length) {\n        // eslint-disable-next-line\n        folders[length_1]._fm_icon = 'e-fe-folder';\n        // eslint-disable-next-line\n        var attr = {};\n        var id = getValue('id', folders[length_1]);\n        if (!isNOU(id)) {\n          setValue('data-id', id, attr);\n        }\n        if (!hasEditAccess(folders[length_1])) {\n          setValue('class', getAccessClass(folders[length_1]), attr);\n        }\n        if (!isNOU(attr)) {\n          setValue('_fm_htmlAttr', attr, folders[length_1]);\n        }\n        length_1++;\n      }\n      // eslint-disable-next-line\n      this.treeObj.addNodes(directories, target, null, prevent);\n    }\n  };\n  // Node Selecting event handler\n  NavigationPane.prototype.onNodeSelecting = function (args) {\n    if (!args.isInteracted && !this.isRightClick && !this.isPathDragged && !this.isRenameParent || this.restrictSelecting) {\n      this.restrictSelecting = false;\n      this.isNodeClickCalled = false;\n      return;\n    }\n    if (!this.renameParent) {\n      this.parent.activeModule = 'navigationpane';\n      // eslint-disable-next-line\n      var nodeData = this.getTreeData(getValue('id', args.nodeData));\n      var eventArgs = {\n        cancel: false,\n        fileDetails: nodeData[0],\n        module: 'NavigationPane'\n      };\n      this.parent.trigger('fileOpen', eventArgs);\n      args.cancel = eventArgs.cancel;\n      if (args.cancel) {\n        this.restrictSelecting = this.isNodeClickCalled ? this.previousSelected[0] != args.node.getAttribute('data-uid') : false;\n        this.treeObj.selectedNodes = this.isNodeClickCalled ? this.previousSelected : this.treeObj.selectedNodes;\n        this.previousSelected = this.treeObj.selectedNodes;\n        if (!isNOU(this.parent) && !isNOU(this.parent.contextmenuModule)) {\n          this.parent.contextmenuModule.contextMenu.enableItems(['Open'], true);\n        }\n      }\n    }\n  };\n  // Opens the folder while clicking open context menu item in the treeview.\n  NavigationPane.prototype.openFileOnContextMenuClick = function (node) {\n    var data = this.treeObj.getTreeData(node);\n    // eslint-disable-next-line\n    this.parent.selectedItems = [];\n    this.parent.itemData = data;\n    this.activeNode = node;\n    this.parent.activeModule = 'navigationpane';\n    updatePath(node, this.parent.itemData[0], this.parent);\n    read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n    this.parent.visitedItem = node;\n    this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n    this.treeObj.selectedNodes = [node.getAttribute('data-uid')];\n  };\n  NavigationPane.prototype.onNodeSelected = function (args) {\n    if (this.parent.breadcrumbbarModule && this.parent.breadcrumbbarModule.searchObj && !this.renameParent) {\n      this.parent.breadcrumbbarModule.searchObj.element.value = '';\n      this.parent.isFiltered = false;\n    }\n    this.parent.searchedItems = [];\n    if (!args.isInteracted && !this.isRightClick && !this.isPathDragged && !this.isRenameParent) {\n      return;\n    }\n    this.activeNode = args.node;\n    this.parent.activeModule = 'navigationpane';\n    // eslint-disable-next-line\n    var nodeData = this.getTreeData(getValue('id', args.nodeData));\n    this.parent.selectedItems = [];\n    this.parent.itemData = nodeData;\n    var previousPath = this.parent.path;\n    updatePath(args.node, this.parent.itemData[0], this.parent);\n    if (previousPath !== this.parent.path) {\n      this.expandNodeTarget = null;\n      if (args.node.querySelector('.' + CLS.ICONS) && args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n        this.expandNodeTarget = 'add';\n      }\n      read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n      this.parent.visitedItem = args.node;\n    }\n    this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line\n  NavigationPane.prototype.onPathDrag = function (args) {\n    this.isPathDragged = true;\n    this.selectResultNode(args[0]);\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onNodeExpand = function (args) {\n    if (!args.isInteracted && !this.isDrag) {\n      return;\n    }\n    if (args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n      var text = getValue('text', args.nodeData);\n      var id = args.node.getAttribute('data-id');\n      var isId = isNOU(id) ? false : true;\n      var newText = isNOU(id) ? text : id;\n      var path = getPath(args.node, newText, isId);\n      this.expandNodeTarget = args.node.getAttribute('data-uid');\n      this.parent.expandedId = this.expandNodeTarget;\n      this.parent.itemData = this.getTreeData(getValue('id', args.nodeData));\n      read(this.parent, events.nodeExpand, path);\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onNodeExpanded = function (args) {\n    this.addChild(args.files, this.expandNodeTarget, false);\n    this.parent.expandedId = null;\n  };\n  NavigationPane.prototype.onNodeClicked = function (args) {\n    this.parent.activeModule = 'navigationpane';\n    this.previousSelected = this.treeObj.selectedNodes;\n    this.activeNode = args.node;\n    if (args.event.which === 3 && args.node.getAttribute('data-uid') !== this.treeObj.selectedNodes[0]) {\n      this.isRightClick = true;\n      this.isNodeClickCalled = true;\n      this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n    } else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && this.parent.selectedItems.length !== 0) {\n      this.parent.setProperties({\n        selectedItems: []\n      }, true);\n      var layout = this.parent.view === 'LargeIcons' ? 'largeiconsview' : 'detailsview';\n      this.parent.notify(events.modelChanged, {\n        module: layout,\n        newProp: {\n          selectedItems: []\n        }\n      });\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onNodeEditing = function (args) {\n    if (!isNOU(args.innerHtml)) {\n      args.cancel = true;\n    }\n  };\n  NavigationPane.prototype.onPathChanged = function (args) {\n    this.parent.isCut = false;\n    // eslint-disable-next-line\n    var currFiles = getValue(this.parent.pathId[this.parent.pathId.length - 1], this.parent.feFiles);\n    if (this.expandNodeTarget === 'add') {\n      var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n      var ul = select('.' + CLS.LIST_PARENT, sNode);\n      if (isNOU(ul)) {\n        this.addChild(args.files, this.treeObj.selectedNodes[0], !this.expandTree);\n      }\n      this.expandNodeTarget = '';\n    }\n    this.expandTree = false;\n    if (isNOU(currFiles)) {\n      setValue(this.parent.pathId[this.parent.pathId.length - 1], args.files, this.parent.feFiles);\n    }\n  };\n  NavigationPane.prototype.updateTree = function (args) {\n    if (this.treeObj) {\n      var id = this.treeObj.selectedNodes[0];\n      this.updateTreeNode(args, id);\n    }\n  };\n  NavigationPane.prototype.updateTreeNode = function (args, id) {\n    var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1 ? false : true;\n    this.removeChildNodes(id);\n    this.addChild(args.files, id, !toExpand);\n  };\n  NavigationPane.prototype.removeChildNodes = function (id) {\n    var sNode = select('[data-uid=\"' + id + '\"]', this.treeObj.element);\n    var parent = select('.' + CLS.LIST_PARENT, sNode);\n    var childs = parent ? Array.prototype.slice.call(parent.children) : null;\n    if (childs) {\n      this.treeObj.removeNodes(childs);\n    }\n  };\n  NavigationPane.prototype.onOpenEnd = function (args) {\n    var sleId = this.parent.pathId[this.parent.pathId.length - 1];\n    this.treeObj.expandAll(this.treeObj.selectedNodes);\n    this.treeObj.selectedNodes = [sleId];\n    this.expandNodeTarget = 'add';\n    this.onPathChanged(args);\n  };\n  NavigationPane.prototype.onOpenInit = function (args) {\n    if (this.parent.activeModule === 'navigationpane') {\n      if (args.target.querySelector('.' + CLS.ICONS)) {\n        this.treeObj.expandAll(this.treeObj.selectedNodes);\n      }\n    }\n  };\n  NavigationPane.prototype.onInitialEnd = function (args) {\n    this.onInit();\n    this.addChild(args.files, getValue('_fm_id', args.cwd), false);\n  };\n  NavigationPane.prototype.onFinalizeEnd = function (args) {\n    this.onInit();\n    var id = getValue('_fm_id', args.cwd);\n    this.removeChildNodes(id);\n    this.addChild(args.files, id, false);\n    this.treeObj.selectedNodes = [this.parent.pathId[this.parent.pathId.length - 1]];\n  };\n  NavigationPane.prototype.onCreateEnd = function (args) {\n    this.updateTree(args);\n  };\n  NavigationPane.prototype.onSelectedData = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateItemData();\n    }\n  };\n  NavigationPane.prototype.onDeleteInit = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateActionData();\n      var name_1 = getValue('name', this.parent.itemData[0]);\n      Delete(this.parent, [name_1], this.parent.path, 'delete');\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDeleteEnd = function (args) {\n    if (this.parent.activeModule === 'navigationpane') {\n      var selectedNode = this.treeObj.selectedNodes[0];\n      var selcetedEle = select('[data-uid=\"' + selectedNode + '\"]', this.treeObj.element);\n      var selectedNodeEle = closest(selcetedEle, '.' + CLS.LIST_PARENT).parentElement;\n      this.treeObj.selectedNodes = [selectedNodeEle.getAttribute('data-uid')];\n      this.treeObj.dataBind();\n    }\n    this.updateTree(args);\n  };\n  NavigationPane.prototype.onRefreshEnd = function (args) {\n    this.updateTree(args);\n  };\n  NavigationPane.prototype.onRenameInit = function () {\n    if (this.parent.activeModule === 'navigationpane') {\n      this.updateRenameData();\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onRenameEndParent = function (args) {\n    var id = this.renameParent ? this.renameParent : this.parent.pathId[this.parent.pathId.length - 1];\n    this.expandTree = this.treeObj.expandedNodes.indexOf(this.treeObj.selectedNodes[0]) !== -1;\n    this.updateTreeNode(args, id);\n    this.parent.expandedId = null;\n    if (this.renameParent) {\n      this.renameParent = null;\n    } else {\n      // eslint-disable-next-line\n      var resultData = [];\n      if (this.parent.hasId) {\n        resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n      } else {\n        // eslint-disable-next-line\n        var nData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.renameText, false));\n        if (nData.length > 0) {\n          resultData = new DataManager(nData).executeLocal(new Query().where('_fm_pId', 'equal', id, false));\n        }\n      }\n      if (resultData.length > 0) {\n        this.isRenameParent = true;\n        var id_1 = getValue(this.treeObj.fields.id, resultData[0]);\n        this.treeObj.selectedNodes = [id_1];\n        this.treeObj.dataBind();\n      }\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onRenameEnd = function (args) {\n    if (this.parent.breadcrumbbarModule.searchObj.element.value === '' && !this.parent.isFiltered) {\n      this.updateTree(args);\n    } else {\n      // eslint-disable-next-line\n      var data = this.treeObj.getTreeData();\n      // eslint-disable-next-line\n      var resultData = [];\n      if (this.parent.hasId) {\n        resultData = new DataManager(data).executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n      } else {\n        // eslint-disable-next-line\n        var nData = new DataManager(data).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.currentItemText, false));\n        if (nData.length > 0) {\n          resultData = new DataManager(nData).executeLocal(new Query().where('filterPath', 'equal', this.parent.filterPath, false));\n        }\n      }\n      if (resultData.length > 0) {\n        this.renameParent = getValue(this.treeObj.fields.parentID, resultData[0]);\n        this.parent.expandedId = this.renameParent;\n        this.parent.itemData = this.getTreeData(this.renameParent);\n        read(this.parent, events.renameEndParent, this.parent.filterPath.replace(/\\\\/g, '/'));\n      }\n    }\n  };\n  NavigationPane.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName() && e.module !== 'common') {\n      /* istanbul ignore next */\n      return;\n    }\n    for (var _i = 0, _a = Object.keys(e.newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'allowDragAndDrop':\n          this.addDragDrop();\n          break;\n        case 'navigationPaneSettings':\n          read(this.parent, events.finalizeEnd, '/');\n          if (e.oldProp.navigationPaneSettings.sortOrder !== e.newProp.navigationPaneSettings.sortOrder) {\n            this.treeObj.sortOrder = e.newProp.navigationPaneSettings.sortOrder;\n          }\n          break;\n      }\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDownLoadInit = function () {\n    this.doDownload();\n  };\n  NavigationPane.prototype.onSelectionChanged = function (e) {\n    this.treeObj.selectedNodes = [e.selectedNode];\n  };\n  NavigationPane.prototype.onClearPathInit = function (e) {\n    this.removeChildNodes(e.selectedNode);\n  };\n  NavigationPane.prototype.onDragEnd = function (args) {\n    var moveNames = [];\n    if (this.parent.isPasteError || this.parent.isSearchDrag) {\n      moveNames = this.getMoveNames(args.files, this.parent.isSearchDrag, this.parent.dragPath);\n    } else {\n      moveNames = this.moveNames;\n    }\n    this.treeObj.removeNodes(moveNames);\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.getMoveNames = function (files, flag, path) {\n    var moveNames = [];\n    for (var i = 0; i < files.length; i++) {\n      if (!files[i].isFile) {\n        if (!this.parent.hasId) {\n          var name_2 = files[i].previousName;\n          if (flag) {\n            path = path + files[i].previousName;\n            var index = path.lastIndexOf('/');\n            name_2 = path.substring(index + 1);\n            path = path.substring(0, index + 1);\n          }\n          // eslint-disable-next-line\n          var resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', name_2, false));\n          for (var j = 0; j < resultData.length; j++) {\n            var fPath = getValue('filterPath', resultData[j]);\n            fPath = fPath.replace(/\\\\/g, '/');\n            if (fPath === path) {\n              moveNames.push(getValue(this.treeObj.fields.id, resultData[j]));\n              break;\n            }\n          }\n        }\n      }\n    }\n    return moveNames;\n  };\n  NavigationPane.prototype.onCutEnd = function (args) {\n    var moveNames = [];\n    if (this.parent.isPasteError || this.parent.isSearchCut) {\n      this.moveNames = this.getMoveNames(args.files, this.parent.isSearchCut, this.parent.targetPath);\n    } else {\n      moveNames = this.moveNames;\n    }\n    this.treeObj.removeNodes(moveNames);\n  };\n  /* istanbul ignore next */\n  // eslint-disable-next-line\n  NavigationPane.prototype.selectResultNode = function (resultObj) {\n    if (!this.parent.hasId) {\n      var path = getValue('filterPath', resultObj);\n      var itemname = getValue('name', resultObj);\n      // eslint-disable-next-line\n      var data = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', itemname, false));\n      if (data.length > 0) {\n        // eslint-disable-next-line\n        var resultData = new DataManager(data).executeLocal(new Query().where('filterPath', 'equal', path, false));\n        if (resultData.length > 0) {\n          var id = getValue(this.treeObj.fields.id, resultData[0]);\n          this.treeObj.selectedNodes = [id];\n          this.treeObj.dataBind();\n        }\n      }\n    } else {\n      this.treeObj.selectedNodes = [getValue('_fm_id', resultObj)];\n      this.treeObj.dataBind();\n    }\n  };\n  NavigationPane.prototype.onDropPath = function (args) {\n    this.onpasteEnd(args);\n    this.selectResultNode(this.parent.dropData);\n    this.parent.isDropEnd = !this.parent.isPasteError;\n  };\n  NavigationPane.prototype.onpasteEnd = function (args) {\n    // eslint-disable-next-line\n    var resultData = [];\n    if (this.parent.hasId) {\n      resultData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where('id', 'equal', getValue('id', args.cwd), false));\n    } else {\n      // eslint-disable-next-line\n      var nData = new DataManager(this.treeObj.getTreeData()).executeLocal(new Query().where(this.treeObj.fields.text, 'equal', getValue('name', args.cwd), false));\n      if (nData.length > 0) {\n        resultData = new DataManager(nData).executeLocal(new Query().where('filterPath', 'equal', getValue('filterPath', args.cwd), false));\n      }\n    }\n    if (resultData.length > 0) {\n      var id = getValue(this.treeObj.fields.id, resultData[0]);\n      var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1;\n      this.removeChildNodes(id);\n      this.addChild(args.files, id, toExpand);\n    }\n    this.parent.expandedId = null;\n    this.onPathChanged(args);\n    if (this.parent.isDragDrop) {\n      this.checkDropPath(args);\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.checkDropPath = function (args) {\n    if (this.parent.hasId) {\n      this.parent.isDropEnd = !this.parent.isPasteError;\n      readDropPath(this.parent);\n      return;\n    }\n    if (this.parent.dropPath.indexOf(getDirectoryPath(this.parent, args)) === -1) {\n      this.parent.isDropEnd = false;\n      readDropPath(this.parent);\n    } else {\n      this.parent.isDropEnd = !this.parent.isPasteError;\n    }\n  };\n  NavigationPane.prototype.onpasteInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      this.updateItemData();\n    }\n    this.moveNames = [];\n    // eslint-disable-next-line\n    var obj = this.parent.isDragDrop ? this.parent.dragData : this.parent.actionRecords;\n    for (var i = 0; i < obj.length; i++) {\n      if (getValue('isFile', obj[i]) === false) {\n        this.moveNames.push(getValue('_fm_id', obj[i]));\n      }\n    }\n  };\n  NavigationPane.prototype.oncutCopyInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      this.parent.activeRecords = this.getTreeData(this.treeObj.selectedNodes[0]);\n      this.parent.activeElements = [this.activeNode];\n    }\n  };\n  NavigationPane.prototype.addEventListener = function () {\n    this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.downloadInit, this.onDownLoadInit, this);\n    this.parent.on(events.initialEnd, this.onInitialEnd, this);\n    this.parent.on(events.finalizeEnd, this.onFinalizeEnd, this);\n    this.parent.on(events.pathChanged, this.onPathChanged, this);\n    this.parent.on(events.pasteEnd, this.onpasteEnd, this);\n    this.parent.on(events.cutEnd, this.onCutEnd, this);\n    this.parent.on(events.pasteInit, this.onpasteInit, this);\n    this.parent.on(events.nodeExpand, this.onNodeExpanded, this);\n    this.parent.on(events.createEnd, this.onCreateEnd, this);\n    this.parent.on(events.selectedData, this.onSelectedData, this);\n    this.parent.on(events.deleteInit, this.onDeleteInit, this);\n    this.parent.on(events.deleteEnd, this.onDeleteEnd, this);\n    this.parent.on(events.refreshEnd, this.onRefreshEnd, this);\n    this.parent.on(events.updateTreeSelection, this.onSelectionChanged, this);\n    this.parent.on(events.openInit, this.onOpenInit, this);\n    this.parent.on(events.openEnd, this.onOpenEnd, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.renameInit, this.onRenameInit, this);\n    this.parent.on(events.renameEnd, this.onRenameEnd, this);\n    this.parent.on(events.renameEndParent, this.onRenameEndParent, this);\n    this.parent.on(events.clearPathInit, this.onClearPathInit, this);\n    this.parent.on(events.cutCopyInit, this.oncutCopyInit, this);\n    this.parent.on(events.dropInit, this.onDropInit, this);\n    this.parent.on(events.menuItemData, this.onMenuItemData, this);\n    this.parent.on(events.dragEnd, this.onDragEnd, this);\n    this.parent.on(events.dragging, this.onDragging, this);\n    this.parent.on(events.dropPath, this.onDropPath, this);\n    this.parent.on(events.detailsInit, this.onDetailsInit, this);\n    this.parent.on(events.pathDrag, this.onPathDrag, this);\n  };\n  NavigationPane.prototype.removeEventListener = function () {\n    this.parent.off(events.initialEnd, this.onInitialEnd);\n    this.parent.off(events.downloadInit, this.onDownLoadInit);\n    this.parent.off(events.finalizeEnd, this.onFinalizeEnd);\n    this.parent.off(events.selectedData, this.onSelectedData);\n    this.parent.off(events.modelChanged, this.onPropertyChanged);\n    this.parent.off(events.pathChanged, this.onPathChanged);\n    this.parent.off(events.pasteEnd, this.onpasteEnd);\n    this.parent.off(events.cutEnd, this.onCutEnd);\n    this.parent.off(events.pasteInit, this.onpasteInit);\n    this.parent.off(events.updateTreeSelection, this.onSelectionChanged);\n    this.parent.off(events.nodeExpand, this.onNodeExpanded);\n    this.parent.off(events.createEnd, this.onCreateEnd);\n    this.parent.off(events.refreshEnd, this.onRefreshEnd);\n    this.parent.off(events.openInit, this.onOpenInit);\n    this.parent.off(events.openEnd, this.onOpenEnd);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.renameInit, this.onRenameInit);\n    this.parent.off(events.renameEnd, this.onRenameEnd);\n    this.parent.off(events.renameEndParent, this.onRenameEndParent);\n    this.parent.off(events.clearPathInit, this.onClearPathInit);\n    this.parent.off(events.deleteInit, this.onDeleteInit);\n    this.parent.off(events.deleteEnd, this.onDeleteEnd);\n    this.parent.off(events.cutCopyInit, this.oncutCopyInit);\n    this.parent.off(events.dropInit, this.onDropInit);\n    this.parent.off(events.dragEnd, this.onDragEnd);\n    this.parent.off(events.dragging, this.onDragging);\n    this.parent.off(events.dropPath, this.onDropPath);\n    this.parent.off(events.detailsInit, this.onDetailsInit);\n    this.parent.off(events.menuItemData, this.onMenuItemData);\n    this.parent.off(events.pathDrag, this.onPathDrag);\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDetailsInit = function () {\n    if (this.parent.activeModule === this.getModuleName()) {\n      // eslint-disable-next-line\n      var dataobj = this.getTreeData(this.treeObj.selectedNodes[0]);\n      this.parent.itemData = dataobj;\n    }\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.onMenuItemData = function (args) {\n    if (this.parent.activeModule === this.getModuleName()) {\n      var liEle = closest(args.target, 'li');\n      this.parent.itemData = this.getTreeData(liEle.getAttribute('data-uid'));\n    }\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.onDragging = function (args) {\n    var ele = closest(args.target, 'li');\n    if (ele.classList.contains('e-node-collapsed')) {\n      this.isDrag = true;\n      var level = parseInt(ele.getAttribute('aria-level'), 10);\n      this.treeObj.expandAll([ele.getAttribute('data-uid')], level + 1);\n      this.isDrag = false;\n    }\n  };\n  NavigationPane.prototype.onDropInit = function (args) {\n    if (this.parent.targetModule === this.getModuleName()) {\n      var dropLi = closest(args.target, 'li');\n      this.parent.dropData = this.getTreeData(dropLi)[0];\n      this.parent.dropPath = this.getDropPath(dropLi, getValue('name', this.parent.dropData));\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} - returns the module name.\n   * @private\n   */\n  NavigationPane.prototype.getModuleName = function () {\n    return 'navigationpane';\n  };\n  NavigationPane.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.removeEventListener();\n    if (this.treeObj) {\n      this.unWireEvents();\n      this.treeObj.destroy();\n    }\n  };\n  NavigationPane.prototype.wireEvents = function () {\n    this.keyboardModule = new KeyboardEvents(this.treeObj.element, {\n      keyAction: this.keyDown.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  };\n  NavigationPane.prototype.unWireEvents = function () {\n    this.keyboardModule.destroy();\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.keyDown = function (e) {\n    var action = e.action;\n    switch (action) {\n      case 'altEnter':\n        this.parent.notify(events.detailsInit, {});\n        GetDetails(this.parent, [], this.parent.path, 'details');\n        break;\n      case 'esc':\n        removeActive(this.parent);\n        break;\n      case 'del':\n        if (this.parent.pathId[0] !== this.activeNode.getAttribute('data-uid')) {\n          this.updateItemData();\n          if (!hasEditAccess(this.parent.itemData[0])) {\n            createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionEdit);\n          } else {\n            this.removeNodes = [];\n            createDialog(this.parent, 'Delete');\n          }\n        }\n        break;\n      case 'ctrlC':\n        copyFiles(this.parent);\n        break;\n      case 'ctrlV':\n        this.parent.folderPath = '';\n        pasteHandler(this.parent);\n        break;\n      case 'ctrlX':\n        cutFiles(this.parent);\n        break;\n      case 'shiftF10':\n        this.updateItemData();\n        if (!hasDownloadAccess(this.parent.itemData[0])) {\n          createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionDownload);\n          return;\n        }\n        if (this.parent.selectedItems.length !== 0) {\n          this.doDownload();\n        }\n        break;\n      case 'f2':\n        if (this.parent.selectedItems.length === 0) {\n          // eslint-disable-next-line\n          var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n          if (!hasEditAccess(data)) {\n            createDeniedDialog(this.parent, data, events.permissionEdit);\n          } else {\n            this.updateRenameData();\n            createDialog(this.parent, 'Rename');\n          }\n        }\n        break;\n    }\n  };\n  // eslint-disable-next-line\n  NavigationPane.prototype.getTreeData = function (args) {\n    // eslint-disable-next-line\n    var data = this.treeObj.getTreeData(args);\n    for (var i = 0; i < data.length; i++) {\n      if (isNOU(getValue('hasChild', data[i]))) {\n        setValue('hasChild', false, data[i]);\n      }\n    }\n    return data;\n  };\n  NavigationPane.prototype.updateRenameData = function () {\n    this.updateItemData();\n    this.parent.currentItemText = getValue('name', this.parent.itemData[0]);\n  };\n  NavigationPane.prototype.updateItemData = function () {\n    // eslint-disable-next-line\n    var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n    this.parent.itemData = [data];\n    this.parent.isFile = false;\n  };\n  NavigationPane.prototype.updateActionData = function () {\n    this.updateItemData();\n    var newPath = getParentPath(this.parent.path);\n    this.parent.setProperties({\n      path: newPath\n    }, true);\n    this.parent.pathId.pop();\n    this.parent.pathNames.pop();\n  };\n  /* istanbul ignore next */\n  NavigationPane.prototype.doDownload = function () {\n    var newPath = getParentPath(this.parent.path);\n    var itemId = this.treeObj.selectedNodes[0];\n    var name = itemId === this.parent.pathId[0] ? '' : getValue('name', this.parent.itemData[0]);\n    Download(this.parent, newPath, [name]);\n  };\n  return NavigationPane;\n}();\nexport { NavigationPane };","map":{"version":3,"names":["TreeView","BaseTreeView","isNullOrUndefined","isNOU","select","setValue","getValue","Draggable","KeyboardEvents","closest","DataManager","Query","events","CLS","read","Download","GetDetails","Delete","createDialog","updatePath","getPath","getDirectories","createVirtualDragElement","dragStopHandler","dragStartHandler","draggingHandler","getDirectoryPath","getModule","copyFiles","cutFiles","removeActive","pasteHandler","getParentPath","readDropPath","hasEditAccess","createDeniedDialog","hasDownloadAccess","getAccessClass","NavigationPane","parent","removeNodes","moveNames","expandTree","isDrag","isPathDragged","isRenameParent","isRightClick","renameParent","previousSelected","isNodeClickCalled","restrictSelecting","addEventListener","keyConfigs","altEnter","esc","del","ctrlX","ctrlC","ctrlV","ctrlShiftN","shiftF10","f2","prototype","onInit","treeObj","rootData","pathId","feParent","attr","id","fields","dataSource","parentID","expanded","selected","text","hasChildren","iconCss","htmlAttributes","tooltip","enableHtmlSanitizer","sortOrder","navigationPaneSettings","nodeSelecting","onNodeSelecting","bind","nodeSelected","onNodeSelected","nodeExpanding","onNodeExpand","nodeClicked","onNodeClicked","allowEditing","nodeEditing","onNodeEditing","drawNode","onDrowNode","enableRtl","dataBound","addDragDrop","isStringTemplate","appendTo","element","TREE_ID","wireEvents","_this","isMobile","allowDragAndDrop","dragObj","destroy","cursorAt","dragCursorPosition","dragTarget","FULLROW","distance","dragArea","drag","dragStart","args","dragStop","enableTailMode","enableAutoScroll","helper","dragHelper","sender","target","classList","contains","dragLi","dragPath","dragData","activeElements","dragNodes","getTreeData","getDragPath","name","push","virtualDragElement","path","getDropPath","node","getAttribute","newText","hasId","eventArgs","fileDetails","nodeData","module","trigger","addChild","files","prevent","directories","length","length_1","folders","_fm_icon","addNodes","isInteracted","activeModule","cancel","selectedNodes","contextmenuModule","contextMenu","enableItems","openFileOnContextMenuClick","data","selectedItems","itemData","activeNode","pasteEnd","pathChanged","visitedItem","breadcrumbbarModule","searchObj","value","isFiltered","searchedItems","previousPath","expandNodeTarget","querySelector","ICONS","LIST_ITEM","onPathDrag","selectResultNode","isId","expandedId","nodeExpand","onNodeExpanded","event","which","setProperties","layout","view","notify","modelChanged","newProp","innerHtml","onPathChanged","isCut","currFiles","feFiles","sNode","ul","LIST_PARENT","updateTree","updateTreeNode","toExpand","expandedNodes","indexOf","removeChildNodes","childs","Array","slice","call","children","onOpenEnd","sleId","expandAll","onOpenInit","onInitialEnd","cwd","onFinalizeEnd","onCreateEnd","onSelectedData","updateItemData","onDeleteInit","updateActionData","name_1","onDeleteEnd","selectedNode","selcetedEle","selectedNodeEle","parentElement","dataBind","onRefreshEnd","onRenameInit","updateRenameData","onRenameEndParent","resultData","executeLocal","where","renamedId","nData","renameText","id_1","onRenameEnd","currentItemText","filterPath","renameEndParent","replace","onPropertyChanged","e","getModuleName","_i","_a","Object","keys","prop","finalizeEnd","oldProp","onDownLoadInit","doDownload","onSelectionChanged","onClearPathInit","onDragEnd","isPasteError","isSearchDrag","getMoveNames","flag","i","isFile","name_2","previousName","index","lastIndexOf","substring","j","fPath","onCutEnd","isSearchCut","targetPath","resultObj","itemname","onDropPath","onpasteEnd","dropData","isDropEnd","isDragDrop","checkDropPath","dropPath","onpasteInit","obj","actionRecords","oncutCopyInit","activeRecords","on","downloadInit","initialEnd","cutEnd","pasteInit","createEnd","selectedData","deleteInit","deleteEnd","refreshEnd","updateTreeSelection","openInit","openEnd","renameInit","renameEnd","clearPathInit","cutCopyInit","dropInit","onDropInit","menuItemData","onMenuItemData","dragEnd","dragging","onDragging","detailsInit","onDetailsInit","pathDrag","removeEventListener","off","dataobj","liEle","ele","level","parseInt","targetModule","dropLi","isDestroyed","unWireEvents","keyboardModule","keyAction","keyDown","eventName","action","permissionEdit","folderPath","permissionDownload","newPath","pop","pathNames","itemId"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-filemanager/src/file-manager/layout/navigation-pane.js"],"sourcesContent":["import { TreeView as BaseTreeView } from '@syncfusion/ej2-navigations';\nimport { isNullOrUndefined as isNOU, select, setValue, getValue, Draggable } from '@syncfusion/ej2-base';\nimport { KeyboardEvents, closest } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport * as CLS from '../base/classes';\nimport { read, Download, GetDetails, Delete } from '../common/operations';\nimport { createDialog } from '../pop-up/dialog';\nimport { updatePath, getPath, getDirectories } from '../common/utility';\nimport { createVirtualDragElement, dragStopHandler, dragStartHandler, draggingHandler, getDirectoryPath, getModule } from '../common/index';\nimport { copyFiles, cutFiles, removeActive, pasteHandler, getParentPath, readDropPath } from '../common/index';\nimport { hasEditAccess, createDeniedDialog, hasDownloadAccess, getAccessClass } from '../common/index';\n/**\n * NavigationPane module\n */\nvar NavigationPane = /** @class */ (function () {\n    /**\n     * Constructor for the TreeView module\n     *\n     * @param {IFileManager} parent - specifies the parent element.\n     * @hidden\n     */\n    function NavigationPane(parent) {\n        this.removeNodes = [];\n        this.moveNames = [];\n        this.expandTree = false;\n        this.isDrag = false;\n        this.isPathDragged = false;\n        this.isRenameParent = false;\n        this.isRightClick = false;\n        this.renameParent = null;\n        // Specifies the previously selected nodes in the treeview control.\n        this.previousSelected = null;\n        // Specifies whether the nodeClicked event of the treeview control is triggered or not.\n        this.isNodeClickCalled = false;\n        // Specifies whether to restrict node selection in the treeview control.\n        this.restrictSelecting = false;\n        this.parent = parent;\n        this.addEventListener();\n        this.keyConfigs = {\n            altEnter: 'alt+enter',\n            esc: 'escape',\n            del: 'delete',\n            ctrlX: 'ctrl+x',\n            ctrlC: 'ctrl+c',\n            ctrlV: 'ctrl+v',\n            ctrlShiftN: 'ctrl+shift+n',\n            shiftF10: 'shift+F10',\n            f2: 'f2'\n        };\n    }\n    NavigationPane.prototype.onInit = function () {\n        if (!isNOU(this.treeObj)) {\n            return;\n        }\n        // eslint-disable-next-line\n        var rootData = getValue(this.parent.pathId[0], this.parent.feParent);\n        setValue('_fm_icon', 'e-fe-folder', rootData);\n        // eslint-disable-next-line\n        var attr = {};\n        var id = getValue('id', rootData);\n        if (!isNOU(id)) {\n            setValue('data-id', id, attr);\n        }\n        if (!hasEditAccess(rootData)) {\n            setValue('class', getAccessClass(rootData), attr);\n        }\n        if (!isNOU(attr)) {\n            setValue('_fm_htmlAttr', attr, rootData);\n        }\n        this.treeObj = new BaseTreeView({\n            fields: {\n                dataSource: [rootData], id: '_fm_id', parentID: '_fm_pId', expanded: '_fm_expanded', selected: '_fm_selected', text: 'name',\n                hasChildren: 'hasChild', iconCss: '_fm_icon', htmlAttributes: '_fm_htmlAttr', tooltip: 'name'\n            },\n            enableHtmlSanitizer: this.parent.enableHtmlSanitizer,\n            sortOrder: this.parent.navigationPaneSettings.sortOrder,\n            nodeSelecting: this.onNodeSelecting.bind(this),\n            nodeSelected: this.onNodeSelected.bind(this),\n            nodeExpanding: this.onNodeExpand.bind(this),\n            nodeClicked: this.onNodeClicked.bind(this),\n            allowEditing: true,\n            nodeEditing: this.onNodeEditing.bind(this),\n            drawNode: this.onDrowNode.bind(this),\n            enableRtl: this.parent.enableRtl,\n            dataBound: this.addDragDrop.bind(this)\n        });\n        this.treeObj.isStringTemplate = true;\n        this.treeObj.appendTo('#' + this.parent.element.id + CLS.TREE_ID);\n        this.wireEvents();\n    };\n    NavigationPane.prototype.addDragDrop = function () {\n        var _this = this;\n        if (!this.parent.isMobile && this.treeObj) {\n            if (this.parent.allowDragAndDrop) {\n                if (this.dragObj) {\n                    this.dragObj.destroy();\n                }\n                this.dragObj = new Draggable(this.treeObj.element, {\n                    cursorAt: this.parent.dragCursorPosition,\n                    dragTarget: '.' + CLS.FULLROW,\n                    distance: 5,\n                    dragArea: this.parent.element,\n                    drag: draggingHandler.bind(this, this.parent),\n                    dragStart: function (args) {\n                        dragStartHandler(_this.parent, args, _this.dragObj);\n                    },\n                    dragStop: dragStopHandler.bind(this, this.parent),\n                    enableTailMode: true,\n                    enableAutoScroll: true,\n                    helper: this.dragHelper.bind(this)\n                });\n            }\n            else if (!this.parent.allowDragAndDrop && this.dragObj) {\n                this.dragObj.destroy();\n            }\n        }\n    };\n    NavigationPane.prototype.dragHelper = function (args) {\n        var dragTarget = args.sender.target;\n        if (!dragTarget.classList.contains(CLS.FULLROW)) {\n            return null;\n        }\n        var dragLi = closest(dragTarget, 'li');\n        this.parent.dragPath = '';\n        this.parent.dragData = [];\n        this.parent.activeElements = [];\n        this.parent.activeElements = [dragLi];\n        this.parent.dragNodes = [];\n        getModule(this.parent, dragLi);\n        // eslint-disable-next-line\n        this.parent.dragData = this.getTreeData(dragLi);\n        this.parent.dragPath = this.getDragPath(dragLi, this.parent.dragData[0].name);\n        this.parent.dragNodes.push(this.parent.dragData[0].name);\n        createVirtualDragElement(this.parent);\n        return this.parent.virtualDragElement;\n    };\n    NavigationPane.prototype.getDragPath = function (dragLi, text) {\n        var path = this.getDropPath(dragLi, text);\n        return getParentPath(path);\n    };\n    NavigationPane.prototype.getDropPath = function (node, text) {\n        var id = node.getAttribute('data-id');\n        var newText = this.parent.hasId ? id : text;\n        return getPath(node, newText, this.parent.hasId);\n    };\n    NavigationPane.prototype.onDrowNode = function (args) {\n        var eventArgs = {\n            element: args.node,\n            fileDetails: args.nodeData,\n            module: 'NavigationPane'\n        };\n        this.parent.trigger('fileLoad', eventArgs);\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.addChild = function (files, target, prevent) {\n        // eslint-disable-next-line\n        var directories = getDirectories(files);\n        if (directories.length > 0) {\n            var length_1 = 0;\n            // eslint-disable-next-line\n            var folders = directories;\n            while (length_1 < directories.length) {\n                // eslint-disable-next-line\n                folders[length_1]._fm_icon = 'e-fe-folder';\n                // eslint-disable-next-line\n                var attr = {};\n                var id = getValue('id', folders[length_1]);\n                if (!isNOU(id)) {\n                    setValue('data-id', id, attr);\n                }\n                if (!hasEditAccess(folders[length_1])) {\n                    setValue('class', getAccessClass(folders[length_1]), attr);\n                }\n                if (!isNOU(attr)) {\n                    setValue('_fm_htmlAttr', attr, folders[length_1]);\n                }\n                length_1++;\n            }\n            // eslint-disable-next-line\n            this.treeObj.addNodes(directories, target, null, prevent);\n        }\n    };\n    // Node Selecting event handler\n    NavigationPane.prototype.onNodeSelecting = function (args) {\n        if (!args.isInteracted && !this.isRightClick && !this.isPathDragged && !this.isRenameParent || this.restrictSelecting) {\n            this.restrictSelecting = false;\n            this.isNodeClickCalled = false;\n            return;\n        }\n        if (!this.renameParent) {\n            this.parent.activeModule = 'navigationpane';\n            // eslint-disable-next-line\n            var nodeData = this.getTreeData(getValue('id', args.nodeData));\n            var eventArgs = { cancel: false, fileDetails: nodeData[0], module: 'NavigationPane' };\n            this.parent.trigger('fileOpen', eventArgs);\n            args.cancel = eventArgs.cancel;\n            if (args.cancel) {\n                this.restrictSelecting = this.isNodeClickCalled ? this.previousSelected[0] != args.node.getAttribute('data-uid') : false;\n                this.treeObj.selectedNodes = this.isNodeClickCalled ? this.previousSelected : this.treeObj.selectedNodes;\n                this.previousSelected = this.treeObj.selectedNodes;\n                if (!isNOU(this.parent) && !isNOU(this.parent.contextmenuModule)) {\n                    this.parent.contextmenuModule.contextMenu.enableItems(['Open'], true);\n                }\n            }\n        }\n    };\n    // Opens the folder while clicking open context menu item in the treeview.\n    NavigationPane.prototype.openFileOnContextMenuClick = function (node) {\n        var data = this.treeObj.getTreeData(node);\n        // eslint-disable-next-line\n        this.parent.selectedItems = [];\n        this.parent.itemData = data;\n        this.activeNode = node;\n        this.parent.activeModule = 'navigationpane';\n        updatePath(node, this.parent.itemData[0], this.parent);\n        read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n        this.parent.visitedItem = node;\n        this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n        this.treeObj.selectedNodes = [node.getAttribute('data-uid')];\n    };\n    NavigationPane.prototype.onNodeSelected = function (args) {\n        if (this.parent.breadcrumbbarModule && this.parent.breadcrumbbarModule.searchObj && !this.renameParent) {\n            this.parent.breadcrumbbarModule.searchObj.element.value = '';\n            this.parent.isFiltered = false;\n        }\n        this.parent.searchedItems = [];\n        if (!args.isInteracted && !this.isRightClick && !this.isPathDragged && !this.isRenameParent) {\n            return;\n        }\n        this.activeNode = args.node;\n        this.parent.activeModule = 'navigationpane';\n        // eslint-disable-next-line\n        var nodeData = this.getTreeData(getValue('id', args.nodeData));\n        this.parent.selectedItems = [];\n        this.parent.itemData = nodeData;\n        var previousPath = this.parent.path;\n        updatePath(args.node, this.parent.itemData[0], this.parent);\n        if (previousPath !== this.parent.path) {\n            this.expandNodeTarget = null;\n            if (args.node.querySelector('.' + CLS.ICONS) && args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n                this.expandNodeTarget = 'add';\n            }\n            read(this.parent, this.isPathDragged ? events.pasteEnd : events.pathChanged, this.parent.path);\n            this.parent.visitedItem = args.node;\n        }\n        this.isPathDragged = this.isRenameParent = this.isRightClick = false;\n    };\n    /* istanbul ignore next */\n    // eslint-disable-next-line\n    NavigationPane.prototype.onPathDrag = function (args) {\n        this.isPathDragged = true;\n        this.selectResultNode(args[0]);\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeExpand = function (args) {\n        if (!args.isInteracted && !this.isDrag) {\n            return;\n        }\n        if (args.node.querySelector('.' + CLS.LIST_ITEM) === null) {\n            var text = getValue('text', args.nodeData);\n            var id = args.node.getAttribute('data-id');\n            var isId = isNOU(id) ? false : true;\n            var newText = isNOU(id) ? text : id;\n            var path = getPath(args.node, newText, isId);\n            this.expandNodeTarget = args.node.getAttribute('data-uid');\n            this.parent.expandedId = this.expandNodeTarget;\n            this.parent.itemData = this.getTreeData(getValue('id', args.nodeData));\n            read(this.parent, events.nodeExpand, path);\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeExpanded = function (args) {\n        this.addChild(args.files, this.expandNodeTarget, false);\n        this.parent.expandedId = null;\n    };\n    NavigationPane.prototype.onNodeClicked = function (args) {\n        this.parent.activeModule = 'navigationpane';\n        this.previousSelected = this.treeObj.selectedNodes;\n        this.activeNode = args.node;\n        if ((args.event.which === 3) && (args.node.getAttribute('data-uid') !== this.treeObj.selectedNodes[0])) {\n            this.isRightClick = true;\n            this.isNodeClickCalled = true;\n            this.treeObj.selectedNodes = [args.node.getAttribute('data-uid')];\n        }\n        else if (args.node.getAttribute('data-uid') === this.treeObj.selectedNodes[0] && this.parent.selectedItems.length !== 0) {\n            this.parent.setProperties({ selectedItems: [] }, true);\n            var layout = (this.parent.view === 'LargeIcons') ? 'largeiconsview' : 'detailsview';\n            this.parent.notify(events.modelChanged, { module: layout, newProp: { selectedItems: [] } });\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onNodeEditing = function (args) {\n        if (!isNOU(args.innerHtml)) {\n            args.cancel = true;\n        }\n    };\n    NavigationPane.prototype.onPathChanged = function (args) {\n        this.parent.isCut = false;\n        // eslint-disable-next-line\n        var currFiles = getValue(this.parent.pathId[this.parent.pathId.length - 1], this.parent.feFiles);\n        if (this.expandNodeTarget === 'add') {\n            var sNode = select('[data-uid=\"' + this.treeObj.selectedNodes[0] + '\"]', this.treeObj.element);\n            var ul = select('.' + CLS.LIST_PARENT, sNode);\n            if (isNOU(ul)) {\n                this.addChild(args.files, this.treeObj.selectedNodes[0], !this.expandTree);\n            }\n            this.expandNodeTarget = '';\n        }\n        this.expandTree = false;\n        if (isNOU(currFiles)) {\n            setValue(this.parent.pathId[this.parent.pathId.length - 1], args.files, this.parent.feFiles);\n        }\n    };\n    NavigationPane.prototype.updateTree = function (args) {\n        if (this.treeObj) {\n            var id = this.treeObj.selectedNodes[0];\n            this.updateTreeNode(args, id);\n        }\n    };\n    NavigationPane.prototype.updateTreeNode = function (args, id) {\n        var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1 ? false : true;\n        this.removeChildNodes(id);\n        this.addChild(args.files, id, !toExpand);\n    };\n    NavigationPane.prototype.removeChildNodes = function (id) {\n        var sNode = select('[data-uid=\"' + id + '\"]', this.treeObj.element);\n        var parent = select('.' + CLS.LIST_PARENT, sNode);\n        var childs = parent ? Array.prototype.slice.call(parent.children) : null;\n        if (childs) {\n            this.treeObj.removeNodes(childs);\n        }\n    };\n    NavigationPane.prototype.onOpenEnd = function (args) {\n        var sleId = this.parent.pathId[this.parent.pathId.length - 1];\n        this.treeObj.expandAll(this.treeObj.selectedNodes);\n        this.treeObj.selectedNodes = [sleId];\n        this.expandNodeTarget = 'add';\n        this.onPathChanged(args);\n    };\n    NavigationPane.prototype.onOpenInit = function (args) {\n        if (this.parent.activeModule === 'navigationpane') {\n            if (args.target.querySelector('.' + CLS.ICONS)) {\n                this.treeObj.expandAll(this.treeObj.selectedNodes);\n            }\n        }\n    };\n    NavigationPane.prototype.onInitialEnd = function (args) {\n        this.onInit();\n        this.addChild(args.files, getValue('_fm_id', args.cwd), false);\n    };\n    NavigationPane.prototype.onFinalizeEnd = function (args) {\n        this.onInit();\n        var id = getValue('_fm_id', args.cwd);\n        this.removeChildNodes(id);\n        this.addChild(args.files, id, false);\n        this.treeObj.selectedNodes = [this.parent.pathId[this.parent.pathId.length - 1]];\n    };\n    NavigationPane.prototype.onCreateEnd = function (args) {\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onSelectedData = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateItemData();\n        }\n    };\n    NavigationPane.prototype.onDeleteInit = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateActionData();\n            var name_1 = getValue('name', this.parent.itemData[0]);\n            Delete(this.parent, [name_1], this.parent.path, 'delete');\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDeleteEnd = function (args) {\n        if (this.parent.activeModule === 'navigationpane') {\n            var selectedNode = this.treeObj.selectedNodes[0];\n            var selcetedEle = select('[data-uid=\"' + selectedNode + '\"]', this.treeObj.element);\n            var selectedNodeEle = closest(selcetedEle, '.' + CLS.LIST_PARENT).parentElement;\n            this.treeObj.selectedNodes = [selectedNodeEle.getAttribute('data-uid')];\n            this.treeObj.dataBind();\n        }\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onRefreshEnd = function (args) {\n        this.updateTree(args);\n    };\n    NavigationPane.prototype.onRenameInit = function () {\n        if (this.parent.activeModule === 'navigationpane') {\n            this.updateRenameData();\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onRenameEndParent = function (args) {\n        var id = this.renameParent ? this.renameParent : this.parent.pathId[this.parent.pathId.length - 1];\n        this.expandTree = this.treeObj.expandedNodes.indexOf(this.treeObj.selectedNodes[0]) !== -1;\n        this.updateTreeNode(args, id);\n        this.parent.expandedId = null;\n        if (this.renameParent) {\n            this.renameParent = null;\n        }\n        else {\n            // eslint-disable-next-line\n            var resultData = [];\n            if (this.parent.hasId) {\n                resultData = new DataManager(this.treeObj.getTreeData()).\n                    executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n            }\n            else {\n                // eslint-disable-next-line\n                var nData = new DataManager(this.treeObj.getTreeData()).\n                    executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.renameText, false));\n                if (nData.length > 0) {\n                    resultData = new DataManager(nData).\n                        executeLocal(new Query().where('_fm_pId', 'equal', id, false));\n                }\n            }\n            if (resultData.length > 0) {\n                this.isRenameParent = true;\n                var id_1 = getValue(this.treeObj.fields.id, resultData[0]);\n                this.treeObj.selectedNodes = [id_1];\n                this.treeObj.dataBind();\n            }\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onRenameEnd = function (args) {\n        if (this.parent.breadcrumbbarModule.searchObj.element.value === '' && !this.parent.isFiltered) {\n            this.updateTree(args);\n        }\n        else {\n            // eslint-disable-next-line\n            var data = this.treeObj.getTreeData();\n            // eslint-disable-next-line\n            var resultData = [];\n            if (this.parent.hasId) {\n                resultData = new DataManager(data).\n                    executeLocal(new Query().where('id', 'equal', this.parent.renamedId, false));\n            }\n            else {\n                // eslint-disable-next-line\n                var nData = new DataManager(data).\n                    executeLocal(new Query().where(this.treeObj.fields.text, 'equal', this.parent.currentItemText, false));\n                if (nData.length > 0) {\n                    resultData = new DataManager(nData).\n                        executeLocal(new Query().where('filterPath', 'equal', this.parent.filterPath, false));\n                }\n            }\n            if (resultData.length > 0) {\n                this.renameParent = getValue(this.treeObj.fields.parentID, resultData[0]);\n                this.parent.expandedId = this.renameParent;\n                this.parent.itemData = this.getTreeData(this.renameParent);\n                read(this.parent, events.renameEndParent, this.parent.filterPath.replace(/\\\\/g, '/'));\n            }\n        }\n    };\n    NavigationPane.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName() && e.module !== 'common') {\n            /* istanbul ignore next */\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(e.newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowDragAndDrop':\n                    this.addDragDrop();\n                    break;\n                case 'navigationPaneSettings':\n                    read(this.parent, events.finalizeEnd, '/');\n                    if (e.oldProp.navigationPaneSettings.sortOrder !== e.newProp.navigationPaneSettings.sortOrder) {\n                        this.treeObj.sortOrder = e.newProp.navigationPaneSettings.sortOrder;\n                    }\n                    break;\n            }\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDownLoadInit = function () {\n        this.doDownload();\n    };\n    NavigationPane.prototype.onSelectionChanged = function (e) {\n        this.treeObj.selectedNodes = [e.selectedNode];\n    };\n    NavigationPane.prototype.onClearPathInit = function (e) {\n        this.removeChildNodes(e.selectedNode);\n    };\n    NavigationPane.prototype.onDragEnd = function (args) {\n        var moveNames = [];\n        if (this.parent.isPasteError || this.parent.isSearchDrag) {\n            moveNames = this.getMoveNames(args.files, this.parent.isSearchDrag, this.parent.dragPath);\n        }\n        else {\n            moveNames = this.moveNames;\n        }\n        this.treeObj.removeNodes(moveNames);\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.getMoveNames = function (files, flag, path) {\n        var moveNames = [];\n        for (var i = 0; i < files.length; i++) {\n            if (!files[i].isFile) {\n                if (!this.parent.hasId) {\n                    var name_2 = (files[i].previousName);\n                    if (flag) {\n                        path = path + files[i].previousName;\n                        var index = path.lastIndexOf('/');\n                        name_2 = path.substring(index + 1);\n                        path = path.substring(0, index + 1);\n                    }\n                    // eslint-disable-next-line\n                    var resultData = new DataManager(this.treeObj.getTreeData()).\n                        executeLocal(new Query().where(this.treeObj.fields.text, 'equal', name_2, false));\n                    for (var j = 0; j < resultData.length; j++) {\n                        var fPath = getValue('filterPath', resultData[j]);\n                        fPath = fPath.replace(/\\\\/g, '/');\n                        if (fPath === path) {\n                            moveNames.push(getValue(this.treeObj.fields.id, resultData[j]));\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return moveNames;\n    };\n    NavigationPane.prototype.onCutEnd = function (args) {\n        var moveNames = [];\n        if (this.parent.isPasteError || this.parent.isSearchCut) {\n            this.moveNames = this.getMoveNames(args.files, this.parent.isSearchCut, this.parent.targetPath);\n        }\n        else {\n            moveNames = this.moveNames;\n        }\n        this.treeObj.removeNodes(moveNames);\n    };\n    /* istanbul ignore next */\n    // eslint-disable-next-line\n    NavigationPane.prototype.selectResultNode = function (resultObj) {\n        if (!this.parent.hasId) {\n            var path = getValue('filterPath', resultObj);\n            var itemname = getValue('name', resultObj);\n            // eslint-disable-next-line\n            var data = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where(this.treeObj.fields.text, 'equal', itemname, false));\n            if (data.length > 0) {\n                // eslint-disable-next-line\n                var resultData = new DataManager(data).\n                    executeLocal(new Query().where('filterPath', 'equal', path, false));\n                if (resultData.length > 0) {\n                    var id = getValue(this.treeObj.fields.id, resultData[0]);\n                    this.treeObj.selectedNodes = [id];\n                    this.treeObj.dataBind();\n                }\n            }\n        }\n        else {\n            this.treeObj.selectedNodes = [getValue('_fm_id', resultObj)];\n            this.treeObj.dataBind();\n        }\n    };\n    NavigationPane.prototype.onDropPath = function (args) {\n        this.onpasteEnd(args);\n        this.selectResultNode(this.parent.dropData);\n        this.parent.isDropEnd = !this.parent.isPasteError;\n    };\n    NavigationPane.prototype.onpasteEnd = function (args) {\n        // eslint-disable-next-line\n        var resultData = [];\n        if (this.parent.hasId) {\n            resultData = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where('id', 'equal', getValue('id', args.cwd), false));\n        }\n        else {\n            // eslint-disable-next-line\n            var nData = new DataManager(this.treeObj.getTreeData()).\n                executeLocal(new Query().where(this.treeObj.fields.text, 'equal', getValue('name', args.cwd), false));\n            if (nData.length > 0) {\n                resultData = new DataManager(nData).\n                    executeLocal(new Query().where('filterPath', 'equal', getValue('filterPath', args.cwd), false));\n            }\n        }\n        if (resultData.length > 0) {\n            var id = getValue(this.treeObj.fields.id, resultData[0]);\n            var toExpand = this.treeObj.expandedNodes.indexOf(id) === -1;\n            this.removeChildNodes(id);\n            this.addChild(args.files, id, toExpand);\n        }\n        this.parent.expandedId = null;\n        this.onPathChanged(args);\n        if (this.parent.isDragDrop) {\n            this.checkDropPath(args);\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.checkDropPath = function (args) {\n        if (this.parent.hasId) {\n            this.parent.isDropEnd = !this.parent.isPasteError;\n            readDropPath(this.parent);\n            return;\n        }\n        if ((this.parent.dropPath.indexOf(getDirectoryPath(this.parent, args)) === -1)) {\n            this.parent.isDropEnd = false;\n            readDropPath(this.parent);\n        }\n        else {\n            this.parent.isDropEnd = !this.parent.isPasteError;\n        }\n    };\n    NavigationPane.prototype.onpasteInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            this.updateItemData();\n        }\n        this.moveNames = [];\n        // eslint-disable-next-line\n        var obj = this.parent.isDragDrop ? this.parent.dragData : this.parent.actionRecords;\n        for (var i = 0; i < obj.length; i++) {\n            if (getValue('isFile', obj[i]) === false) {\n                this.moveNames.push(getValue('_fm_id', obj[i]));\n            }\n        }\n    };\n    NavigationPane.prototype.oncutCopyInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            this.parent.activeRecords = this.getTreeData(this.treeObj.selectedNodes[0]);\n            this.parent.activeElements = [this.activeNode];\n        }\n    };\n    NavigationPane.prototype.addEventListener = function () {\n        this.parent.on(events.modelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.downloadInit, this.onDownLoadInit, this);\n        this.parent.on(events.initialEnd, this.onInitialEnd, this);\n        this.parent.on(events.finalizeEnd, this.onFinalizeEnd, this);\n        this.parent.on(events.pathChanged, this.onPathChanged, this);\n        this.parent.on(events.pasteEnd, this.onpasteEnd, this);\n        this.parent.on(events.cutEnd, this.onCutEnd, this);\n        this.parent.on(events.pasteInit, this.onpasteInit, this);\n        this.parent.on(events.nodeExpand, this.onNodeExpanded, this);\n        this.parent.on(events.createEnd, this.onCreateEnd, this);\n        this.parent.on(events.selectedData, this.onSelectedData, this);\n        this.parent.on(events.deleteInit, this.onDeleteInit, this);\n        this.parent.on(events.deleteEnd, this.onDeleteEnd, this);\n        this.parent.on(events.refreshEnd, this.onRefreshEnd, this);\n        this.parent.on(events.updateTreeSelection, this.onSelectionChanged, this);\n        this.parent.on(events.openInit, this.onOpenInit, this);\n        this.parent.on(events.openEnd, this.onOpenEnd, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.renameInit, this.onRenameInit, this);\n        this.parent.on(events.renameEnd, this.onRenameEnd, this);\n        this.parent.on(events.renameEndParent, this.onRenameEndParent, this);\n        this.parent.on(events.clearPathInit, this.onClearPathInit, this);\n        this.parent.on(events.cutCopyInit, this.oncutCopyInit, this);\n        this.parent.on(events.dropInit, this.onDropInit, this);\n        this.parent.on(events.menuItemData, this.onMenuItemData, this);\n        this.parent.on(events.dragEnd, this.onDragEnd, this);\n        this.parent.on(events.dragging, this.onDragging, this);\n        this.parent.on(events.dropPath, this.onDropPath, this);\n        this.parent.on(events.detailsInit, this.onDetailsInit, this);\n        this.parent.on(events.pathDrag, this.onPathDrag, this);\n    };\n    NavigationPane.prototype.removeEventListener = function () {\n        this.parent.off(events.initialEnd, this.onInitialEnd);\n        this.parent.off(events.downloadInit, this.onDownLoadInit);\n        this.parent.off(events.finalizeEnd, this.onFinalizeEnd);\n        this.parent.off(events.selectedData, this.onSelectedData);\n        this.parent.off(events.modelChanged, this.onPropertyChanged);\n        this.parent.off(events.pathChanged, this.onPathChanged);\n        this.parent.off(events.pasteEnd, this.onpasteEnd);\n        this.parent.off(events.cutEnd, this.onCutEnd);\n        this.parent.off(events.pasteInit, this.onpasteInit);\n        this.parent.off(events.updateTreeSelection, this.onSelectionChanged);\n        this.parent.off(events.nodeExpand, this.onNodeExpanded);\n        this.parent.off(events.createEnd, this.onCreateEnd);\n        this.parent.off(events.refreshEnd, this.onRefreshEnd);\n        this.parent.off(events.openInit, this.onOpenInit);\n        this.parent.off(events.openEnd, this.onOpenEnd);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.renameInit, this.onRenameInit);\n        this.parent.off(events.renameEnd, this.onRenameEnd);\n        this.parent.off(events.renameEndParent, this.onRenameEndParent);\n        this.parent.off(events.clearPathInit, this.onClearPathInit);\n        this.parent.off(events.deleteInit, this.onDeleteInit);\n        this.parent.off(events.deleteEnd, this.onDeleteEnd);\n        this.parent.off(events.cutCopyInit, this.oncutCopyInit);\n        this.parent.off(events.dropInit, this.onDropInit);\n        this.parent.off(events.dragEnd, this.onDragEnd);\n        this.parent.off(events.dragging, this.onDragging);\n        this.parent.off(events.dropPath, this.onDropPath);\n        this.parent.off(events.detailsInit, this.onDetailsInit);\n        this.parent.off(events.menuItemData, this.onMenuItemData);\n        this.parent.off(events.pathDrag, this.onPathDrag);\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDetailsInit = function () {\n        if (this.parent.activeModule === this.getModuleName()) {\n            // eslint-disable-next-line\n            var dataobj = this.getTreeData(this.treeObj.selectedNodes[0]);\n            this.parent.itemData = dataobj;\n        }\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.onMenuItemData = function (args) {\n        if (this.parent.activeModule === this.getModuleName()) {\n            var liEle = closest(args.target, 'li');\n            this.parent.itemData = this.getTreeData(liEle.getAttribute('data-uid'));\n        }\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.onDragging = function (args) {\n        var ele = closest(args.target, 'li');\n        if (ele.classList.contains('e-node-collapsed')) {\n            this.isDrag = true;\n            var level = parseInt(ele.getAttribute('aria-level'), 10);\n            this.treeObj.expandAll([ele.getAttribute('data-uid')], level + 1);\n            this.isDrag = false;\n        }\n    };\n    NavigationPane.prototype.onDropInit = function (args) {\n        if (this.parent.targetModule === this.getModuleName()) {\n            var dropLi = closest(args.target, 'li');\n            this.parent.dropData = this.getTreeData(dropLi)[0];\n            this.parent.dropPath = this.getDropPath(dropLi, getValue('name', this.parent.dropData));\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} - returns the module name.\n     * @private\n     */\n    NavigationPane.prototype.getModuleName = function () {\n        return 'navigationpane';\n    };\n    NavigationPane.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n        if (this.treeObj) {\n            this.unWireEvents();\n            this.treeObj.destroy();\n        }\n    };\n    NavigationPane.prototype.wireEvents = function () {\n        this.keyboardModule = new KeyboardEvents(this.treeObj.element, {\n            keyAction: this.keyDown.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n    };\n    NavigationPane.prototype.unWireEvents = function () {\n        this.keyboardModule.destroy();\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.keyDown = function (e) {\n        var action = e.action;\n        switch (action) {\n            case 'altEnter':\n                this.parent.notify(events.detailsInit, {});\n                GetDetails(this.parent, [], this.parent.path, 'details');\n                break;\n            case 'esc':\n                removeActive(this.parent);\n                break;\n            case 'del':\n                if (this.parent.pathId[0] !== this.activeNode.getAttribute('data-uid')) {\n                    this.updateItemData();\n                    if (!hasEditAccess(this.parent.itemData[0])) {\n                        createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionEdit);\n                    }\n                    else {\n                        this.removeNodes = [];\n                        createDialog(this.parent, 'Delete');\n                    }\n                }\n                break;\n            case 'ctrlC':\n                copyFiles(this.parent);\n                break;\n            case 'ctrlV':\n                this.parent.folderPath = '';\n                pasteHandler(this.parent);\n                break;\n            case 'ctrlX':\n                cutFiles(this.parent);\n                break;\n            case 'shiftF10':\n                this.updateItemData();\n                if (!hasDownloadAccess(this.parent.itemData[0])) {\n                    createDeniedDialog(this.parent, this.parent.itemData[0], events.permissionDownload);\n                    return;\n                }\n                if (this.parent.selectedItems.length !== 0) {\n                    this.doDownload();\n                }\n                break;\n            case 'f2':\n                if (this.parent.selectedItems.length === 0) {\n                    // eslint-disable-next-line\n                    var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n                    if (!hasEditAccess(data)) {\n                        createDeniedDialog(this.parent, data, events.permissionEdit);\n                    }\n                    else {\n                        this.updateRenameData();\n                        createDialog(this.parent, 'Rename');\n                    }\n                }\n                break;\n        }\n    };\n    // eslint-disable-next-line\n    NavigationPane.prototype.getTreeData = function (args) {\n        // eslint-disable-next-line\n        var data = this.treeObj.getTreeData(args);\n        for (var i = 0; i < data.length; i++) {\n            if (isNOU(getValue('hasChild', data[i]))) {\n                setValue('hasChild', false, data[i]);\n            }\n        }\n        return data;\n    };\n    NavigationPane.prototype.updateRenameData = function () {\n        this.updateItemData();\n        this.parent.currentItemText = getValue('name', this.parent.itemData[0]);\n    };\n    NavigationPane.prototype.updateItemData = function () {\n        // eslint-disable-next-line\n        var data = this.getTreeData(this.treeObj.selectedNodes[0])[0];\n        this.parent.itemData = [data];\n        this.parent.isFile = false;\n    };\n    NavigationPane.prototype.updateActionData = function () {\n        this.updateItemData();\n        var newPath = getParentPath(this.parent.path);\n        this.parent.setProperties({ path: newPath }, true);\n        this.parent.pathId.pop();\n        this.parent.pathNames.pop();\n    };\n    /* istanbul ignore next */\n    NavigationPane.prototype.doDownload = function () {\n        var newPath = getParentPath(this.parent.path);\n        var itemId = this.treeObj.selectedNodes[0];\n        var name = (itemId === this.parent.pathId[0]) ? '' : getValue('name', this.parent.itemData[0]);\n        Download(this.parent, newPath, [name]);\n    };\n    return NavigationPane;\n}());\nexport { NavigationPane };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}