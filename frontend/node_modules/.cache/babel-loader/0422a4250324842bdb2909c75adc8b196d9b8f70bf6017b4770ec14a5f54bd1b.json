{"ast":null,"code":"/**\n * `Clear Format` module is used to handle Clear Format.\n */\nimport { closest } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport { DOMNode } from './dom-node';\nimport { InsertMethods } from './insert-methods';\nimport { IsFormatted } from './isformatted';\nimport { isIDevice, setEditFrameFocus } from '../../common/util';\nvar ClearFormat = /** @class */function () {\n  function ClearFormat() {}\n  /**\n   * clear method\n   *\n   * @param {Document} docElement - specifies the document element.\n   * @param {Node} endNode - specifies the end node\n   * @param {string} enterAction - specifies the enter key action\n   * @param {string} selector - specifies the string value\n   * @returns {void}\n   * @hidden\n    */\n  ClearFormat.clear = function (docElement, endNode, enterAction, selector) {\n    this.domNode = new DOMNode(endNode, docElement);\n    this.defaultTag = enterAction === 'P' ? this.defaultTag : 'div';\n    var nodeSelection = new NodeSelection();\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n    var isCollapsed = range.collapsed;\n    var nodes = nodeSelection.getInsertNodeCollection(range);\n    var save = nodeSelection.save(range, docElement);\n    if (!isCollapsed) {\n      var preNode = void 0;\n      if (nodes[0].nodeName === 'BR' && closest(nodes[0], 'table')) {\n        preNode = nodeCutter.GetSpliceNode(range, closest(nodes[0], 'table'));\n      } else {\n        preNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length > 1 && nodes[0].nodeName === 'IMG' ? 1 : 0]);\n      }\n      if (nodes.length === 1) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else {\n        var i = 1;\n        var lastText = nodes[nodes.length - i];\n        while (nodes.length <= i && nodes[nodes.length - i].nodeName === 'BR') {\n          i++;\n          lastText = nodes[nodes.length - i];\n        }\n        var lasNode = nodeCutter.GetSpliceNode(range, lastText);\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n      }\n      var exactNodes = nodeSelection.getNodeCollection(range);\n      var cloneSelectNodes = exactNodes.slice();\n      this.clearInlines(nodeSelection.getSelectionNodes(cloneSelectNodes), cloneSelectNodes, nodeSelection.getRange(docElement), nodeCutter, endNode);\n      this.reSelection(docElement, save, exactNodes);\n      range = nodeSelection.getRange(docElement);\n      exactNodes = nodeSelection.getNodeCollection(range);\n      var cloneParentNodes = exactNodes.slice();\n      this.clearBlocks(docElement, cloneParentNodes, endNode, nodeCutter, nodeSelection);\n      if (isIDevice()) {\n        setEditFrameFocus(endNode, selector);\n      }\n      this.reSelection(docElement, save, exactNodes);\n    }\n  };\n  ClearFormat.reSelection = function (docElement, save, exactNodes) {\n    var selectionNodes = save.getInsertNodes(exactNodes);\n    save.startContainer = save.getNodeArray(selectionNodes[0], true, docElement);\n    save.startOffset = 0;\n    save.endContainer = save.getNodeArray(selectionNodes[selectionNodes.length - 1], false, docElement);\n    var endIndexNode = selectionNodes[selectionNodes.length - 1];\n    save.endOffset = endIndexNode.nodeType === 3 ? endIndexNode.textContent.length : endIndexNode.childNodes.length;\n    save.restore();\n  };\n  ClearFormat.clearBlocks = function (docElement, nodes, endNode, nodeCutter, nodeSelection) {\n    var parentNodes = [];\n    for (var index = 0; index < nodes.length; index++) {\n      if (this.BLOCK_TAGS.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1 && parentNodes.indexOf(nodes[index]) === -1) {\n        parentNodes.push(nodes[index]);\n      } else if (this.BLOCK_TAGS.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1 && parentNodes.indexOf(nodes[index].parentNode) === -1 && endNode !== nodes[index].parentNode) {\n        parentNodes.push(nodes[index].parentNode);\n      }\n    }\n    parentNodes = this.spliceParent(parentNodes, nodes)[0];\n    parentNodes = this.removeParent(parentNodes);\n    this.unWrap(docElement, parentNodes, nodeCutter, nodeSelection);\n  };\n  ClearFormat.spliceParent = function (parentNodes, nodes) {\n    for (var index1 = 0; index1 < parentNodes.length; index1++) {\n      var len = parentNodes[index1].childNodes.length;\n      for (var index2 = 0; index2 < len; index2++) {\n        if (nodes.indexOf(parentNodes[index1].childNodes[index2]) > 0 && parentNodes[index1].childNodes[index2].childNodes.length > 0) {\n          nodes = this.spliceParent([parentNodes[index1].childNodes[index2]], nodes)[1];\n        }\n        if (nodes.indexOf(parentNodes[index1].childNodes[index2]) <= -1 && parentNodes[index1].childNodes[index2].textContent.trim() !== '') {\n          for (var index3 = 0; index3 < len; index3++) {\n            if (nodes.indexOf(parentNodes[index1].childNodes[index3]) > -1) {\n              nodes.splice(nodes.indexOf(parentNodes[index1].childNodes[index3]), 1);\n            }\n          }\n          index2 = parentNodes[index1].childNodes.length;\n          var parentIndex = parentNodes.indexOf(parentNodes[index1].parentNode);\n          var nodeIndex = nodes.indexOf(parentNodes[index1].parentNode);\n          if (parentIndex > -1) {\n            parentNodes.splice(parentIndex, 1);\n          }\n          if (nodeIndex > -1) {\n            nodes.splice(nodeIndex, 1);\n          }\n          var elementIndex = nodes.indexOf(parentNodes[index1]);\n          if (elementIndex > -1) {\n            nodes.splice(elementIndex, 1);\n          }\n          parentNodes.splice(index1, 1);\n          index1--;\n        }\n      }\n    }\n    return [parentNodes, nodes];\n  };\n  ClearFormat.removeChild = function (parentNodes, parentNode) {\n    var count = parentNode.childNodes.length;\n    if (count > 0) {\n      for (var index = 0; index < count; index++) {\n        if (parentNodes.indexOf(parentNode.childNodes[index]) > -1) {\n          parentNodes = this.removeChild(parentNodes, parentNode.childNodes[index]);\n          parentNodes.splice(parentNodes.indexOf(parentNode.childNodes[index]), 1);\n        }\n      }\n    }\n    return parentNodes;\n  };\n  ClearFormat.removeParent = function (parentNodes) {\n    for (var index = 0; index < parentNodes.length; index++) {\n      if (parentNodes.indexOf(parentNodes[index].parentNode) > -1) {\n        parentNodes = this.removeChild(parentNodes, parentNodes[index]);\n        parentNodes.splice(index, 1);\n        index--;\n      }\n    }\n    return parentNodes;\n  };\n  ClearFormat.unWrap = function (docElement, parentNodes, nodeCutter, nodeSelection) {\n    for (var index1 = 0; index1 < parentNodes.length; index1++) {\n      if (this.NONVALID_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) > -1 && parentNodes[index1].parentNode && this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].parentNode.nodeName.toLowerCase()) > -1) {\n        nodeSelection.setSelectionText(docElement, parentNodes[index1], parentNodes[index1], 0, parentNodes[index1].childNodes.length);\n        InsertMethods.unwrap(nodeCutter.GetSpliceNode(nodeSelection.getRange(docElement), parentNodes[index1].parentNode));\n      }\n      if (parentNodes[index1].nodeName.toLocaleLowerCase() !== 'p') {\n        if (this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) < 0 && parentNodes[index1].parentNode.nodeName.toLocaleLowerCase() !== 'p' && !((parentNodes[index1].nodeName.toLocaleLowerCase() === 'blockquote' || parentNodes[index1].nodeName.toLocaleLowerCase() === 'li') && this.IGNORE_PARENT_TAGS.indexOf(parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase()) > -1) && !(parentNodes[index1].childNodes.length === 1 && parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase() === 'p')) {\n          InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n        }\n        var childNodes = InsertMethods.unwrap(parentNodes[index1]);\n        if (childNodes.length === 1 && childNodes[0].parentNode.nodeName.toLocaleLowerCase() === 'p') {\n          InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n          InsertMethods.unwrap(parentNodes[index1]);\n        }\n        for (var index2 = 0; index2 < childNodes.length; index2++) {\n          if (this.NONVALID_TAGS.indexOf(childNodes[index2].nodeName.toLowerCase()) > -1) {\n            this.unWrap(docElement, [childNodes[index2]], nodeCutter, nodeSelection);\n          } else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 && childNodes[index2].nodeName.toLocaleLowerCase() !== 'p') {\n            var blockNodes = this.removeParent([childNodes[index2]]);\n            this.unWrap(docElement, blockNodes, nodeCutter, nodeSelection);\n          } else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 && childNodes[index2].parentNode.nodeName.toLocaleLowerCase() === childNodes[index2].nodeName.toLocaleLowerCase()) {\n            InsertMethods.unwrap(childNodes[index2]);\n          } else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 && childNodes[index2].nodeName.toLocaleLowerCase() === 'p') {\n            InsertMethods.Wrap(childNodes[index2], docElement.createElement(this.defaultTag));\n            InsertMethods.unwrap(childNodes[index2]);\n          }\n        }\n      } else {\n        InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n        InsertMethods.unwrap(parentNodes[index1]);\n      }\n    }\n  };\n  ClearFormat.clearInlines = function (textNodes, nodes, range, nodeCutter,\n  // eslint-disable-next-line\n  endNode) {\n    for (var index = 0; index < textNodes.length; index++) {\n      var currentInlineNode = textNodes[index];\n      var currentNode = void 0;\n      while (!this.domNode.isBlockNode(currentInlineNode)) {\n        currentNode = currentInlineNode;\n        currentInlineNode = currentInlineNode.parentElement;\n      }\n      if (currentNode && IsFormatted.inlineTags.indexOf(currentNode.nodeName.toLocaleLowerCase()) > -1) {\n        nodeCutter.GetSpliceNode(range, currentNode);\n        this.removeInlineParent(currentNode);\n      }\n    }\n  };\n  ClearFormat.removeInlineParent = function (textNodes) {\n    var nodes = InsertMethods.unwrap(textNodes);\n    for (var index = 0; index < nodes.length; index++) {\n      if (nodes[index].parentNode.childNodes.length === 1 && IsFormatted.inlineTags.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1) {\n        this.removeInlineParent(nodes[index].parentNode);\n      } else if (IsFormatted.inlineTags.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1) {\n        this.removeInlineParent(nodes[index]);\n      }\n    }\n  };\n  ClearFormat.BLOCK_TAGS = ['address', 'article', 'aside', 'blockquote', 'details', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'li', 'main', 'nav', 'noscript', 'ol', 'p', 'pre', 'section', 'ul'];\n  ClearFormat.NONVALID_PARENT_TAGS = ['thead', 'tbody', 'ul', 'ol', 'table', 'tfoot', 'tr'];\n  ClearFormat.IGNORE_PARENT_TAGS = ['ul', 'ol', 'table'];\n  ClearFormat.NONVALID_TAGS = ['thead', 'tbody', 'figcaption', 'td', 'tr', 'th', 'tfoot', 'figcaption', 'li'];\n  ClearFormat.defaultTag = 'p';\n  return ClearFormat;\n}();\nexport { ClearFormat };","map":{"version":3,"names":["closest","NodeSelection","NodeCutter","DOMNode","InsertMethods","IsFormatted","isIDevice","setEditFrameFocus","ClearFormat","clear","docElement","endNode","enterAction","selector","domNode","defaultTag","nodeSelection","nodeCutter","range","getRange","isCollapsed","collapsed","nodes","getInsertNodeCollection","save","preNode","nodeName","GetSpliceNode","length","setSelectionContents","i","lastText","lasNode","setSelectionText","nodeType","textContent","childNodes","exactNodes","getNodeCollection","cloneSelectNodes","slice","clearInlines","getSelectionNodes","reSelection","cloneParentNodes","clearBlocks","selectionNodes","getInsertNodes","startContainer","getNodeArray","startOffset","endContainer","endIndexNode","endOffset","restore","parentNodes","index","BLOCK_TAGS","indexOf","toLocaleLowerCase","push","parentNode","spliceParent","removeParent","unWrap","index1","len","index2","trim","index3","splice","parentIndex","nodeIndex","elementIndex","removeChild","count","NONVALID_TAGS","toLowerCase","NONVALID_PARENT_TAGS","unwrap","IGNORE_PARENT_TAGS","Wrap","createElement","blockNodes","textNodes","currentInlineNode","currentNode","isBlockNode","parentElement","inlineTags","removeInlineParent"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/clearformat.js"],"sourcesContent":["/**\n * `Clear Format` module is used to handle Clear Format.\n */\nimport { closest } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport { DOMNode } from './dom-node';\nimport { InsertMethods } from './insert-methods';\nimport { IsFormatted } from './isformatted';\nimport { isIDevice, setEditFrameFocus } from '../../common/util';\nvar ClearFormat = /** @class */ (function () {\n    function ClearFormat() {\n    }\n    /**\n     * clear method\n     *\n     * @param {Document} docElement - specifies the document element.\n     * @param {Node} endNode - specifies the end node\n     * @param {string} enterAction - specifies the enter key action\n     * @param {string} selector - specifies the string value\n     * @returns {void}\n     * @hidden\n\n     */\n    ClearFormat.clear = function (docElement, endNode, enterAction, selector) {\n        this.domNode = new DOMNode(endNode, docElement);\n        this.defaultTag = enterAction === 'P' ? this.defaultTag : 'div';\n        var nodeSelection = new NodeSelection();\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        var isCollapsed = range.collapsed;\n        var nodes = nodeSelection.getInsertNodeCollection(range);\n        var save = nodeSelection.save(range, docElement);\n        if (!isCollapsed) {\n            var preNode = void 0;\n            if (nodes[0].nodeName === 'BR' && closest(nodes[0], 'table')) {\n                preNode = nodeCutter.GetSpliceNode(range, closest(nodes[0], 'table'));\n            }\n            else {\n                preNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length > 1 && nodes[0].nodeName === 'IMG' ? 1 : 0]);\n            }\n            if (nodes.length === 1) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else {\n                var i = 1;\n                var lastText = nodes[nodes.length - i];\n                while (nodes.length <= i && nodes[nodes.length - i].nodeName === 'BR') {\n                    i++;\n                    lastText = nodes[nodes.length - i];\n                }\n                var lasNode = nodeCutter.GetSpliceNode(range, lastText);\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n            }\n            var exactNodes = nodeSelection.getNodeCollection(range);\n            var cloneSelectNodes = exactNodes.slice();\n            this.clearInlines(nodeSelection.getSelectionNodes(cloneSelectNodes), cloneSelectNodes, nodeSelection.getRange(docElement), nodeCutter, endNode);\n            this.reSelection(docElement, save, exactNodes);\n            range = nodeSelection.getRange(docElement);\n            exactNodes = nodeSelection.getNodeCollection(range);\n            var cloneParentNodes = exactNodes.slice();\n            this.clearBlocks(docElement, cloneParentNodes, endNode, nodeCutter, nodeSelection);\n            if (isIDevice()) {\n                setEditFrameFocus(endNode, selector);\n            }\n            this.reSelection(docElement, save, exactNodes);\n        }\n    };\n    ClearFormat.reSelection = function (docElement, save, exactNodes) {\n        var selectionNodes = save.getInsertNodes(exactNodes);\n        save.startContainer = save.getNodeArray(selectionNodes[0], true, docElement);\n        save.startOffset = 0;\n        save.endContainer = save.getNodeArray(selectionNodes[selectionNodes.length - 1], false, docElement);\n        var endIndexNode = selectionNodes[selectionNodes.length - 1];\n        save.endOffset = (endIndexNode.nodeType === 3) ? endIndexNode.textContent.length\n            : endIndexNode.childNodes.length;\n        save.restore();\n    };\n    ClearFormat.clearBlocks = function (docElement, nodes, endNode, nodeCutter, nodeSelection) {\n        var parentNodes = [];\n        for (var index = 0; index < nodes.length; index++) {\n            if (this.BLOCK_TAGS.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1\n                && parentNodes.indexOf(nodes[index]) === -1) {\n                parentNodes.push(nodes[index]);\n            }\n            else if ((this.BLOCK_TAGS.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1)\n                && parentNodes.indexOf(nodes[index].parentNode) === -1\n                && endNode !== nodes[index].parentNode) {\n                parentNodes.push(nodes[index].parentNode);\n            }\n        }\n        parentNodes = this.spliceParent(parentNodes, nodes)[0];\n        parentNodes = this.removeParent(parentNodes);\n        this.unWrap(docElement, parentNodes, nodeCutter, nodeSelection);\n    };\n    ClearFormat.spliceParent = function (parentNodes, nodes) {\n        for (var index1 = 0; index1 < parentNodes.length; index1++) {\n            var len = parentNodes[index1].childNodes.length;\n            for (var index2 = 0; index2 < len; index2++) {\n                if ((nodes.indexOf(parentNodes[index1].childNodes[index2]) > 0)\n                    && (parentNodes[index1].childNodes[index2].childNodes.length > 0)) {\n                    nodes = this.spliceParent([parentNodes[index1].childNodes[index2]], nodes)[1];\n                }\n                if ((nodes.indexOf(parentNodes[index1].childNodes[index2]) <= -1) &&\n                    (parentNodes[index1].childNodes[index2].textContent.trim() !== '')) {\n                    for (var index3 = 0; index3 < len; index3++) {\n                        if (nodes.indexOf(parentNodes[index1].childNodes[index3]) > -1) {\n                            nodes.splice(nodes.indexOf(parentNodes[index1].childNodes[index3]), 1);\n                        }\n                    }\n                    index2 = parentNodes[index1].childNodes.length;\n                    var parentIndex = parentNodes.indexOf(parentNodes[index1].parentNode);\n                    var nodeIndex = nodes.indexOf(parentNodes[index1].parentNode);\n                    if (parentIndex > -1) {\n                        parentNodes.splice(parentIndex, 1);\n                    }\n                    if (nodeIndex > -1) {\n                        nodes.splice(nodeIndex, 1);\n                    }\n                    var elementIndex = nodes.indexOf(parentNodes[index1]);\n                    if (elementIndex > -1) {\n                        nodes.splice(elementIndex, 1);\n                    }\n                    parentNodes.splice(index1, 1);\n                    index1--;\n                }\n            }\n        }\n        return [parentNodes, nodes];\n    };\n    ClearFormat.removeChild = function (parentNodes, parentNode) {\n        var count = parentNode.childNodes.length;\n        if (count > 0) {\n            for (var index = 0; index < count; index++) {\n                if (parentNodes.indexOf(parentNode.childNodes[index]) > -1) {\n                    parentNodes = this.removeChild(parentNodes, parentNode.childNodes[index]);\n                    parentNodes.splice(parentNodes.indexOf(parentNode.childNodes[index]), 1);\n                }\n            }\n        }\n        return parentNodes;\n    };\n    ClearFormat.removeParent = function (parentNodes) {\n        for (var index = 0; index < parentNodes.length; index++) {\n            if (parentNodes.indexOf(parentNodes[index].parentNode) > -1) {\n                parentNodes = this.removeChild(parentNodes, parentNodes[index]);\n                parentNodes.splice(index, 1);\n                index--;\n            }\n        }\n        return parentNodes;\n    };\n    ClearFormat.unWrap = function (docElement, parentNodes, nodeCutter, nodeSelection) {\n        for (var index1 = 0; index1 < parentNodes.length; index1++) {\n            if (this.NONVALID_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) > -1\n                && parentNodes[index1].parentNode\n                && this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].parentNode.nodeName.toLowerCase()) > -1) {\n                nodeSelection.setSelectionText(docElement, parentNodes[index1], parentNodes[index1], 0, parentNodes[index1].childNodes.length);\n                InsertMethods.unwrap(nodeCutter.GetSpliceNode(nodeSelection.getRange(docElement), parentNodes[index1].parentNode));\n            }\n            if (parentNodes[index1].nodeName.toLocaleLowerCase() !== 'p') {\n                if (this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) < 0\n                    && parentNodes[index1].parentNode.nodeName.toLocaleLowerCase() !== 'p'\n                    && !((parentNodes[index1].nodeName.toLocaleLowerCase() === 'blockquote'\n                        || parentNodes[index1].nodeName.toLocaleLowerCase() === 'li')\n                        && this.IGNORE_PARENT_TAGS.indexOf(parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase()) > -1)\n                    && !(parentNodes[index1].childNodes.length === 1\n                        && parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase() === 'p')) {\n                    InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n                }\n                var childNodes = InsertMethods.unwrap(parentNodes[index1]);\n                if (childNodes.length === 1\n                    && childNodes[0].parentNode.nodeName.toLocaleLowerCase() === 'p') {\n                    InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n                    InsertMethods.unwrap(parentNodes[index1]);\n                }\n                for (var index2 = 0; index2 < childNodes.length; index2++) {\n                    if (this.NONVALID_TAGS.indexOf(childNodes[index2].nodeName.toLowerCase()) > -1) {\n                        this.unWrap(docElement, [childNodes[index2]], nodeCutter, nodeSelection);\n                    }\n                    else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 &&\n                        childNodes[index2].nodeName.toLocaleLowerCase() !== 'p') {\n                        var blockNodes = this.removeParent([childNodes[index2]]);\n                        this.unWrap(docElement, blockNodes, nodeCutter, nodeSelection);\n                    }\n                    else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 &&\n                        childNodes[index2].parentNode.nodeName.toLocaleLowerCase() === childNodes[index2].nodeName.toLocaleLowerCase()) {\n                        InsertMethods.unwrap(childNodes[index2]);\n                    }\n                    else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 &&\n                        childNodes[index2].nodeName.toLocaleLowerCase() === 'p') {\n                        InsertMethods.Wrap(childNodes[index2], docElement.createElement(this.defaultTag));\n                        InsertMethods.unwrap(childNodes[index2]);\n                    }\n                }\n            }\n            else {\n                InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n                InsertMethods.unwrap(parentNodes[index1]);\n            }\n        }\n    };\n    ClearFormat.clearInlines = function (textNodes, nodes, range, nodeCutter, \n    // eslint-disable-next-line\n    endNode) {\n        for (var index = 0; index < textNodes.length; index++) {\n            var currentInlineNode = textNodes[index];\n            var currentNode = void 0;\n            while (!this.domNode.isBlockNode(currentInlineNode)) {\n                currentNode = currentInlineNode;\n                currentInlineNode = currentInlineNode.parentElement;\n            }\n            if (currentNode &&\n                IsFormatted.inlineTags.indexOf(currentNode.nodeName.toLocaleLowerCase()) > -1) {\n                nodeCutter.GetSpliceNode(range, currentNode);\n                this.removeInlineParent(currentNode);\n            }\n        }\n    };\n    ClearFormat.removeInlineParent = function (textNodes) {\n        var nodes = InsertMethods.unwrap(textNodes);\n        for (var index = 0; index < nodes.length; index++) {\n            if (nodes[index].parentNode.childNodes.length === 1\n                && IsFormatted.inlineTags.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1) {\n                this.removeInlineParent(nodes[index].parentNode);\n            }\n            else if (IsFormatted.inlineTags.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1) {\n                this.removeInlineParent(nodes[index]);\n            }\n        }\n    };\n    ClearFormat.BLOCK_TAGS = ['address', 'article', 'aside', 'blockquote',\n        'details', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer',\n        'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'li', 'main', 'nav',\n        'noscript', 'ol', 'p', 'pre', 'section', 'ul'];\n    ClearFormat.NONVALID_PARENT_TAGS = ['thead', 'tbody', 'ul', 'ol', 'table', 'tfoot', 'tr'];\n    ClearFormat.IGNORE_PARENT_TAGS = ['ul', 'ol', 'table'];\n    ClearFormat.NONVALID_TAGS = ['thead', 'tbody', 'figcaption', 'td', 'tr', 'th', 'tfoot', 'figcaption', 'li'];\n    ClearFormat.defaultTag = 'p';\n    return ClearFormat;\n}());\nexport { ClearFormat };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}