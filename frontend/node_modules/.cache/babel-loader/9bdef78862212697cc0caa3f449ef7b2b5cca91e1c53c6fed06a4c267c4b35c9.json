{"ast":null,"code":"var _jsxFileName = \"D:\\\\USPERSO IMPLEMENTATION\\\\Projet_DevIII\\\\frontend\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport AddEventModal from \"./AddEventModal\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent({\n      demarre: moment(event.demarre).toDate(),\n      termine: moment(event.termine).toDate(),\n      contenu: event.contenu\n    });\n  };\n  async function handleEventAdd(data) {\n    try {\n      const response = await fetch(\"/anamneses/api/calendar/create-event\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data.event)\n      });\n      if (!response.ok) {\n        console.error(\"Error adding event:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error in handleEventAdd:\", error);\n    }\n  }\n  async function handleDatesSet(data) {\n    try {\n      const start = moment(data.start).toISOString();\n      const end = moment(data.end).toISOString();\n      const response = await fetch(`/anamneses/api/calendar/get-events?demarre=${start}&termine=${end}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: 'item name',\n          description: 'item description'\n        })\n      }).then(response => response.json()).then(responseJson => {\n        console.log(responseJson);\n        this.setState({\n          data: responseJson\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n      if (response.ok) {\n        const events = await response.json();\n        setEvents(events);\n      } else {\n        console.error(\"Error getting events:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error in handleDatesSet:\", error);\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        events: events,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        eventAdd: event => handleEventAdd(event),\n        datesSet: date => handleDatesSet(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"alGqhFOvN39NkiVw7ppUvjKrWQ0=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","moment","jsxDEV","_jsxDEV","Calendar","_s","modalOpen","setModalOpen","events","setEvents","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","demarre","toDate","termine","contenu","handleEventAdd","data","response","fetch","method","headers","body","JSON","stringify","ok","console","error","statusText","handleDatesSet","start","toISOString","end","Accept","name","description","then","json","responseJson","log","setState","catch","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","position","zIndex","ref","plugins","initialView","eventAdd","datesSet","date","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/src/components/Calendar.jsx"],"sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport AddEventModal from \"./AddEventModal\";\r\nimport moment from \"moment\";\r\n\r\nfunction Calendar() {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [events, setEvents] = useState([])\r\n    const calendarRef = useRef(null);\r\n\r\n    const onEventAdded = event => {\r\n        let calendarApi = calendarRef.current.getApi();\r\n        calendarApi.addEvent({\r\n            demarre: moment(event.demarre).toDate(),\r\n            termine: moment(event.termine).toDate(),\r\n            contenu: event.contenu\r\n        });\r\n    };\r\n\r\n    async function handleEventAdd(data) {\r\n        try {\r\n            const response = await fetch(\"/anamneses/api/calendar/create-event\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data.event),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                console.error(\"Error adding event:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in handleEventAdd:\", error);\r\n        }\r\n    }\r\n    \r\n    async function handleDatesSet(data) {\r\n        try {\r\n            const start = moment(data.start).toISOString();\r\n            const end = moment(data.end).toISOString();\r\n            const response = await fetch(`/anamneses/api/calendar/get-events?demarre=${start}&termine=${end}`, { \r\n                method: 'GET',\r\n                headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                name: 'item name',\r\n                description: 'item description',\r\n                }),\r\n            })\r\n                .then(response => response.json())\r\n                .then(responseJson => {\r\n                console.log(responseJson);\r\n                this.setState({\r\n                    data: responseJson,\r\n                });\r\n                })\r\n                .catch(error => {\r\n                console.error(error);\r\n                });\r\n    \r\n            if (response.ok) {\r\n                const events = await response.json();\r\n                setEvents(events);\r\n            } else {\r\n                console.error(\"Error getting events:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in handleDatesSet:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\r\n                <div style={{position: \"relative\", zIndex: 0}}>\r\n                    <FullCalendar\r\n                        ref={calendarRef}\r\n                        events={events}\r\n                        plugins={[ dayGridPlugin ]}\r\n                        initialView=\"dayGridMonth\"\r\n                        eventAdd={event => handleEventAdd(event)}\r\n                        datesSet={(date) => handleDatesSet(date)}\r\n                    />\r\n                </div>\r\n\r\n            <AddEventModal isOpen={modalOpen}\r\n                           onClose={() => setModalOpen(false)}\r\n                           onEventAdded={event => onEventAdded(event)}\r\n            />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}