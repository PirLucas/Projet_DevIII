{"ast":null,"code":"import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */function () {\n  function InsertHtml() {}\n  InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal) {\n    var node;\n    if (typeof insertNode === 'string') {\n      var divNode = document.createElement('div');\n      divNode.innerHTML = insertNode;\n      node = isExternal ? divNode : divNode.firstChild;\n    } else {\n      if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) && insertNode.classList.contains('pasteContent'))) {\n        var divNode = document.createElement('div');\n        divNode.appendChild(insertNode);\n        node = divNode;\n      } else {\n        node = insertNode;\n      }\n    }\n    var nodeSelection = new NodeSelection();\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.length === 0 && editNode.children[0].tagName === 'P') {\n      nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n    var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 && range.startContainer === range.endContainer;\n    var isCollapsed = range.collapsed;\n    var nodes = this.getNodeCollection(range, nodeSelection, node);\n    var closestParentNode = node.nodeName.toLowerCase() === 'table' ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n    if (isExternal || !isNOU(node) && !isNOU(node.classList) && node.classList.contains('pasteContent')) {\n      this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode);\n      return;\n    }\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      var sibNode = preNode.previousSibling;\n      var parentNode = preNode.parentNode;\n      if (nodes.length === 1 || node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else {\n        var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n      }\n      range.extractContents();\n      if (insertNode.tagName === 'TABLE') {\n        this.removeEmptyElements(editNode);\n      }\n      for (var index = 0; index < nodes.length; index++) {\n        if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n          if (nodes[index].nodeName === 'IMG') {\n            continue;\n          }\n          nodes[index].parentNode.removeChild(nodes[index]);\n        }\n      }\n      if (sibNode) {\n        InsertMethods.AppendBefore(node, sibNode, true);\n      } else {\n        var previousNode = null;\n        while (parentNode !== editNode && parentNode.firstChild && parentNode.textContent.trim() === '') {\n          var parentNode1 = parentNode.parentNode;\n          previousNode = parentNode;\n          parentNode = parentNode1;\n        }\n        if (previousNode !== null) {\n          parentNode = previousNode;\n        }\n        if (parentNode.firstChild && (parentNode !== editNode || node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer && parentNode === range.endContainer)) {\n          if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n            InsertMethods.AppendBefore(node, parentNode, false);\n            detach(parentNode);\n          } else {\n            InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n          }\n        } else {\n          parentNode.appendChild(node);\n        }\n      }\n      if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n      }\n    } else {\n      range.deleteContents();\n      if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n        range.startContainer.innerHTML = '';\n      }\n      if (Browser.isIE) {\n        var frag = docElement.createDocumentFragment();\n        frag.appendChild(node);\n        range.insertNode(frag);\n      } else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr' && range.endContainer.nodeName.toLowerCase() === 'hr') {\n        var paraElem = range.startContainer.nextElementSibling;\n        if (paraElem) {\n          if (paraElem.querySelector('br')) {\n            detach(paraElem.querySelector('br'));\n          }\n          paraElem.appendChild(node);\n        }\n      } else {\n        if (range.startContainer.nodeName === 'BR') {\n          range.startContainer.parentElement.insertBefore(node, range.startContainer);\n        } else {\n          range.insertNode(node);\n        }\n      }\n      if (node.nodeType !== 3 && node.childNodes.length > 0) {\n        nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n      } else if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionContents(docElement, node);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n      }\n    }\n  };\n  InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode) {\n    var isCursor = range.startOffset === range.endOffset && range.startContainer === range.endContainer;\n    if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n      var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n    var lasNode;\n    var sibNode;\n    var isSingleNode;\n    var preNode;\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n      if (nodes.length === 1) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = true;\n      } else {\n        lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = false;\n      }\n    }\n    var containsBlockNode = false;\n    this.removingComments(node);\n    var allChildNodes = node.childNodes;\n    for (var i = 0; i < allChildNodes.length; i++) {\n      if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n        containsBlockNode = true;\n        break;\n      }\n    }\n    var lastSelectionNode;\n    var fragment = document.createDocumentFragment();\n    if (!containsBlockNode) {\n      if (!isCursor) {\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n        if (isSingleNode) {\n          preNode.parentNode.replaceChild(fragment, preNode);\n        } else {\n          range.deleteContents();\n          detach(lasNode);\n          // eslint-disable-next-line\n          !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n        }\n      } else {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n        if (range.startContainer.nodeType === 3 && nearestAnchor) {\n          var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n          if (immediateBlockNode.querySelectorAll('br').length > 0) {\n            detach(immediateBlockNode.querySelector('br'));\n          }\n          var rangeElement = closest(nearestAnchor, 'span');\n          rangeElement.appendChild(tempSpan);\n        } else {\n          range.insertNode(tempSpan);\n        }\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n        tempSpan.parentNode.replaceChild(fragment, tempSpan);\n      }\n    } else {\n      this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n      var isFirstTextNode = true;\n      var isPreviousInlineElem = void 0;\n      var paraElm = void 0;\n      var previousParent = void 0;\n      range.deleteContents();\n      while (node.firstChild) {\n        if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n          detach(node.firstChild);\n          continue;\n        }\n        if (node.firstChild.nodeName === '#text' && isFirstTextNode || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode) {\n          lastSelectionNode = node.firstChild;\n          if (isNOU(node.previousElementSibling)) {\n            var firstParaElm = createElement('p');\n            node.parentElement.insertBefore(firstParaElm, node);\n          }\n          node.previousElementSibling.appendChild(node.firstChild);\n        } else {\n          lastSelectionNode = node.firstChild;\n          if (node.firstChild.nodeName === '#text' || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0) {\n            if (!isPreviousInlineElem) {\n              paraElm = createElement('p');\n              paraElm.appendChild(node.firstChild);\n              fragment.appendChild(paraElm);\n            } else {\n              previousParent.appendChild(node.firstChild);\n              fragment.appendChild(previousParent);\n            }\n            previousParent = paraElm;\n            isPreviousInlineElem = true;\n          } else {\n            fragment.appendChild(node.firstChild);\n            isPreviousInlineElem = false;\n          }\n          isFirstTextNode = false;\n        }\n      }\n      node.parentNode.replaceChild(fragment, node);\n    }\n    if (lastSelectionNode.nodeName === '#text') {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    } else {\n      this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    }\n  };\n  InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode : lastSelectionNode.previousSibling : lastSelectionNode;\n    while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' && lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n      lastSelectionNode = lastSelectionNode.lastChild;\n    }\n    lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n    if (lastSelectionNode.nodeName === 'IMG') {\n      this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n    } else {\n      nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n    }\n    this.removeEmptyElements(editNode);\n  };\n  InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n    var nodes = [];\n    if (range.startOffset === range.endOffset && range.startContainer === range.endContainer && range.startContainer.nodeName != 'BR' && (range.startContainer.nodeName === 'TD' || range.startContainer.nodeType !== 3 && node.classList && node.classList.contains('pasteContent'))) {\n      nodes.push(range.startContainer.childNodes[range.endOffset]);\n    } else {\n      nodes = nodeSelection.getInsertNodeCollection(range);\n    }\n    return nodes;\n  };\n  InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n    if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) && range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n      if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n      }\n    } else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) && range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n      range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n    } else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3 && node.firstChild.nodeName === 'HR') {\n      if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.parentNode.insertBefore(node, range.startContainer);\n      }\n    } else {\n      var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n        blockNode = range.endContainer;\n        range.setEnd(blockNode, range.endContainer.textContent.length);\n      }\n      if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n        blockNode = range.startContainer;\n      }\n      if (blockNode.closest('LI') && node && node.firstElementChild && (node.firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n        var liNode = void 0;\n        while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n          liNode = node.firstElementChild.lastElementChild;\n          liNode.style.removeProperty('margin-left');\n          liNode.style.removeProperty('margin-top');\n          liNode.style.removeProperty('margin-bottom');\n          node.firstElementChild.insertAdjacentElement('afterend', liNode);\n        }\n      }\n      if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH') {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        range.insertNode(tempSpan);\n        tempSpan.parentNode.replaceChild(node, tempSpan);\n      } else {\n        var currentNode = nodes[nodes.length - 1];\n        var splitedElm = void 0;\n        if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR') && !isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0) {\n          splitedElm = currentNode;\n        } else {\n          splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n        }\n        splitedElm.parentNode.replaceChild(node, splitedElm);\n      }\n    }\n  };\n  InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode.classList.add('lastNode');\n    editNode.innerHTML = updateTextNode(editNode.innerHTML);\n    lastSelectionNode = editNode.querySelector('.lastNode');\n    if (!isNOU(lastSelectionNode)) {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n      lastSelectionNode.classList.remove('lastNode');\n      if (lastSelectionNode.classList.length === 0) {\n        lastSelectionNode.removeAttribute('class');\n      }\n    }\n  };\n  InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n    var focusNode = document.createTextNode(' ');\n    node.parentNode.insertBefore(focusNode, node.nextSibling);\n    nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n  };\n  // eslint-disable-next-line\n  InsertHtml.getImmediateBlockNode = function (node, editNode) {\n    do {\n      node = node.parentNode;\n    } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n    return node;\n  };\n  InsertHtml.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n  InsertHtml.findDetachEmptyElem = function (element) {\n    var removableElement;\n    if (!isNOU(element.parentElement)) {\n      if (element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true') {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n    return removableElement;\n  };\n  InsertHtml.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n    for (var i = 0; i < emptyElements.length; i++) {\n      if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' && emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' && emptyElements[i].tagName !== 'SOURCE' && emptyElements[i].tagName !== 'HR') {\n        var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  InsertHtml.closestEle = function (element, editNode) {\n    var el = element;\n    while (el && el.nodeType === 1) {\n      if (el.parentNode === editNode || !isNOU(el.parentNode.tagName) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1) {\n        return el;\n      }\n      el = el.parentNode;\n    }\n    return null;\n  };\n  /**\n   * Insert method\n   *\n   * @hidden\n    */\n  InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n  return InsertHtml;\n}();\nexport { InsertHtml };","map":{"version":3,"names":["NodeSelection","NodeCutter","CONSTANT","detach","Browser","isNullOrUndefined","isNOU","createElement","closest","InsertMethods","updateTextNode","InsertHtml","Insert","docElement","insertNode","editNode","isExternal","node","divNode","document","innerHTML","firstChild","classList","contains","appendChild","nodeSelection","nodeCutter","range","getRange","startContainer","endContainer","startOffset","endOffset","textContent","length","children","tagName","setSelectionText","isCursor","isCollapsed","collapsed","nodes","getNodeCollection","closestParentNode","nodeName","toLowerCase","closestEle","parentNode","pasteInsertHTML","nodeType","Node","ELEMENT_NODE","TABLE_BLOCK_TAGS","indexOf","toLocaleLowerCase","preNode","GetSpliceNode","sibNode","previousSibling","childElementCount","setSelectionContents","lasNode","parentElement","childNodes","extractContents","removeEmptyElements","index","removeChild","AppendBefore","previousNode","trim","parentNode1","imageFocus","deleteContents","isIE","frag","createDocumentFragment","paraElem","nextElementSibling","querySelector","insertBefore","currentBlockNode","getImmediateBlockNode","isSingleNode","containsBlockNode","removingComments","allChildNodes","i","BLOCK_TAGS","lastSelectionNode","fragment","replaceChild","tempSpan","className","nearestAnchor","immediateBlockNode","querySelectorAll","rangeElement","insertTempNode","isFirstTextNode","isPreviousInlineElem","paraElm","previousParent","inlineNode","previousElementSibling","firstParaElm","placeCursorEnd","cursorPos","lastChild","push","getInsertNodeCollection","nextSibling","blockNode","setEnd","firstElementChild","liNode","lastElementChild","style","removeProperty","insertAdjacentElement","currentNode","splitedElm","add","remove","removeAttribute","focusNode","createTextNode","elm","innerElement","replace","findDetachEmptyElem","element","removableElement","contentEditable","emptyElements","detachableElement","el","IGNORE_BLOCK_TAGS"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/inserthtml.js"],"sourcesContent":["import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */ (function () {\n    function InsertHtml() {\n    }\n    InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal) {\n        var node;\n        if (typeof insertNode === 'string') {\n            var divNode = document.createElement('div');\n            divNode.innerHTML = insertNode;\n            node = isExternal ? divNode : divNode.firstChild;\n        }\n        else {\n            if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) &&\n                insertNode.classList.contains('pasteContent'))) {\n                var divNode = document.createElement('div');\n                divNode.appendChild(insertNode);\n                node = divNode;\n            }\n            else {\n                node = insertNode;\n            }\n        }\n        var nodeSelection = new NodeSelection();\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.length === 0 && editNode.children[0].tagName === 'P') {\n            nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 &&\n            range.startContainer === range.endContainer;\n        var isCollapsed = range.collapsed;\n        var nodes = this.getNodeCollection(range, nodeSelection, node);\n        var closestParentNode = (node.nodeName.toLowerCase() === 'table') ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n        if (isExternal || (!isNOU(node) && !isNOU(node.classList) &&\n            node.classList.contains('pasteContent'))) {\n            this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode);\n            return;\n        }\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            var sibNode = preNode.previousSibling;\n            var parentNode = preNode.parentNode;\n            if (nodes.length === 1 || (node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0)) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else {\n                var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n            }\n            range.extractContents();\n            if (insertNode.tagName === 'TABLE') {\n                this.removeEmptyElements(editNode);\n            }\n            for (var index = 0; index < nodes.length; index++) {\n                if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n                    if (nodes[index].nodeName === 'IMG') {\n                        continue;\n                    }\n                    nodes[index].parentNode.removeChild(nodes[index]);\n                }\n            }\n            if (sibNode) {\n                InsertMethods.AppendBefore(node, sibNode, true);\n            }\n            else {\n                var previousNode = null;\n                while (parentNode !== editNode && parentNode.firstChild &&\n                    (parentNode.textContent.trim() === '')) {\n                    var parentNode1 = parentNode.parentNode;\n                    previousNode = parentNode;\n                    parentNode = parentNode1;\n                }\n                if (previousNode !== null) {\n                    parentNode = previousNode;\n                }\n                if (parentNode.firstChild && (parentNode !== editNode ||\n                    (node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer &&\n                        parentNode === range.endContainer))) {\n                    if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n                        InsertMethods.AppendBefore(node, parentNode, false);\n                        detach(parentNode);\n                    }\n                    else {\n                        InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n                    }\n                }\n                else {\n                    parentNode.appendChild(node);\n                }\n            }\n            if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n            }\n        }\n        else {\n            range.deleteContents();\n            if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n                range.startContainer.innerHTML = '';\n            }\n            if (Browser.isIE) {\n                var frag = docElement.createDocumentFragment();\n                frag.appendChild(node);\n                range.insertNode(frag);\n            }\n            else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr'\n                && range.endContainer.nodeName.toLowerCase() === 'hr') {\n                var paraElem = range.startContainer.nextElementSibling;\n                if (paraElem) {\n                    if (paraElem.querySelector('br')) {\n                        detach(paraElem.querySelector('br'));\n                    }\n                    paraElem.appendChild(node);\n                }\n            }\n            else {\n                if (range.startContainer.nodeName === 'BR') {\n                    range.startContainer.parentElement.insertBefore(node, range.startContainer);\n                }\n                else {\n                    range.insertNode(node);\n                }\n            }\n            if (node.nodeType !== 3 && node.childNodes.length > 0) {\n                nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n            }\n            else if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionContents(docElement, node);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n            }\n        }\n    };\n    InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode) {\n        var isCursor = range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer;\n        if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n            var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var lasNode;\n        var sibNode;\n        var isSingleNode;\n        var preNode;\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n            if (nodes.length === 1) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = true;\n            }\n            else {\n                lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = false;\n            }\n        }\n        var containsBlockNode = false;\n        this.removingComments(node);\n        var allChildNodes = node.childNodes;\n        for (var i = 0; i < allChildNodes.length; i++) {\n            if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n                containsBlockNode = true;\n                break;\n            }\n        }\n        var lastSelectionNode;\n        var fragment = document.createDocumentFragment();\n        if (!containsBlockNode) {\n            if (!isCursor) {\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                if (isSingleNode) {\n                    preNode.parentNode.replaceChild(fragment, preNode);\n                }\n                else {\n                    range.deleteContents();\n                    detach(lasNode);\n                    // eslint-disable-next-line\n                    !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n                }\n            }\n            else {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n                if (range.startContainer.nodeType === 3 && nearestAnchor) {\n                    var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n                    if (immediateBlockNode.querySelectorAll('br').length > 0) {\n                        detach(immediateBlockNode.querySelector('br'));\n                    }\n                    var rangeElement = closest(nearestAnchor, 'span');\n                    rangeElement.appendChild(tempSpan);\n                }\n                else {\n                    range.insertNode(tempSpan);\n                }\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                tempSpan.parentNode.replaceChild(fragment, tempSpan);\n            }\n        }\n        else {\n            this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n            var isFirstTextNode = true;\n            var isPreviousInlineElem = void 0;\n            var paraElm = void 0;\n            var previousParent = void 0;\n            range.deleteContents();\n            while (node.firstChild) {\n                if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n                    detach(node.firstChild);\n                    continue;\n                }\n                if (node.firstChild.nodeName === '#text' && isFirstTextNode ||\n                    (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode)) {\n                    lastSelectionNode = node.firstChild;\n                    if (isNOU(node.previousElementSibling)) {\n                        var firstParaElm = createElement('p');\n                        node.parentElement.insertBefore(firstParaElm, node);\n                    }\n                    node.previousElementSibling.appendChild(node.firstChild);\n                }\n                else {\n                    lastSelectionNode = node.firstChild;\n                    if (node.firstChild.nodeName === '#text' ||\n                        (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                        if (!isPreviousInlineElem) {\n                            paraElm = createElement('p');\n                            paraElm.appendChild(node.firstChild);\n                            fragment.appendChild(paraElm);\n                        }\n                        else {\n                            previousParent.appendChild(node.firstChild);\n                            fragment.appendChild(previousParent);\n                        }\n                        previousParent = paraElm;\n                        isPreviousInlineElem = true;\n                    }\n                    else {\n                        fragment.appendChild(node.firstChild);\n                        isPreviousInlineElem = false;\n                    }\n                    isFirstTextNode = false;\n                }\n            }\n            node.parentNode.replaceChild(fragment, node);\n        }\n        if (lastSelectionNode.nodeName === '#text') {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n        else {\n            this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n    };\n    InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? (isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode\n            : lastSelectionNode.previousSibling) : lastSelectionNode;\n        while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' &&\n            lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n            lastSelectionNode = lastSelectionNode.lastChild;\n        }\n        lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n        if (lastSelectionNode.nodeName === 'IMG') {\n            this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n        }\n        else {\n            nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n        }\n        this.removeEmptyElements(editNode);\n    };\n    InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n        var nodes = [];\n        if (range.startOffset === range.endOffset && range.startContainer === range.endContainer &&\n            range.startContainer.nodeName != 'BR' &&\n            (range.startContainer.nodeName === 'TD' || (range.startContainer.nodeType !== 3 &&\n                node.classList && node.classList.contains('pasteContent')))) {\n            nodes.push(range.startContainer.childNodes[range.endOffset]);\n        }\n        else {\n            nodes = nodeSelection.getInsertNodeCollection(range);\n        }\n        return nodes;\n    };\n    InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n        if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) &&\n            range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n            if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n            }\n        }\n        else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) &&\n            range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n            range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n        }\n        else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3\n            && node.firstChild.nodeName === 'HR') {\n            if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.parentNode.insertBefore(node, range.startContainer);\n            }\n        }\n        else {\n            var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n                blockNode = range.endContainer;\n                range.setEnd(blockNode, range.endContainer.textContent.length);\n            }\n            if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n                blockNode = range.startContainer;\n            }\n            if (blockNode.closest('LI') && node && node.firstElementChild &&\n                ((node).firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n                var liNode = void 0;\n                while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n                    liNode = node.firstElementChild.lastElementChild;\n                    liNode.style.removeProperty('margin-left');\n                    liNode.style.removeProperty('margin-top');\n                    liNode.style.removeProperty('margin-bottom');\n                    node.firstElementChild.insertAdjacentElement('afterend', liNode);\n                }\n            }\n            if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH') {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                range.insertNode(tempSpan);\n                tempSpan.parentNode.replaceChild(node, tempSpan);\n            }\n            else {\n                var currentNode = nodes[nodes.length - 1];\n                var splitedElm = void 0;\n                if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR') && !isNOU(currentNode.parentElement) &&\n                    currentNode.parentElement.textContent.trim().length === 0) {\n                    splitedElm = currentNode;\n                }\n                else {\n                    splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n                }\n                splitedElm.parentNode.replaceChild(node, splitedElm);\n            }\n        }\n    };\n    InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode.classList.add('lastNode');\n        editNode.innerHTML = updateTextNode(editNode.innerHTML);\n        lastSelectionNode = editNode.querySelector('.lastNode');\n        if (!isNOU(lastSelectionNode)) {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n            lastSelectionNode.classList.remove('lastNode');\n            if (lastSelectionNode.classList.length === 0) {\n                lastSelectionNode.removeAttribute('class');\n            }\n        }\n    };\n    InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n        var focusNode = document.createTextNode(' ');\n        node.parentNode.insertBefore(focusNode, node.nextSibling);\n        nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n    };\n    // eslint-disable-next-line\n    InsertHtml.getImmediateBlockNode = function (node, editNode) {\n        do {\n            node = node.parentNode;\n        } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n        return node;\n    };\n    InsertHtml.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    InsertHtml.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            if (element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true') {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    InsertHtml.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        for (var i = 0; i < emptyElements.length; i++) {\n            if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' &&\n                emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' &&\n                emptyElements[i].tagName !== 'SOURCE' && emptyElements[i].tagName !== 'HR') {\n                var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    InsertHtml.closestEle = function (element, editNode) {\n        var el = element;\n        while (el && el.nodeType === 1) {\n            if (el.parentNode === editNode ||\n                (!isNOU(el.parentNode.tagName) &&\n                    CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1)) {\n                return el;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    /**\n     * Insert method\n     *\n     * @hidden\n\n     */\n    InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n        'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n        'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n        'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg',\n        'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n    return InsertHtml;\n}());\nexport { InsertHtml };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}