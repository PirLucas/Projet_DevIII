{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable valid-jsdoc */\nimport { Property, ChildProperty, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { StackValues, RectOption, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { firstToLowerCase, CircleOption, getColorByValue } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { Border, Font, Margin, Animation, EmptyPointSettings, CornerRadius, Connector, DragSettings } from '../../common/model/base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { Offset } from '../../common/model/base';\nimport { seriesRender } from '../../common/model/constants';\nimport { sort, getVisiblePoints, setRange } from '../../common/utils/helper';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Configures the data label in the series.\n */\nvar DataLabelSettings = /** @class */function (_super) {\n  __extends(DataLabelSettings, _super);\n  function DataLabelSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], DataLabelSettings.prototype, \"visible\", void 0);\n  __decorate([Property(true)], DataLabelSettings.prototype, \"showZero\", void 0);\n  __decorate([Property(null)], DataLabelSettings.prototype, \"name\", void 0);\n  __decorate([Property('transparent')], DataLabelSettings.prototype, \"fill\", void 0);\n  __decorate([Property(1)], DataLabelSettings.prototype, \"opacity\", void 0);\n  __decorate([Property(0)], DataLabelSettings.prototype, \"angle\", void 0);\n  __decorate([Property(false)], DataLabelSettings.prototype, \"enableRotation\", void 0);\n  __decorate([Property('Auto')], DataLabelSettings.prototype, \"position\", void 0);\n  __decorate([Property(5)], DataLabelSettings.prototype, \"rx\", void 0);\n  __decorate([Property(5)], DataLabelSettings.prototype, \"ry\", void 0);\n  __decorate([Property('Center')], DataLabelSettings.prototype, \"alignment\", void 0);\n  __decorate([Complex({\n    width: null,\n    color: null\n  }, Border)], DataLabelSettings.prototype, \"border\", void 0);\n  __decorate([Complex({\n    left: 5,\n    right: 5,\n    top: 5,\n    bottom: 5\n  }, Margin)], DataLabelSettings.prototype, \"margin\", void 0);\n  __decorate([Complex({\n    size: '11px',\n    color: '',\n    fontStyle: 'Normal',\n    fontWeight: 'Normal',\n    fontFamily: 'Segoe UI'\n  }, Font)], DataLabelSettings.prototype, \"font\", void 0);\n  __decorate([Property(null)], DataLabelSettings.prototype, \"template\", void 0);\n  __decorate([Property('Hide')], DataLabelSettings.prototype, \"labelIntersectAction\", void 0);\n  return DataLabelSettings;\n}(ChildProperty);\nexport { DataLabelSettings };\n/**\n *  Configures the marker in the series.\n */\nvar MarkerSettings = /** @class */function (_super) {\n  __extends(MarkerSettings, _super);\n  function MarkerSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], MarkerSettings.prototype, \"visible\", void 0);\n  __decorate([Property('Circle')], MarkerSettings.prototype, \"shape\", void 0);\n  __decorate([Property('')], MarkerSettings.prototype, \"imageUrl\", void 0);\n  __decorate([Property(5)], MarkerSettings.prototype, \"height\", void 0);\n  __decorate([Property(5)], MarkerSettings.prototype, \"width\", void 0);\n  __decorate([Complex({\n    width: 2,\n    color: null\n  }, Border)], MarkerSettings.prototype, \"border\", void 0);\n  __decorate([Complex({\n    x: 0,\n    y: 0\n  }, Offset)], MarkerSettings.prototype, \"offset\", void 0);\n  __decorate([Property(null)], MarkerSettings.prototype, \"fill\", void 0);\n  __decorate([Property(1)], MarkerSettings.prototype, \"opacity\", void 0);\n  __decorate([Complex({}, DataLabelSettings)], MarkerSettings.prototype, \"dataLabel\", void 0);\n  return MarkerSettings;\n}(ChildProperty);\nexport { MarkerSettings };\n/**\n * Points model for the series.\n *\n * @public\n */\nvar Points = /** @class */function () {\n  function Points() {\n    /** point symbol location */\n    this.symbolLocations = null;\n    /** point region */\n    this.regions = null;\n    /** point percentage value */\n    this.percentage = null;\n    /** point region data */\n    this.regionData = null;\n    /** To know the point is selected */\n    this.isSelect = false;\n    /** point marker */\n    this.marker = {\n      visible: false\n    };\n    /**\n     * To identify point y value with in the range.\n     *\n     * @private\n     */\n    this.isPointInRange = true;\n  }\n  return Points;\n}();\nexport { Points };\n/**\n * Defines the behavior of the Trendlines\n */\nvar Trendline = /** @class */function (_super) {\n  __extends(Trendline, _super);\n  function Trendline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n    _this.clipRect = new Rect(0, 0, 0, 0);\n    return _this;\n  }\n  /** @private */\n  Trendline.prototype.setDataSource = function (series, chart) {\n    if (series) {\n      this.points = series.points;\n    }\n    chart.trendLineModule.initDataSource(this);\n    chart.visibleSeriesCount++;\n  };\n  __decorate([Property('')], Trendline.prototype, \"name\", void 0);\n  __decorate([Property('0')], Trendline.prototype, \"dashArray\", void 0);\n  __decorate([Property(true)], Trendline.prototype, \"visible\", void 0);\n  __decorate([Property('Linear')], Trendline.prototype, \"type\", void 0);\n  __decorate([Property(2)], Trendline.prototype, \"period\", void 0);\n  __decorate([Property(2)], Trendline.prototype, \"polynomialOrder\", void 0);\n  __decorate([Property(0)], Trendline.prototype, \"backwardForecast\", void 0);\n  __decorate([Property(0)], Trendline.prototype, \"forwardForecast\", void 0);\n  __decorate([Complex({}, Animation)], Trendline.prototype, \"animation\", void 0);\n  __decorate([Complex({}, MarkerSettings)], Trendline.prototype, \"marker\", void 0);\n  __decorate([Property(true)], Trendline.prototype, \"enableTooltip\", void 0);\n  __decorate([Property(null)], Trendline.prototype, \"intercept\", void 0);\n  __decorate([Property('')], Trendline.prototype, \"fill\", void 0);\n  __decorate([Property(1)], Trendline.prototype, \"width\", void 0);\n  __decorate([Property('SeriesType')], Trendline.prototype, \"legendShape\", void 0);\n  return Trendline;\n}(ChildProperty);\nexport { Trendline };\n/**\n * Configures Error bar in series.\n */\nvar ErrorBarCapSettings = /** @class */function (_super) {\n  __extends(ErrorBarCapSettings, _super);\n  function ErrorBarCapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(1)], ErrorBarCapSettings.prototype, \"width\", void 0);\n  __decorate([Property(10)], ErrorBarCapSettings.prototype, \"length\", void 0);\n  __decorate([Property(null)], ErrorBarCapSettings.prototype, \"color\", void 0);\n  __decorate([Property(1)], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n  return ErrorBarCapSettings;\n}(ChildProperty);\nexport { ErrorBarCapSettings };\nvar ChartSegment = /** @class */function (_super) {\n  __extends(ChartSegment, _super);\n  function ChartSegment() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(null)], ChartSegment.prototype, \"value\", void 0);\n  __decorate([Property(null)], ChartSegment.prototype, \"color\", void 0);\n  __decorate([Property('0')], ChartSegment.prototype, \"dashArray\", void 0);\n  return ChartSegment;\n}(ChildProperty);\nexport { ChartSegment };\n/**\n * Error bar settings\n *\n * @public\n */\nvar ErrorBarSettings = /** @class */function (_super) {\n  __extends(ErrorBarSettings, _super);\n  function ErrorBarSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], ErrorBarSettings.prototype, \"visible\", void 0);\n  __decorate([Property('Fixed')], ErrorBarSettings.prototype, \"type\", void 0);\n  __decorate([Property('Both')], ErrorBarSettings.prototype, \"direction\", void 0);\n  __decorate([Property('Vertical')], ErrorBarSettings.prototype, \"mode\", void 0);\n  __decorate([Property(null)], ErrorBarSettings.prototype, \"color\", void 0);\n  __decorate([Property(1)], ErrorBarSettings.prototype, \"verticalError\", void 0);\n  __decorate([Property(1)], ErrorBarSettings.prototype, \"width\", void 0);\n  __decorate([Property(1)], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n  __decorate([Property(3)], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n  __decorate([Property(3)], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n  __decorate([Property(1)], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n  __decorate([Property(1)], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n  __decorate([Complex(null, ErrorBarCapSettings)], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n  return ErrorBarSettings;\n}(ChildProperty);\nexport { ErrorBarSettings };\n/**\n * Defines the common behavior of Series and Technical Indicators\n */\nvar SeriesBase = /** @class */function (_super) {\n  __extends(SeriesBase, _super);\n  function SeriesBase() {\n    /**\n     * The DataSource field that contains the x value.\n     * It is applicable for series and technical indicators\n     *\n     * @default ''\n     */\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.isAdvancedColor = undefined;\n    /** @private */\n    _this.currentViewData = [];\n    /** @private */\n    _this.clipRect = new Rect(0, 0, 0, 0);\n    /** @private */\n    _this.seriesType = 'XY';\n    _this.isRectTypeSeries = false;\n    return _this;\n  }\n  /**\n   * Process data for the series.\n   *\n   * @hidden\n   */\n  SeriesBase.prototype.processJsonData = function () {\n    var i = 0;\n    var point = new Points();\n    var xName = this instanceof Series && this.type === 'Histogram' ? 'x' : this.xName;\n    var textMappingName = this instanceof Series && this.marker.dataLabel.name ? this.marker.dataLabel.name : '';\n    if (this instanceof Series) {\n      if (this.type === 'Waterfall' || this.type === 'Histogram') {\n        this.currentViewData = this.chart[firstToLowerCase(this.type) + 'SeriesModule'].processInternalData(extend([], this.currentViewData, null, true), this);\n      }\n      if (this.category === 'Pareto') {\n        this.currentViewData = sort(extend([], this.currentViewData, null, true), [this.yName], true);\n        if (this.type === 'Line') {\n          this.currentViewData = this.chart.paretoSeriesModule.performCumulativeCalculation(this.currentViewData, this);\n        }\n      }\n      this.isRectTypeSeries = this.type.indexOf('Column') > -1 || this.type.indexOf('Bar') > -1 || this.type.indexOf('Histogram') > -1;\n    }\n    var len = (this.currentViewData || []).length;\n    this.points = [];\n    this.xMin = Infinity;\n    this.xMax = -Infinity;\n    this.yMin = Infinity;\n    this.yMax = -Infinity;\n    this.sizeMax = -Infinity;\n    this.getSeriesType();\n    if (this.xAxis.valueType === 'Category') {\n      while (i < len) {\n        point = this.dataPoint(i, textMappingName, xName);\n        this.pushCategoryData(point, i, point.x);\n        this.pushData(point, i);\n        this.setEmptyPoint(point, i);\n        i++;\n      }\n    } else if (this.xAxis.valueType.indexOf('DateTime') > -1) {\n      var option = {\n        skeleton: 'full',\n        type: 'dateTime'\n      };\n      var dateParser = this.chart.intl.getDateParser(option);\n      var dateFormatter = this.chart.intl.getDateFormat(option);\n      while (i < len) {\n        point = this.dataPoint(i, textMappingName, xName);\n        if (!isNullOrUndefined(point.x) && point.x !== '') {\n          point.x = new Date(DataUtil.parse.parseJson({\n            val: point.x\n          }).val);\n          if (this.xAxis.valueType === 'DateTime') {\n            point.xValue = Date.parse(point.x.toString());\n          } else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            this.chart.isBlazor ? this.pushCategoryData(point, i, Date.parse(point.x.toString()).toString()) : this.pushCategoryData(point, i, Date.parse(dateParser(dateFormatter(point.x))).toString());\n          }\n          this.pushData(point, i);\n          this.setEmptyPoint(point, i);\n        } else {\n          point.visible = false;\n        }\n        i++;\n      }\n    } else {\n      while (i < len) {\n        point = this.dataPoint(i, textMappingName, xName);\n        point.xValue = point.x;\n        this.pushData(point, i);\n        this.setEmptyPoint(point, i);\n        i++;\n      }\n    }\n    if (this instanceof Series) {\n      if (this.type.indexOf('Spline') > -1 || this.drawType.indexOf('Spline') > -1 && this.chart.chartAreaType === 'PolarRadar') {\n        var isArea = this.type.indexOf('Area') > -1 || this.drawType.indexOf('Area') > -1;\n        var isRange = this.type.indexOf('Range') > -1;\n        this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(this);\n      } else if (this.type.indexOf('Histogram') > -1 && (this.xAxis.maximum || this.xAxis.minimum)) {\n        this.chart['histogramSeriesModule'].calculateBinValues(this);\n      }\n      if (this.type.indexOf('Histogram') > -1 && this.points.length == 1) {\n        this.xMin = this.xMin - this.histogramValues.binWidth;\n        this.xMax = this.xMax + this.histogramValues.binWidth;\n      }\n    }\n  };\n  SeriesBase.prototype.pushData = function (point, i) {\n    point.index = i;\n    point.yValue = point.y;\n    // To find the min, max for the axis range.\n    this.xMin = Math.min(this.xMin, point.xValue);\n    this.xMax = Math.max(this.xMax, point.xValue);\n    this.xData.push(point.xValue);\n  };\n  /** @private */\n  SeriesBase.prototype.dataPoint = function (i, textMappingName, xName) {\n    this.points[i] = new Points();\n    var point = this.points[i];\n    var currentViewData = this.currentViewData[i];\n    var getObjectValueByMappingString = this.enableComplexProperty ? getValue : this.getObjectValue;\n    point.x = getObjectValueByMappingString(xName, currentViewData);\n    point.high = getObjectValueByMappingString(this.high, currentViewData);\n    point.low = getObjectValueByMappingString(this.low, currentViewData);\n    point.open = getObjectValueByMappingString(this.open, currentViewData);\n    point.close = getObjectValueByMappingString(this.close, currentViewData);\n    point.volume = getObjectValueByMappingString(this.volume, currentViewData);\n    point.interior = getObjectValueByMappingString(this.pointColorMapping, currentViewData);\n    if (this instanceof Series) {\n      point.y = getObjectValueByMappingString(this.yName, currentViewData);\n      point.size = getObjectValueByMappingString(this.size, currentViewData);\n      point.text = getObjectValueByMappingString(textMappingName, currentViewData);\n      point.tooltip = getObjectValueByMappingString(this.tooltipMappingName, currentViewData);\n      if (this.isAdvancedColorSupported()) {\n        this.rangeColorName = this.colorName.length > 0 ? this.colorName : this.yName;\n        point.colorValue = getObjectValueByMappingString(this.rangeColorName, currentViewData);\n        point.interior = this.getPointFillColor(point.interior, point.colorValue);\n      }\n    }\n    return point;\n  };\n  SeriesBase.prototype.isAdvancedColorSupported = function () {\n    if (isNullOrUndefined(this.isAdvancedColor)) {\n      if (this.chart.rangeColorSettings && this.chart.rangeColorSettings.length > 0 && this.chart.visibleSeries.length === 1 && (this.chart.series[0].type === 'Column' || this.chart.series[0].type === 'Bar' || this.chart.series[0].type === 'Scatter' || this.chart.series[0].type === 'Bubble')) {\n        this.isAdvancedColor = true;\n      } else {\n        this.isAdvancedColor = false;\n      }\n    }\n    return this.isAdvancedColor;\n  };\n  SeriesBase.prototype.getPointFillColor = function (pointFill, value) {\n    var color = pointFill;\n    if (value && this.chart.rangeColorSettings && this.chart.rangeColorSettings.length > 0) {\n      for (var _i = 0, _a = this.chart.rangeColorSettings; _i < _a.length; _i++) {\n        var rangeMap = _a[_i];\n        if (value >= rangeMap.start && value <= rangeMap.end) {\n          if (rangeMap.colors.length > 1) {\n            color = getColorByValue(rangeMap, value);\n          } else {\n            color = rangeMap.colors[0];\n          }\n        }\n      }\n    }\n    return color;\n  };\n  SeriesBase.prototype.getObjectValue = function (mappingName, data) {\n    return data[mappingName];\n  };\n  /**\n   * To set empty point value based on empty point mode\n   *\n   * @private\n   */\n  SeriesBase.prototype.setEmptyPoint = function (point, i) {\n    if (!this.findVisibility(point)) {\n      point.visible = true;\n      return null;\n    }\n    point.isEmpty = true;\n    var mode = this instanceof Series && point.isPointInRange ? this.emptyPointSettings.mode : 'Drop';\n    switch (mode) {\n      case 'Zero':\n        point.visible = true;\n        if (this instanceof Series && this.seriesType.indexOf('HighLow') > -1) {\n          point.high = point.low = 0;\n          if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n            point.open = point.close = 0;\n          }\n        } else {\n          point.y = point.yValue = this.yData[i] = 0;\n        }\n        break;\n      case 'Average':\n        if (this instanceof Series) {\n          if (this.seriesType.indexOf('HighLow') > -1) {\n            point.high = isNullOrUndefined(point.high) || isNaN(+point.high) ? this.getAverage(this.high, i) : point.high;\n            point.low = isNullOrUndefined(point.low) || isNaN(+point.low) ? this.getAverage(this.low, i) : point.low;\n            if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n              point.open = isNullOrUndefined(point.open) || isNaN(+point.open) ? this.getAverage(this.open, i) : point.open;\n              point.close = isNullOrUndefined(point.close) || isNaN(+point.close) ? this.getAverage(this.close, i) : point.close;\n            }\n          } else {\n            point.y = point.yValue = this.yData[i] = this.getAverage(this.yName, i);\n          }\n        }\n        point.visible = true;\n        break;\n      case 'Drop':\n      case 'Gap':\n        this.yData[i] = null;\n        point.visible = false;\n        break;\n    }\n  };\n  SeriesBase.prototype.findVisibility = function (point) {\n    var type = this instanceof Series ? this.seriesType : 'HighLowOpenClose';\n    var yValues;\n    var yAxisMin = this.yAxis.minimum;\n    var yAxisMax = this.yAxis.maximum;\n    switch (type) {\n      case 'XY':\n        if (this.chart.chartAreaType === 'PolarRadar' && (!isNullOrUndefined(yAxisMin) && point.yValue < yAxisMin || !isNullOrUndefined(yAxisMax) && point.yValue > yAxisMax)) {\n          point.isPointInRange = false;\n          return true;\n        }\n        this.setXYMinMax(point.yValue);\n        this.yData.push(point.yValue);\n        if (this instanceof Series && this.type === 'Bubble') {\n          this.sizeMax = Math.max(this.sizeMax, isNullOrUndefined(point.size) || isNaN(+point.size) ? this.sizeMax : point.size);\n        }\n        return isNullOrUndefined(point.x) || isNullOrUndefined(point.y) || isNaN(+point.y);\n      case 'HighLow':\n        this.setHiloMinMax(point.high, point.low);\n        return isNullOrUndefined(point.x) || isNullOrUndefined(point.low) || isNaN(+point.low) || isNullOrUndefined(point.high) || isNaN(+point.high);\n      case 'HighLowOpenClose':\n        this.setHiloMinMax(point.high, point.low);\n        return isNullOrUndefined(point.x) || isNullOrUndefined(point.low) || isNaN(+point.low) || isNullOrUndefined(point.open) || isNaN(+point.open) || isNullOrUndefined(point.close) || isNaN(+point.close) || isNullOrUndefined(point.high) || isNaN(+point.high);\n      case 'BoxPlot':\n        yValues = (point.y || [null]).filter(function (value) {\n          return !isNullOrUndefined(value) && !isNaN(value);\n        }).sort(function (a, b) {\n          return a - b;\n        });\n        point.y = yValues;\n        this.yMin = Math.min(this.yMin, Math.min.apply(Math, yValues));\n        this.yMax = Math.max(this.yMax, Math.max.apply(Math, yValues));\n        return !yValues.length;\n    }\n  };\n  /**\n   * To get Y min max for the provided point seriesType XY\n   */\n  SeriesBase.prototype.setXYMinMax = function (yValue) {\n    var isLogAxis = this.yAxis.valueType === 'Logarithmic' || this.xAxis.valueType === 'Logarithmic';\n    var isNegativeValue = yValue < 0;\n    var seriesMinY;\n    if (this.isRectTypeSeries && !setRange(this.yAxis)) {\n      seriesMinY = isLogAxis ? yValue : isNegativeValue ? yValue : 0;\n    } else {\n      seriesMinY = yValue;\n    }\n    this.yMin = isLogAxis ? Math.min(this.yMin, isNullOrUndefined(seriesMinY) || isNaN(seriesMinY) || seriesMinY === 0 || seriesMinY.toString() === \"0\" || seriesMinY.toString() === '' ? this.yMin : seriesMinY) : Math.min(this.yMin, isNullOrUndefined(seriesMinY) || isNaN(seriesMinY) ? this.yMin : seriesMinY);\n    this.yMax = Math.max(this.yMax, isNullOrUndefined(yValue) || isNaN(yValue) ? this.yMax : yValue);\n  };\n  /**\n   * To get Y min max for the provided point seriesType XY\n   */\n  SeriesBase.prototype.setHiloMinMax = function (high, low) {\n    this.yMin = Math.min(this.yMin, Math.min(isNullOrUndefined(low) || isNaN(low) ? this.yMin : low, isNullOrUndefined(high) || isNaN(high) ? this.yMin : high));\n    this.yMax = Math.max(this.yMax, Math.max(isNullOrUndefined(low) || isNaN(low) ? this.yMax : low, isNullOrUndefined(high) || isNaN(high) ? this.yMax : high));\n  };\n  /**\n   * Finds the type of the series\n   *\n   * @private\n   */\n  SeriesBase.prototype.getSeriesType = function () {\n    var type;\n    if (this instanceof Series) {\n      var seriesType = this.chart.chartAreaType === 'PolarRadar' ? this.drawType : this.type;\n      if (seriesType) {\n        switch (seriesType) {\n          case 'RangeColumn':\n          case 'RangeArea':\n          case 'SplineRangeArea':\n          case 'Hilo':\n            type = 'HighLow';\n            break;\n          case 'HiloOpenClose':\n          case 'Candle':\n            type = 'HighLowOpenClose';\n            break;\n          case 'BoxAndWhisker':\n            type = 'BoxPlot';\n            break;\n          default:\n            type = 'XY';\n        }\n      }\n    }\n    this.seriesType = type;\n  };\n  /** @private */\n  SeriesBase.prototype.pushCategoryData = function (point, index, pointX) {\n    if (!this.chart.tooltip.shared) {\n      if (!this.visible) {\n        return null;\n      }\n    }\n    if (!this.xAxis.isIndexed) {\n      if (this.xAxis.indexLabels[pointX] === undefined) {\n        this.xAxis.indexLabels[pointX] = this.xAxis.labels.length;\n        this.xAxis.labels.push(pointX);\n      }\n      point.xValue = this.xAxis.indexLabels[pointX];\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.xAxis.labels[index] ? this.xAxis.labels[index] += ', ' + pointX : this.xAxis.labels.push(pointX);\n      point.xValue = index;\n    }\n  };\n  /**\n   * To find average of given property\n   */\n  SeriesBase.prototype.getAverage = function (member, i, data) {\n    if (data === void 0) {\n      data = this.currentViewData;\n    }\n    var previous = data[i - 1] ? data[i - 1][member] || 0 : 0;\n    var next = data[i + 1] ? data[i + 1][member] || 0 : 0;\n    return (previous + next) / 2;\n  };\n  /**\n   * To find the control points for spline.\n   *\n   * @returns {void}\n   * @private\n   */\n  SeriesBase.prototype.refreshDataManager = function (chart) {\n    var _this = this;\n    this.chart = chart;\n    var dataSource;\n    var isAngular = 'isAngular';\n    if (chart[isAngular]) {\n      dataSource = Object.keys(this.dataSource).length ? this.dataSource : chart.dataSource;\n    } else {\n      dataSource = this.dataSource || chart.dataSource;\n    }\n    if (!(dataSource instanceof DataManager) && isNullOrUndefined(this.query)) {\n      this.dataManagerSuccess({\n        result: dataSource,\n        count: dataSource.length\n      }, false);\n      return;\n    }\n    var dataManager = this.dataModule.getData(this.dataModule.generateQuery().requiresCount());\n    dataManager.then(function (e) {\n      return _this.dataManagerSuccess(e);\n    });\n  };\n  SeriesBase.prototype.dataManagerSuccess = function (e, isRemoteData) {\n    if (isRemoteData === void 0) {\n      isRemoteData = true;\n    }\n    this.currentViewData = e.count ? e.result : [];\n    this.chart.allowServerDataBinding = false;\n    if (this instanceof Series) {\n      if (this.chart.stockChart) {\n        this.chart.stockChart.series[this.index].localData = this.currentViewData;\n      }\n      var argsData = {\n        name: seriesRender,\n        series: this,\n        data: this.currentViewData,\n        fill: this.interior\n      };\n      this.chart.trigger(seriesRender, argsData);\n      this.interior = argsData.fill;\n      this.currentViewData = argsData.data;\n    }\n    if (this.chart.stockChart && !(this instanceof Series)) {\n      this.currentViewData = this.chart.stockChart.findCurrentData(this.chart.stockChart.series[0].localData, this.chart.stockChart.series[0].xName);\n    }\n    this.processJsonData();\n    this.recordsCount = e.count;\n    this.refreshChart(isRemoteData);\n    this.currentViewData = null;\n  };\n  SeriesBase.prototype.refreshChart = function (isRemoteData) {\n    var chart = this.chart;\n    if (this instanceof Series) {\n      chart.visibleSeriesCount += isRemoteData ? 1 : 0;\n    }\n    chart.refreshTechnicalIndicator(this);\n    if (this instanceof Series && this.category !== 'TrendLine') {\n      for (var _i = 0, _a = this.trendlines; _i < _a.length; _i++) {\n        var trendline = _a[_i];\n        trendline.setDataSource(this, chart);\n      }\n    }\n    //if (chart.visibleSeries.length === (chart.visibleSeriesCount - chart.indicators.length)) {\n    if (chart.visibleSeries.length === chart.visibleSeriesCount) {\n      chart.refreshBound();\n      chart.trigger('loaded', {\n        chart: chart.isBlazor ? {} : chart\n      });\n      if (this.chart.stockChart && this.chart.stockChart.initialRender) {\n        this.chart.stockChart.initialRender = false;\n        this.chart.stockChart.stockChartDataManagerSuccess();\n      }\n    }\n    if (this instanceof Series) {\n      chart.visibleSeriesCount += isRemoteData ? 0 : 1;\n    }\n  };\n  __decorate([Property('')], SeriesBase.prototype, \"xName\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"colorName\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"high\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"low\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"open\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"close\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"volume\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"pointColorMapping\", void 0);\n  __decorate([Property(true)], SeriesBase.prototype, \"visible\", void 0);\n  __decorate([Property(null)], SeriesBase.prototype, \"xAxisName\", void 0);\n  __decorate([Property(null)], SeriesBase.prototype, \"yAxisName\", void 0);\n  __decorate([Complex(null, Animation)], SeriesBase.prototype, \"animation\", void 0);\n  __decorate([Property(null)], SeriesBase.prototype, \"fill\", void 0);\n  __decorate([Property(1)], SeriesBase.prototype, \"width\", void 0);\n  __decorate([Property('0')], SeriesBase.prototype, \"dashArray\", void 0);\n  __decorate([Property('')], SeriesBase.prototype, \"dataSource\", void 0);\n  __decorate([Property()], SeriesBase.prototype, \"query\", void 0);\n  __decorate([Collection([], ChartSegment)], SeriesBase.prototype, \"segments\", void 0);\n  __decorate([Property('X')], SeriesBase.prototype, \"segmentAxis\", void 0);\n  __decorate([Property(false)], SeriesBase.prototype, \"enableComplexProperty\", void 0);\n  return SeriesBase;\n}(ChildProperty);\nexport { SeriesBase };\n/**\n * Configures the series in charts.\n *\n * @public\n */\nvar Series = /** @class */function (_super) {\n  __extends(Series, _super);\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  function Series(parent, propName, defaultValue, isArray) {\n    var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n    _this.visibleSeriesCount = 0;\n    /** @private */\n    _this.category = 'Series';\n    /** @private */\n    _this.isRectSeries = false;\n    /** @private */\n    _this.drawPoints = [];\n    /** @private */\n    _this.lowDrawPoints = [];\n    /** @private */\n    _this.delayedAnimation = false;\n    /** @private */\n    _this.rangeColorName = _this.colorName.length > 0 ? _this.colorName : _this.yName;\n    return _this;\n  }\n  /**\n   * Refresh the axis label.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.refreshAxisLabel = function () {\n    if (this.xAxis.valueType !== 'Category') {\n      return null;\n    }\n    this.xAxis.labels = [];\n    this.xAxis.indexLabels = {};\n    for (var _i = 0, _a = this.xAxis.series; _i < _a.length; _i++) {\n      var item = _a[_i];\n      if (item.visible && item.category !== 'TrendLine') {\n        item.xMin = Infinity;\n        item.xMax = -Infinity;\n        for (var _b = 0, _c = item.points; _b < _c.length; _b++) {\n          var point = _c[_b];\n          item.pushCategoryData(point, point.index, point.x);\n          item.xMin = Math.min(item.xMin, point.xValue);\n          item.xMax = Math.max(item.xMax, point.xValue);\n        }\n      }\n    }\n  };\n  /**\n   * To get the series collection.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.findSeriesCollection = function (column, row, isStack) {\n    var seriesCollection = [];\n    for (var _i = 0, _a = row.axes; _i < _a.length; _i++) {\n      var rowAxis = _a[_i];\n      for (var _b = 0, _c = rowAxis.series; _b < _c.length; _b++) {\n        var rowSeries = _c[_b];\n        for (var _d = 0, _e = column.axes; _d < _e.length; _d++) {\n          var axis = _e[_d];\n          for (var _f = 0, _g = axis.series; _f < _g.length; _f++) {\n            var series = _g[_f];\n            if (series === rowSeries && series.visible && this.rectSeriesInChart(series, isStack)) {\n              seriesCollection.push(series);\n            }\n          }\n        }\n      }\n    }\n    return seriesCollection;\n  };\n  /**\n   * To get the column type series.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.rectSeriesInChart = function (series, isStack) {\n    var type = series.type.toLowerCase();\n    return type.indexOf('column') !== -1 || type.indexOf('bar') !== -1 || type.indexOf('histogram') !== -1 || type.indexOf('hiloopenclose') !== -1 || type.indexOf('candle') !== -1 || type.indexOf('pareto') !== -1 || type.indexOf('hilo') !== -1 || series.drawType.indexOf('Column') !== -1 || type.indexOf('waterfall') !== -1 || type.indexOf('boxandwhisker') !== -1 || isStack;\n  };\n  /**\n   * To calculate the stacked values.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.calculateStackedValue = function (isStacking100, chart) {\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var columnItem = _a[_i];\n      for (var _b = 0, _c = chart.rows; _b < _c.length; _b++) {\n        var item = _c[_b];\n        this.calculateStackingValues(this.findSeriesCollection(columnItem, item, true), isStacking100);\n      }\n    }\n  };\n  Series.prototype.calculateStackingValues = function (seriesCollection, isStacking100) {\n    var startValues;\n    var endValues;\n    var yValues = [];\n    var lastPositive = [];\n    var lastNegative = [];\n    var stackingGroup;\n    var lastValue;\n    var value;\n    var frequencies = [];\n    if (isStacking100) {\n      frequencies = this.findFrequencies(seriesCollection);\n    }\n    var stackingSeies = [];\n    var stackedValues = [];\n    var visiblePoints = [];\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n      if (series.type.indexOf('Stacking') !== -1 || series.drawType.indexOf('Stacking') !== -1 && series.chart.chartAreaType === 'PolarRadar') {\n        stackingGroup = series.type.indexOf('StackingArea') !== -1 ? 'StackingArea100' : series.type.indexOf('StackingLine') !== -1 ? 'StackingLine100' : series.stackingGroup;\n        if (!lastPositive[stackingGroup]) {\n          lastPositive[stackingGroup] = [];\n          lastNegative[stackingGroup] = [];\n        }\n        yValues = series.yData;\n        startValues = [];\n        endValues = [];\n        stackingSeies.push(series);\n        visiblePoints = getVisiblePoints(series);\n        for (var j = 0, pointsLength = visiblePoints.length; j < pointsLength; j++) {\n          lastValue = 0;\n          value = +yValues[j]; // Fix for chart not rendering while y value is given as string issue\n          if (lastPositive[stackingGroup][visiblePoints[j].xValue] === undefined) {\n            lastPositive[stackingGroup][visiblePoints[j].xValue] = 0;\n          }\n          if (lastNegative[stackingGroup][visiblePoints[j].xValue] === undefined) {\n            lastNegative[stackingGroup][visiblePoints[j].xValue] = 0;\n          }\n          if (isStacking100) {\n            value = value / frequencies[stackingGroup][visiblePoints[j].xValue] * 100;\n            value = !isNaN(value) ? value : 0;\n            visiblePoints[j].percentage = +value.toFixed(2);\n          } else {\n            stackedValues[j] = stackedValues[j] ? stackedValues[j] + Math.abs(value) : Math.abs(value);\n          }\n          if (value >= 0) {\n            lastValue = lastPositive[stackingGroup][visiblePoints[j].xValue];\n            lastPositive[stackingGroup][visiblePoints[j].xValue] += value;\n          } else {\n            lastValue = lastNegative[stackingGroup][visiblePoints[j].xValue];\n            lastNegative[stackingGroup][visiblePoints[j].xValue] += value;\n          }\n          startValues.push(lastValue);\n          endValues.push(value + lastValue);\n          if (isStacking100 && endValues[j] > 100) {\n            endValues[j] = 100;\n          }\n        }\n        series.stackedValues = new StackValues(startValues, endValues);\n        var isLogAxis = series.yAxis.valueType === 'Logarithmic';\n        var isColumnBarType = series.type.indexOf(\"Column\") !== -1 || series.type.indexOf(\"Bar\") !== -1;\n        series.yMin = isLogAxis && isColumnBarType && series.yMin < 1 ? series.yMin : Math.min.apply(0, startValues);\n        series.yMax = Math.max.apply(0, endValues);\n        if (series.yMin > Math.min.apply(0, endValues)) {\n          series.yMin = isStacking100 ? -100 : isLogAxis && isColumnBarType && series.yMin < 1 ? series.yMin : Math.min.apply(0, endValues);\n        }\n        if (series.yMax < Math.max.apply(0, startValues)) {\n          series.yMax = 0;\n        }\n      }\n    }\n    this.findPercentageOfStacking(stackingSeies, stackedValues, isStacking100);\n  };\n  Series.prototype.findPercentageOfStacking = function (stackingSeies, values, isStacking100) {\n    for (var _i = 0, stackingSeies_1 = stackingSeies; _i < stackingSeies_1.length; _i++) {\n      var item = stackingSeies_1[_i];\n      if (isStacking100) {\n        return null;\n      }\n      for (var _a = 0, _b = getVisiblePoints(item); _a < _b.length; _a++) {\n        var point = _b[_a];\n        point.percentage = Math.abs(+(point.y / values[point.index] * 100).toFixed(2));\n      }\n    }\n  };\n  Series.prototype.findFrequencies = function (seriesCollection) {\n    var frequencies = [];\n    var stackingGroup;\n    var visiblePoints = [];\n    for (var _i = 0, seriesCollection_2 = seriesCollection; _i < seriesCollection_2.length; _i++) {\n      var series = seriesCollection_2[_i];\n      series.yAxis.isStack100 = series.type.indexOf('100') !== -1 ? true : false;\n      visiblePoints = getVisiblePoints(series);\n      if (series.type.indexOf('Stacking') !== -1) {\n        stackingGroup = series.type.indexOf('StackingArea') !== -1 ? 'StackingArea100' : series.type.indexOf('StackingLine') !== -1 ? 'StackingLine100' : series.stackingGroup;\n        if (!frequencies[stackingGroup]) {\n          frequencies[stackingGroup] = [];\n        }\n        for (var j = 0, pointsLength = visiblePoints.length; j < pointsLength; j++) {\n          if (frequencies[stackingGroup][visiblePoints[j].xValue] === undefined) {\n            frequencies[stackingGroup][visiblePoints[j].xValue] = 0;\n          }\n          if (series.yData[j] > 0) {\n            frequencies[stackingGroup][visiblePoints[j].xValue] += series.yData[j];\n          } else {\n            frequencies[stackingGroup][visiblePoints[j].xValue] -= series.yData[j];\n          }\n        }\n      }\n    }\n    return frequencies;\n  };\n  /* private dataManagerFailure(e: { result: Object[] }): void {\n       this.currentViewData = [];\n       this.refreshChart();\n   }*/\n  /** @private */\n  Series.prototype.renderSeries = function (chart) {\n    var seriesType = firstToLowerCase(this.type);\n    seriesType = seriesType.replace('100', '');\n    if (chart[seriesType + 'SeriesModule']) {\n      if (this.category !== 'Indicator' && this.category !== 'TrendLine') {\n        this.createSeriesElements(chart);\n      }\n      this.visiblePoints = getVisiblePoints(this);\n      chart[seriesType + 'SeriesModule'].render(this, this.xAxis, this.yAxis, chart.requireInvertedAxis);\n      if (this.category !== 'Indicator') {\n        if (this.errorBar.visible) {\n          this.chart.errorBarModule.render(this);\n        }\n        if (this.marker.dataLabel.visible) {\n          chart.dataLabelModule.render(this, this.chart, this.marker.dataLabel);\n        }\n        this.appendSeriesElement(chart.seriesElements, chart);\n      }\n      if (!this.chart.enableCanvas) {\n        this.performAnimation(chart, seriesType, this.errorBar, this.marker, this.marker.dataLabel);\n      }\n    }\n  };\n  /**\n   * To create seris element.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.createSeriesElements = function (chart) {\n    if (this.category !== 'Indicator') {\n      var elementId = chart.element.id;\n      // 8 for extend border value 5 for extend size value\n      var explodeValue = this.marker.border.width + 8 + 5;\n      var render = this.type === 'Scatter' || this.type === 'Bubble' ? chart.svgRenderer : chart.renderer;\n      var index = this.index === undefined ? this.category : this.index;\n      var markerHeight = void 0;\n      var markerWidth = void 0;\n      var options = void 0;\n      if (this.type === 'Scatter') {\n        markerHeight = chart.primaryYAxis.maximum || chart.primaryXAxis.maximum ? 0 : (this.marker.height + explodeValue) / 2;\n        markerWidth = chart.primaryYAxis.maximum || chart.primaryXAxis.maximum ? 0 : (this.marker.width + explodeValue) / 2;\n      } else {\n        markerHeight = 0;\n        markerWidth = 0;\n      }\n      if (chart.chartAreaType === 'PolarRadar') {\n        var markerMaxValue = this.drawType === 'Scatter' ? Math.max(this.marker.width, this.marker.height) : 0;\n        options = new CircleOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', {\n          width: 1,\n          color: 'Gray'\n        }, 1, this.clipRect.width / 2 + this.clipRect.x, this.clipRect.height / 2 + this.clipRect.y, chart.radius + markerMaxValue);\n        this.clipRectElement = appendClipElement(chart.redraw, options, render, 'drawCircularClipPath');\n      } else {\n        options = new RectOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', {\n          width: 1,\n          color: 'Gray'\n        }, 1, {\n          x: -markerWidth,\n          y: -markerHeight,\n          width: this.clipRect.width + markerWidth * 2,\n          height: this.clipRect.height + markerHeight * 2\n        });\n        this.clipRectElement = appendClipElement(chart.redraw, options, render);\n      }\n      var transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + this.clipRect.x + ',' + this.clipRect.y + ')' : '';\n      this.symbolElement = null;\n      this.seriesElement = render.createGroup({\n        'id': elementId + 'SeriesGroup' + index,\n        'transform': transform,\n        'clip-path': 'url(#' + elementId + '_ChartSeriesClipRect_' + index + ')'\n      });\n      if (!this.chart.enableCanvas || this.type === 'Scatter' || this.type === 'Bubble') {\n        this.seriesElement.appendChild(this.clipRectElement);\n      }\n    }\n  };\n  /**\n   * To append the series.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.appendSeriesElement = function (element, chart) {\n    var marker = this.marker;\n    var dataLabel = marker.dataLabel;\n    var redraw = chart.redraw;\n    if (this.category !== 'TrendLine') {\n      appendChildElement(chart.enableCanvas, chart.seriesElements, this.seriesElement, redraw);\n      var errorBar = this.errorBar;\n      if (errorBar.visible) {\n        if (chart.chartAreaType === 'PolarRadar') {\n          appendChildElement(chart.enableCanvas, chart.seriesElements, this.seriesElement, redraw);\n        } else {\n          appendChildElement(chart.enableCanvas, chart.seriesElements, this.errorBarElement, redraw);\n        }\n      }\n      if (this.type === 'Scatter' || this.type === 'Bubble') {\n        appendChildElement(false, chart.seriesElements, this.seriesElement, redraw);\n      }\n    }\n    if (marker.visible && (chart.chartAreaType === 'Cartesian' || this.drawType !== 'Scatter' && chart.chartAreaType === 'PolarRadar') && this.type !== 'Scatter' && this.type !== 'Bubble' && this.type !== 'Candle' && this.type !== 'Hilo' && this.type !== 'HiloOpenClose' && this.symbolElement) {\n      appendChildElement(chart.enableCanvas, chart.seriesElements, this.symbolElement, redraw);\n    }\n    if (dataLabel.visible && this.textElement) {\n      appendChildElement(chart.enableCanvas, chart.dataLabelElements, this.shapeElement, redraw);\n      appendChildElement(chart.enableCanvas, chart.dataLabelElements, this.textElement, redraw);\n    }\n    if (!chart.enableCanvas && chart.dataLabelElements.hasChildNodes()) {\n      chart.seriesElements.appendChild(chart.dataLabelElements);\n    }\n  };\n  /**\n   * To perform animation for chart series.\n   *\n   * @returns {void}\n   * @private\n   */\n  Series.prototype.performAnimation = function (chart, type, errorBar, marker, dataLabel) {\n    if (this.animation.enable && chart.animateSeries) {\n      chart[type + 'SeriesModule'].doAnimation(this);\n      if (errorBar.visible) {\n        chart.errorBarModule.doErrorBarAnimation(this);\n      }\n      if (marker.visible) {\n        chart.markerRender.doMarkerAnimation(this);\n      }\n      //to datalabel animation disabled for edge and IE\n      if (dataLabel.visible && Browser.info.name !== 'edge' && !Browser.isIE) {\n        chart.dataLabelModule.doDataLabelAnimation(this);\n      }\n    }\n  };\n  /**\n   * To set border color for empty point\n   *\n   * @private\n   */\n  Series.prototype.setPointColor = function (point, color) {\n    color = point.interior || color;\n    return point.isEmpty ? this.emptyPointSettings.fill || color : color;\n  };\n  /**\n   * To set border color for empty point\n   *\n   * @private\n   */\n  Series.prototype.setBorderColor = function (point, border) {\n    border.width = point.isEmpty ? this.emptyPointSettings.border.width || border.width : border.width;\n    border.color = point.isEmpty ? this.emptyPointSettings.border.color || border.color : border.color;\n    return border;\n  };\n  __decorate([Property('')], Series.prototype, \"name\", void 0);\n  __decorate([Property('')], Series.prototype, \"yName\", void 0);\n  __decorate([Property('Line')], Series.prototype, \"drawType\", void 0);\n  __decorate([Property(true)], Series.prototype, \"isClosed\", void 0);\n  __decorate([Property('#2ecd71')], Series.prototype, \"bearFillColor\", void 0);\n  __decorate([Property('#e74c3d')], Series.prototype, \"bullFillColor\", void 0);\n  __decorate([Property(false)], Series.prototype, \"enableSolidCandles\", void 0);\n  __decorate([Property('')], Series.prototype, \"size\", void 0);\n  __decorate([Property(null)], Series.prototype, \"binInterval\", void 0);\n  __decorate([Property(false)], Series.prototype, \"showNormalDistribution\", void 0);\n  __decorate([Property('')], Series.prototype, \"stackingGroup\", void 0);\n  __decorate([Complex({\n    color: 'transparent',\n    width: 0\n  }, Border)], Series.prototype, \"border\", void 0);\n  __decorate([Property(1)], Series.prototype, \"opacity\", void 0);\n  __decorate([Property(0)], Series.prototype, \"zOrder\", void 0);\n  __decorate([Property('')], Series.prototype, \"groupName\", void 0);\n  __decorate([Property('Line')], Series.prototype, \"type\", void 0);\n  __decorate([Complex(null, ErrorBarSettings)], Series.prototype, \"errorBar\", void 0);\n  __decorate([Complex(null, MarkerSettings)], Series.prototype, \"marker\", void 0);\n  __decorate([Complex({}, DragSettings)], Series.prototype, \"dragSettings\", void 0);\n  __decorate([Collection([], Trendline)], Series.prototype, \"trendlines\", void 0);\n  __decorate([Property(true)], Series.prototype, \"enableTooltip\", void 0);\n  __decorate([Property('')], Series.prototype, \"tooltipFormat\", void 0);\n  __decorate([Property('')], Series.prototype, \"tooltipMappingName\", void 0);\n  __decorate([Property('SeriesType')], Series.prototype, \"legendShape\", void 0);\n  __decorate([Property('')], Series.prototype, \"legendImageUrl\", void 0);\n  __decorate([Property(null)], Series.prototype, \"selectionStyle\", void 0);\n  __decorate([Property(null)], Series.prototype, \"unSelectedStyle\", void 0);\n  __decorate([Property(null)], Series.prototype, \"nonHighlightStyle\", void 0);\n  __decorate([Property(1)], Series.prototype, \"minRadius\", void 0);\n  __decorate([Property(3)], Series.prototype, \"maxRadius\", void 0);\n  __decorate([Property('Natural')], Series.prototype, \"splineType\", void 0);\n  __decorate([Property(0.5)], Series.prototype, \"cardinalSplineTension\", void 0);\n  __decorate([Complex(null, EmptyPointSettings)], Series.prototype, \"emptyPointSettings\", void 0);\n  __decorate([Property(true)], Series.prototype, \"showMean\", void 0);\n  __decorate([Property('Normal')], Series.prototype, \"boxPlotMode\", void 0);\n  __decorate([Property(null)], Series.prototype, \"columnWidth\", void 0);\n  __decorate([Property(null)], Series.prototype, \"columnWidthInPixel\", void 0);\n  __decorate([Property(0)], Series.prototype, \"columnSpacing\", void 0);\n  __decorate([Property('#C64E4A')], Series.prototype, \"negativeFillColor\", void 0);\n  __decorate([Property('#4E81BC')], Series.prototype, \"summaryFillColor\", void 0);\n  __decorate([Property()], Series.prototype, \"intermediateSumIndexes\", void 0);\n  __decorate([Property()], Series.prototype, \"sumIndexes\", void 0);\n  __decorate([Complex({\n    color: 'black',\n    width: 2\n  }, Connector)], Series.prototype, \"connector\", void 0);\n  __decorate([Complex(null, CornerRadius)], Series.prototype, \"cornerRadius\", void 0);\n  return Series;\n}(SeriesBase);\nexport { Series };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Property","ChildProperty","Complex","Collection","getValue","isNullOrUndefined","extend","StackValues","RectOption","appendChildElement","appendClipElement","firstToLowerCase","CircleOption","getColorByValue","Rect","Border","Font","Margin","Animation","EmptyPointSettings","CornerRadius","Connector","DragSettings","DataManager","DataUtil","Offset","seriesRender","sort","getVisiblePoints","setRange","Browser","DataLabelSettings","_super","apply","width","color","left","right","top","bottom","size","fontStyle","fontWeight","fontFamily","MarkerSettings","x","y","Points","symbolLocations","regions","percentage","regionData","isSelect","marker","visible","isPointInRange","Trendline","_this","clipRect","setDataSource","series","chart","points","trendLineModule","initDataSource","visibleSeriesCount","ErrorBarCapSettings","ChartSegment","ErrorBarSettings","SeriesBase","isAdvancedColor","undefined","currentViewData","seriesType","isRectTypeSeries","processJsonData","point","xName","Series","type","textMappingName","dataLabel","name","processInternalData","category","yName","paretoSeriesModule","performCumulativeCalculation","indexOf","len","xMin","Infinity","xMax","yMin","yMax","sizeMax","getSeriesType","xAxis","valueType","dataPoint","pushCategoryData","pushData","setEmptyPoint","option","skeleton","dateParser","intl","getDateParser","dateFormatter","getDateFormat","Date","parse","parseJson","val","xValue","toString","isBlazor","drawType","chartAreaType","isArea","isRange","findSplinePoint","maximum","minimum","calculateBinValues","histogramValues","binWidth","index","yValue","Math","min","max","xData","push","getObjectValueByMappingString","enableComplexProperty","getObjectValue","high","low","open","close","volume","interior","pointColorMapping","text","tooltip","tooltipMappingName","isAdvancedColorSupported","rangeColorName","colorName","colorValue","getPointFillColor","rangeColorSettings","visibleSeries","pointFill","value","_i","_a","rangeMap","start","end","colors","mappingName","data","findVisibility","isEmpty","mode","emptyPointSettings","yData","isNaN","getAverage","yValues","yAxisMin","yAxis","yAxisMax","setXYMinMax","setHiloMinMax","filter","a","isLogAxis","isNegativeValue","seriesMinY","pointX","shared","isIndexed","indexLabels","labels","member","previous","next","refreshDataManager","dataSource","isAngular","keys","query","dataManagerSuccess","result","count","dataManager","dataModule","getData","generateQuery","requiresCount","then","e","isRemoteData","allowServerDataBinding","stockChart","localData","argsData","fill","trigger","findCurrentData","recordsCount","refreshChart","refreshTechnicalIndicator","trendlines","trendline","refreshBound","initialRender","stockChartDataManagerSuccess","parent","propName","defaultValue","isArray","call","isRectSeries","drawPoints","lowDrawPoints","delayedAnimation","refreshAxisLabel","item","_b","_c","findSeriesCollection","column","row","isStack","seriesCollection","axes","rowAxis","rowSeries","_d","_e","axis","_f","_g","rectSeriesInChart","toLowerCase","calculateStackedValue","isStacking100","columns","columnItem","rows","calculateStackingValues","startValues","endValues","lastPositive","lastNegative","stackingGroup","lastValue","frequencies","findFrequencies","stackingSeies","stackedValues","visiblePoints","seriesCollection_1","j","pointsLength","toFixed","abs","isColumnBarType","findPercentageOfStacking","values","stackingSeies_1","seriesCollection_2","isStack100","renderSeries","replace","createSeriesElements","render","requireInvertedAxis","errorBar","errorBarModule","dataLabelModule","appendSeriesElement","seriesElements","enableCanvas","performAnimation","elementId","element","id","explodeValue","border","svgRenderer","renderer","markerHeight","markerWidth","options","primaryYAxis","primaryXAxis","height","markerMaxValue","radius","clipRectElement","redraw","transform","symbolElement","seriesElement","createGroup","appendChild","errorBarElement","textElement","dataLabelElements","shapeElement","hasChildNodes","animation","enable","animateSeries","doAnimation","doErrorBarAnimation","markerRender","doMarkerAnimation","info","isIE","doDataLabelAnimation","setPointColor","setBorderColor"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-charts/src/chart/series/chart-series.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable jsdoc/require-returns */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable valid-jsdoc */\nimport { Property, ChildProperty, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { StackValues, RectOption, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { firstToLowerCase, CircleOption, getColorByValue } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { Border, Font, Margin, Animation, EmptyPointSettings, CornerRadius, Connector, DragSettings } from '../../common/model/base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { Offset } from '../../common/model/base';\nimport { seriesRender } from '../../common/model/constants';\nimport { sort, getVisiblePoints, setRange } from '../../common/utils/helper';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Configures the data label in the series.\n */\nvar DataLabelSettings = /** @class */ (function (_super) {\n    __extends(DataLabelSettings, _super);\n    function DataLabelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], DataLabelSettings.prototype, \"showZero\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"name\", void 0);\n    __decorate([\n        Property('transparent')\n    ], DataLabelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], DataLabelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], DataLabelSettings.prototype, \"angle\", void 0);\n    __decorate([\n        Property(false)\n    ], DataLabelSettings.prototype, \"enableRotation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DataLabelSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"rx\", void 0);\n    __decorate([\n        Property(5)\n    ], DataLabelSettings.prototype, \"ry\", void 0);\n    __decorate([\n        Property('Center')\n    ], DataLabelSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({ width: null, color: null }, Border)\n    ], DataLabelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ left: 5, right: 5, top: 5, bottom: 5 }, Margin)\n    ], DataLabelSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ size: '11px', color: '', fontStyle: 'Normal', fontWeight: 'Normal', fontFamily: 'Segoe UI' }, Font)\n    ], DataLabelSettings.prototype, \"font\", void 0);\n    __decorate([\n        Property(null)\n    ], DataLabelSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('Hide')\n    ], DataLabelSettings.prototype, \"labelIntersectAction\", void 0);\n    return DataLabelSettings;\n}(ChildProperty));\nexport { DataLabelSettings };\n/**\n *  Configures the marker in the series.\n */\nvar MarkerSettings = /** @class */ (function (_super) {\n    __extends(MarkerSettings, _super);\n    function MarkerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], MarkerSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Circle')\n    ], MarkerSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], MarkerSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(5)\n    ], MarkerSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ width: 2, color: null }, Border)\n    ], MarkerSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Offset)\n    ], MarkerSettings.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], MarkerSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], MarkerSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, DataLabelSettings)\n    ], MarkerSettings.prototype, \"dataLabel\", void 0);\n    return MarkerSettings;\n}(ChildProperty));\nexport { MarkerSettings };\n/**\n * Points model for the series.\n *\n * @public\n */\nvar Points = /** @class */ (function () {\n    function Points() {\n        /** point symbol location */\n        this.symbolLocations = null;\n        /** point region */\n        this.regions = null;\n        /** point percentage value */\n        this.percentage = null;\n        /** point region data */\n        this.regionData = null;\n        /** To know the point is selected */\n        this.isSelect = false;\n        /** point marker */\n        this.marker = {\n            visible: false\n        };\n        /**\n         * To identify point y value with in the range.\n         *\n         * @private\n         */\n        this.isPointInRange = true;\n    }\n    return Points;\n}());\nexport { Points };\n/**\n * Defines the behavior of the Trendlines\n */\nvar Trendline = /** @class */ (function (_super) {\n    __extends(Trendline, _super);\n    function Trendline() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.clipRect = new Rect(0, 0, 0, 0);\n        return _this;\n    }\n    /** @private */\n    Trendline.prototype.setDataSource = function (series, chart) {\n        if (series) {\n            this.points = series.points;\n        }\n        chart.trendLineModule.initDataSource(this);\n        chart.visibleSeriesCount++;\n    };\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"name\", void 0);\n    __decorate([\n        Property('0')\n    ], Trendline.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Linear')\n    ], Trendline.prototype, \"type\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"period\", void 0);\n    __decorate([\n        Property(2)\n    ], Trendline.prototype, \"polynomialOrder\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"backwardForecast\", void 0);\n    __decorate([\n        Property(0)\n    ], Trendline.prototype, \"forwardForecast\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], Trendline.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, MarkerSettings)\n    ], Trendline.prototype, \"marker\", void 0);\n    __decorate([\n        Property(true)\n    ], Trendline.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(null)\n    ], Trendline.prototype, \"intercept\", void 0);\n    __decorate([\n        Property('')\n    ], Trendline.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], Trendline.prototype, \"width\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Trendline.prototype, \"legendShape\", void 0);\n    return Trendline;\n}(ChildProperty));\nexport { Trendline };\n/**\n * Configures Error bar in series.\n */\nvar ErrorBarCapSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarCapSettings, _super);\n    function ErrorBarCapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], ErrorBarCapSettings.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarCapSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarCapSettings.prototype, \"opacity\", void 0);\n    return ErrorBarCapSettings;\n}(ChildProperty));\nexport { ErrorBarCapSettings };\nvar ChartSegment = /** @class */ (function (_super) {\n    __extends(ChartSegment, _super);\n    function ChartSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ChartSegment.prototype, \"color\", void 0);\n    __decorate([\n        Property('0')\n    ], ChartSegment.prototype, \"dashArray\", void 0);\n    return ChartSegment;\n}(ChildProperty));\nexport { ChartSegment };\n/**\n * Error bar settings\n *\n * @public\n */\nvar ErrorBarSettings = /** @class */ (function (_super) {\n    __extends(ErrorBarSettings, _super);\n    function ErrorBarSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], ErrorBarSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Fixed')\n    ], ErrorBarSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('Both')\n    ], ErrorBarSettings.prototype, \"direction\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ErrorBarSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(null)\n    ], ErrorBarSettings.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"verticalError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalPositiveError\", void 0);\n    __decorate([\n        Property(3)\n    ], ErrorBarSettings.prototype, \"verticalNegativeError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalPositiveError\", void 0);\n    __decorate([\n        Property(1)\n    ], ErrorBarSettings.prototype, \"horizontalNegativeError\", void 0);\n    __decorate([\n        Complex(null, ErrorBarCapSettings)\n    ], ErrorBarSettings.prototype, \"errorBarCap\", void 0);\n    return ErrorBarSettings;\n}(ChildProperty));\nexport { ErrorBarSettings };\n/**\n * Defines the common behavior of Series and Technical Indicators\n */\nvar SeriesBase = /** @class */ (function (_super) {\n    __extends(SeriesBase, _super);\n    function SeriesBase() {\n        /**\n         * The DataSource field that contains the x value.\n         * It is applicable for series and technical indicators\n         *\n         * @default ''\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isAdvancedColor = undefined;\n        /** @private */\n        _this.currentViewData = [];\n        /** @private */\n        _this.clipRect = new Rect(0, 0, 0, 0);\n        /** @private */\n        _this.seriesType = 'XY';\n        _this.isRectTypeSeries = false;\n        return _this;\n    }\n    /**\n     * Process data for the series.\n     *\n     * @hidden\n     */\n    SeriesBase.prototype.processJsonData = function () {\n        var i = 0;\n        var point = new Points();\n        var xName = (this instanceof Series && this.type === 'Histogram') ? 'x' : this.xName;\n        var textMappingName = this instanceof Series && this.marker.dataLabel.name ?\n            this.marker.dataLabel.name : '';\n        if (this instanceof Series) {\n            if ((this.type === 'Waterfall' || this.type === 'Histogram')) {\n                this.currentViewData = this.chart[firstToLowerCase(this.type) + 'SeriesModule'].\n                    processInternalData(extend([], this.currentViewData, null, true), this);\n            }\n            if (this.category === 'Pareto') {\n                this.currentViewData = sort(extend([], this.currentViewData, null, true), [this.yName], true);\n                if (this.type === 'Line') {\n                    this.currentViewData = this.chart.paretoSeriesModule.performCumulativeCalculation(this.currentViewData, this);\n                }\n            }\n            this.isRectTypeSeries = this.type.indexOf('Column') > -1 || this.type.indexOf('Bar') > -1\n                || this.type.indexOf('Histogram') > -1;\n        }\n        var len = (this.currentViewData || []).length;\n        this.points = [];\n        this.xMin = Infinity;\n        this.xMax = -Infinity;\n        this.yMin = Infinity;\n        this.yMax = -Infinity;\n        this.sizeMax = -Infinity;\n        this.getSeriesType();\n        if (this.xAxis.valueType === 'Category') {\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName, xName);\n                this.pushCategoryData(point, i, point.x);\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        else if (this.xAxis.valueType.indexOf('DateTime') > -1) {\n            var option = {\n                skeleton: 'full',\n                type: 'dateTime'\n            };\n            var dateParser = this.chart.intl.getDateParser(option);\n            var dateFormatter = this.chart.intl.getDateFormat(option);\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName, xName);\n                if (!isNullOrUndefined(point.x) && point.x !== '') {\n                    point.x = new Date(DataUtil.parse.parseJson({ val: point.x }).val);\n                    if (this.xAxis.valueType === 'DateTime') {\n                        point.xValue = Date.parse(point.x.toString());\n                    }\n                    else {\n                        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                        this.chart.isBlazor ? this.pushCategoryData(point, i, Date.parse(point.x.toString()).toString()) :\n                            this.pushCategoryData(point, i, Date.parse(dateParser(dateFormatter(point.x))).toString());\n                    }\n                    this.pushData(point, i);\n                    this.setEmptyPoint(point, i);\n                }\n                else {\n                    point.visible = false;\n                }\n                i++;\n            }\n        }\n        else {\n            while (i < len) {\n                point = this.dataPoint(i, textMappingName, xName);\n                point.xValue = point.x;\n                this.pushData(point, i);\n                this.setEmptyPoint(point, i);\n                i++;\n            }\n        }\n        if (this instanceof Series) {\n            if (this.type.indexOf('Spline') > -1 || (this.drawType.indexOf('Spline') > -1 && this.chart.chartAreaType === 'PolarRadar')) {\n                var isArea = (this.type.indexOf('Area') > -1 || this.drawType.indexOf('Area') > -1);\n                var isRange = this.type.indexOf('Range') > -1;\n                this.chart['spline' + (isArea ? isRange ? 'RangeArea' : 'Area' : '') + 'SeriesModule'].findSplinePoint(this);\n            }\n            else if (this.type.indexOf('Histogram') > -1 && (this.xAxis.maximum || this.xAxis.minimum)) {\n                this.chart['histogramSeriesModule'].calculateBinValues(this);\n            }\n            if (this.type.indexOf('Histogram') > -1 && this.points.length == 1) {\n                this.xMin = this.xMin - this.histogramValues.binWidth;\n                this.xMax = this.xMax + this.histogramValues.binWidth;\n            }\n        }\n    };\n    SeriesBase.prototype.pushData = function (point, i) {\n        point.index = i;\n        point.yValue = point.y;\n        // To find the min, max for the axis range.\n        this.xMin = Math.min(this.xMin, point.xValue);\n        this.xMax = Math.max(this.xMax, point.xValue);\n        this.xData.push(point.xValue);\n    };\n    /** @private */\n    SeriesBase.prototype.dataPoint = function (i, textMappingName, xName) {\n        this.points[i] = new Points();\n        var point = this.points[i];\n        var currentViewData = this.currentViewData[i];\n        var getObjectValueByMappingString = this.enableComplexProperty ? getValue : this.getObjectValue;\n        point.x = getObjectValueByMappingString(xName, currentViewData);\n        point.high = getObjectValueByMappingString(this.high, currentViewData);\n        point.low = getObjectValueByMappingString(this.low, currentViewData);\n        point.open = getObjectValueByMappingString(this.open, currentViewData);\n        point.close = getObjectValueByMappingString(this.close, currentViewData);\n        point.volume = getObjectValueByMappingString(this.volume, currentViewData);\n        point.interior = getObjectValueByMappingString(this.pointColorMapping, currentViewData);\n        if (this instanceof Series) {\n            point.y = getObjectValueByMappingString(this.yName, currentViewData);\n            point.size = getObjectValueByMappingString(this.size, currentViewData);\n            point.text = getObjectValueByMappingString(textMappingName, currentViewData);\n            point.tooltip = getObjectValueByMappingString(this.tooltipMappingName, currentViewData);\n            if (this.isAdvancedColorSupported()) {\n                this.rangeColorName = this.colorName.length > 0 ? this.colorName : this.yName;\n                point.colorValue = getObjectValueByMappingString(this.rangeColorName, currentViewData);\n                point.interior = this.getPointFillColor(point.interior, point.colorValue);\n            }\n        }\n        return point;\n    };\n    SeriesBase.prototype.isAdvancedColorSupported = function () {\n        if (isNullOrUndefined(this.isAdvancedColor)) {\n            if (this.chart.rangeColorSettings && this.chart.rangeColorSettings.length > 0 && this.chart.visibleSeries.length === 1 &&\n                (this.chart.series[0].type === 'Column' || this.chart.series[0].type === 'Bar' ||\n                    this.chart.series[0].type === 'Scatter' || this.chart.series[0].type === 'Bubble')) {\n                this.isAdvancedColor = true;\n            }\n            else {\n                this.isAdvancedColor = false;\n            }\n        }\n        return this.isAdvancedColor;\n    };\n    SeriesBase.prototype.getPointFillColor = function (pointFill, value) {\n        var color = pointFill;\n        if (value && this.chart.rangeColorSettings && this.chart.rangeColorSettings.length > 0) {\n            for (var _i = 0, _a = this.chart.rangeColorSettings; _i < _a.length; _i++) {\n                var rangeMap = _a[_i];\n                if (value >= rangeMap.start && value <= rangeMap.end) {\n                    if (rangeMap.colors.length > 1) {\n                        color = getColorByValue(rangeMap, value);\n                    }\n                    else {\n                        color = rangeMap.colors[0];\n                    }\n                }\n            }\n        }\n        return color;\n    };\n    SeriesBase.prototype.getObjectValue = function (mappingName, data) {\n        return data[mappingName];\n    };\n    /**\n     * To set empty point value based on empty point mode\n     *\n     * @private\n     */\n    SeriesBase.prototype.setEmptyPoint = function (point, i) {\n        if (!this.findVisibility(point)) {\n            point.visible = true;\n            return null;\n        }\n        point.isEmpty = true;\n        var mode = this instanceof Series && point.isPointInRange ? this.emptyPointSettings.mode : 'Drop';\n        switch (mode) {\n            case 'Zero':\n                point.visible = true;\n                if (this instanceof Series && this.seriesType.indexOf('HighLow') > -1) {\n                    point.high = point.low = 0;\n                    if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n                        point.open = point.close = 0;\n                    }\n                }\n                else {\n                    point.y = point.yValue = this.yData[i] = 0;\n                }\n                break;\n            case 'Average':\n                if (this instanceof Series) {\n                    if (this.seriesType.indexOf('HighLow') > -1) {\n                        point.high = (isNullOrUndefined(point.high) || isNaN(+point.high)) ? this.getAverage(this.high, i) : point.high;\n                        point.low = (isNullOrUndefined(point.low) || isNaN(+point.low)) ? this.getAverage(this.low, i) : point.low;\n                        if (this.seriesType.indexOf('HighLowOpenClose') > -1) {\n                            point.open = (isNullOrUndefined(point.open) || isNaN(+point.open)) ? this.getAverage(this.open, i) : point.open;\n                            point.close = (isNullOrUndefined(point.close) || isNaN(+point.close)) ? this.getAverage(this.close, i) :\n                                point.close;\n                        }\n                    }\n                    else {\n                        point.y = point.yValue = this.yData[i] = this.getAverage(this.yName, i);\n                    }\n                }\n                point.visible = true;\n                break;\n            case 'Drop':\n            case 'Gap':\n                this.yData[i] = null;\n                point.visible = false;\n                break;\n        }\n    };\n    SeriesBase.prototype.findVisibility = function (point) {\n        var type = this instanceof Series ? this.seriesType : 'HighLowOpenClose';\n        var yValues;\n        var yAxisMin = this.yAxis.minimum;\n        var yAxisMax = this.yAxis.maximum;\n        switch (type) {\n            case 'XY':\n                if (this.chart.chartAreaType === 'PolarRadar' && ((!isNullOrUndefined(yAxisMin) && point.yValue < yAxisMin) ||\n                    (!isNullOrUndefined(yAxisMax) && point.yValue > yAxisMax))) {\n                    point.isPointInRange = false;\n                    return true;\n                }\n                this.setXYMinMax(point.yValue);\n                this.yData.push(point.yValue);\n                if (this instanceof Series && this.type === 'Bubble') {\n                    this.sizeMax = Math.max(this.sizeMax, (isNullOrUndefined(point.size) || isNaN(+point.size)) ? this.sizeMax\n                        : point.size);\n                }\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.y) || isNaN(+point.y));\n            case 'HighLow':\n                this.setHiloMinMax(point.high, point.low);\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.low) || isNaN(+point.low)) ||\n                    (isNullOrUndefined(point.high) || isNaN(+point.high));\n            case 'HighLowOpenClose':\n                this.setHiloMinMax(point.high, point.low);\n                return isNullOrUndefined(point.x) || (isNullOrUndefined(point.low) || isNaN(+point.low)) ||\n                    (isNullOrUndefined(point.open) || isNaN(+point.open)) || (isNullOrUndefined(point.close) || isNaN(+point.close))\n                    || (isNullOrUndefined(point.high) || isNaN(+point.high));\n            case 'BoxPlot':\n                yValues = (point.y || [null]).filter(function (value) {\n                    return !isNullOrUndefined(value) && !isNaN(value);\n                }).sort(function (a, b) {\n                    return a - b;\n                });\n                point.y = yValues;\n                this.yMin = Math.min(this.yMin, Math.min.apply(Math, yValues));\n                this.yMax = Math.max(this.yMax, Math.max.apply(Math, yValues));\n                return !yValues.length;\n        }\n    };\n    /**\n     * To get Y min max for the provided point seriesType XY\n     */\n    SeriesBase.prototype.setXYMinMax = function (yValue) {\n        var isLogAxis = (this.yAxis.valueType === 'Logarithmic' || this.xAxis.valueType === 'Logarithmic');\n        var isNegativeValue = yValue < 0;\n        var seriesMinY;\n        if (this.isRectTypeSeries && !setRange(this.yAxis)) {\n            seriesMinY = ((isLogAxis ? (yValue) : isNegativeValue ? yValue : 0));\n        }\n        else {\n            seriesMinY = yValue;\n        }\n        this.yMin = isLogAxis ?\n            Math.min(this.yMin, (isNullOrUndefined(seriesMinY) || isNaN(seriesMinY) || (seriesMinY === 0) ||\n                (seriesMinY.toString() === \"0\") || (seriesMinY.toString() === '')) ? this.yMin : seriesMinY) :\n            Math.min(this.yMin, (isNullOrUndefined(seriesMinY) || isNaN(seriesMinY)) ? this.yMin : seriesMinY);\n        this.yMax = Math.max(this.yMax, (isNullOrUndefined(yValue) || isNaN(yValue)) ? this.yMax : yValue);\n    };\n    /**\n     * To get Y min max for the provided point seriesType XY\n     */\n    SeriesBase.prototype.setHiloMinMax = function (high, low) {\n        this.yMin = Math.min(this.yMin, Math.min((isNullOrUndefined(low) || isNaN(low)) ? this.yMin : low, (isNullOrUndefined(high) || isNaN(high)) ? this.yMin : high));\n        this.yMax = Math.max(this.yMax, Math.max((isNullOrUndefined(low) || isNaN(low)) ? this.yMax : low, (isNullOrUndefined(high) || isNaN(high)) ? this.yMax : high));\n    };\n    /**\n     * Finds the type of the series\n     *\n     * @private\n     */\n    SeriesBase.prototype.getSeriesType = function () {\n        var type;\n        if (this instanceof Series) {\n            var seriesType = this.chart.chartAreaType === 'PolarRadar' ? this.drawType : this.type;\n            if (seriesType) {\n                switch (seriesType) {\n                    case 'RangeColumn':\n                    case 'RangeArea':\n                    case 'SplineRangeArea':\n                    case 'Hilo':\n                        type = 'HighLow';\n                        break;\n                    case 'HiloOpenClose':\n                    case 'Candle':\n                        type = 'HighLowOpenClose';\n                        break;\n                    case 'BoxAndWhisker':\n                        type = 'BoxPlot';\n                        break;\n                    default:\n                        type = 'XY';\n                }\n            }\n        }\n        this.seriesType = type;\n    };\n    /** @private */\n    SeriesBase.prototype.pushCategoryData = function (point, index, pointX) {\n        if (!this.chart.tooltip.shared) {\n            if (!this.visible) {\n                return null;\n            }\n        }\n        if (!this.xAxis.isIndexed) {\n            if (this.xAxis.indexLabels[pointX] === undefined) {\n                this.xAxis.indexLabels[pointX] = this.xAxis.labels.length;\n                this.xAxis.labels.push(pointX);\n            }\n            point.xValue = this.xAxis.indexLabels[pointX];\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            this.xAxis.labels[index] ? this.xAxis.labels[index] += ', ' + pointX :\n                this.xAxis.labels.push(pointX);\n            point.xValue = index;\n        }\n    };\n    /**\n     * To find average of given property\n     */\n    SeriesBase.prototype.getAverage = function (member, i, data) {\n        if (data === void 0) { data = this.currentViewData; }\n        var previous = data[i - 1] ? (data[i - 1][member] || 0) : 0;\n        var next = data[i + 1] ? (data[i + 1][member] || 0) : 0;\n        return (previous + next) / 2;\n    };\n    /**\n     * To find the control points for spline.\n     *\n     * @returns {void}\n     * @private\n     */\n    SeriesBase.prototype.refreshDataManager = function (chart) {\n        var _this = this;\n        this.chart = chart;\n        var dataSource;\n        var isAngular = 'isAngular';\n        if (chart[isAngular]) {\n            dataSource = Object.keys(this.dataSource).length ? this.dataSource : chart.dataSource;\n        }\n        else {\n            dataSource = this.dataSource || chart.dataSource;\n        }\n        if (!(dataSource instanceof DataManager) && isNullOrUndefined(this.query)) {\n            this.dataManagerSuccess({ result: dataSource, count: dataSource.length }, false);\n            return;\n        }\n        var dataManager = this.dataModule.getData(this.dataModule.generateQuery().requiresCount());\n        dataManager.then(function (e) { return _this.dataManagerSuccess(e); });\n    };\n    SeriesBase.prototype.dataManagerSuccess = function (e, isRemoteData) {\n        if (isRemoteData === void 0) { isRemoteData = true; }\n        this.currentViewData = e.count ? e.result : [];\n        this.chart.allowServerDataBinding = false;\n        if (this instanceof Series) {\n            if (this.chart.stockChart) {\n                this.chart.stockChart.series[this.index].localData = this.currentViewData;\n            }\n            var argsData = {\n                name: seriesRender, series: this, data: this.currentViewData, fill: this.interior\n            };\n            this.chart.trigger(seriesRender, argsData);\n            this.interior = argsData.fill;\n            this.currentViewData = argsData.data;\n        }\n        if (this.chart.stockChart && !(this instanceof Series)) {\n            this.currentViewData = this.chart.stockChart.findCurrentData(this.chart.stockChart.series[0].localData, this.chart.stockChart.series[0].xName);\n        }\n        this.processJsonData();\n        this.recordsCount = e.count;\n        this.refreshChart(isRemoteData);\n        this.currentViewData = null;\n    };\n    SeriesBase.prototype.refreshChart = function (isRemoteData) {\n        var chart = this.chart;\n        if (this instanceof Series) {\n            chart.visibleSeriesCount += isRemoteData ? 1 : 0;\n        }\n        chart.refreshTechnicalIndicator(this);\n        if (this instanceof Series && this.category !== 'TrendLine') {\n            for (var _i = 0, _a = this.trendlines; _i < _a.length; _i++) {\n                var trendline = _a[_i];\n                trendline.setDataSource(this, chart);\n            }\n        }\n        //if (chart.visibleSeries.length === (chart.visibleSeriesCount - chart.indicators.length)) {\n        if (chart.visibleSeries.length === (chart.visibleSeriesCount)) {\n            chart.refreshBound();\n            chart.trigger('loaded', { chart: chart.isBlazor ? {} : chart });\n            if (this.chart.stockChart && this.chart.stockChart.initialRender) {\n                this.chart.stockChart.initialRender = false;\n                this.chart.stockChart.stockChartDataManagerSuccess();\n            }\n        }\n        if (this instanceof Series) {\n            chart.visibleSeriesCount += isRemoteData ? 0 : 1;\n        }\n    };\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"xName\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"colorName\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"high\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"low\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"open\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"close\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"volume\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"pointColorMapping\", void 0);\n    __decorate([\n        Property(true)\n    ], SeriesBase.prototype, \"visible\", void 0);\n    __decorate([\n        Property(null)\n    ], SeriesBase.prototype, \"xAxisName\", void 0);\n    __decorate([\n        Property(null)\n    ], SeriesBase.prototype, \"yAxisName\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], SeriesBase.prototype, \"animation\", void 0);\n    __decorate([\n        Property(null)\n    ], SeriesBase.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], SeriesBase.prototype, \"width\", void 0);\n    __decorate([\n        Property('0')\n    ], SeriesBase.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property('')\n    ], SeriesBase.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], SeriesBase.prototype, \"query\", void 0);\n    __decorate([\n        Collection([], ChartSegment)\n    ], SeriesBase.prototype, \"segments\", void 0);\n    __decorate([\n        Property('X')\n    ], SeriesBase.prototype, \"segmentAxis\", void 0);\n    __decorate([\n        Property(false)\n    ], SeriesBase.prototype, \"enableComplexProperty\", void 0);\n    return SeriesBase;\n}(ChildProperty));\nexport { SeriesBase };\n/**\n * Configures the series in charts.\n *\n * @public\n */\nvar Series = /** @class */ (function (_super) {\n    __extends(Series, _super);\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    function Series(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.visibleSeriesCount = 0;\n        /** @private */\n        _this.category = 'Series';\n        /** @private */\n        _this.isRectSeries = false;\n        /** @private */\n        _this.drawPoints = [];\n        /** @private */\n        _this.lowDrawPoints = [];\n        /** @private */\n        _this.delayedAnimation = false;\n        /** @private */\n        _this.rangeColorName = _this.colorName.length > 0 ? _this.colorName : _this.yName;\n        return _this;\n    }\n    /**\n     * Refresh the axis label.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.refreshAxisLabel = function () {\n        if (this.xAxis.valueType !== 'Category') {\n            return null;\n        }\n        this.xAxis.labels = [];\n        this.xAxis.indexLabels = {};\n        for (var _i = 0, _a = this.xAxis.series; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.visible && item.category !== 'TrendLine') {\n                item.xMin = Infinity;\n                item.xMax = -Infinity;\n                for (var _b = 0, _c = item.points; _b < _c.length; _b++) {\n                    var point = _c[_b];\n                    item.pushCategoryData(point, point.index, point.x);\n                    item.xMin = Math.min(item.xMin, point.xValue);\n                    item.xMax = Math.max(item.xMax, point.xValue);\n                }\n            }\n        }\n    };\n    /**\n     * To get the series collection.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.findSeriesCollection = function (column, row, isStack) {\n        var seriesCollection = [];\n        for (var _i = 0, _a = row.axes; _i < _a.length; _i++) {\n            var rowAxis = _a[_i];\n            for (var _b = 0, _c = rowAxis.series; _b < _c.length; _b++) {\n                var rowSeries = _c[_b];\n                for (var _d = 0, _e = column.axes; _d < _e.length; _d++) {\n                    var axis = _e[_d];\n                    for (var _f = 0, _g = axis.series; _f < _g.length; _f++) {\n                        var series = _g[_f];\n                        if (series === rowSeries && series.visible && this.rectSeriesInChart(series, isStack)) {\n                            seriesCollection.push(series);\n                        }\n                    }\n                }\n            }\n        }\n        return seriesCollection;\n    };\n    /**\n     * To get the column type series.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.rectSeriesInChart = function (series, isStack) {\n        var type = (series.type).toLowerCase();\n        return (type.indexOf('column') !== -1 || type.indexOf('bar') !== -1 || type.indexOf('histogram') !== -1 ||\n            type.indexOf('hiloopenclose') !== -1 || type.indexOf('candle') !== -1 || type.indexOf('pareto') !== -1 ||\n            type.indexOf('hilo') !== -1 || series.drawType.indexOf('Column') !== -1 ||\n            type.indexOf('waterfall') !== -1 || type.indexOf('boxandwhisker') !== -1 || isStack);\n    };\n    /**\n     * To calculate the stacked values.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.calculateStackedValue = function (isStacking100, chart) {\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n            var columnItem = _a[_i];\n            for (var _b = 0, _c = chart.rows; _b < _c.length; _b++) {\n                var item = _c[_b];\n                this.calculateStackingValues(this.findSeriesCollection(columnItem, item, true), isStacking100);\n            }\n        }\n    };\n    Series.prototype.calculateStackingValues = function (seriesCollection, isStacking100) {\n        var startValues;\n        var endValues;\n        var yValues = [];\n        var lastPositive = [];\n        var lastNegative = [];\n        var stackingGroup;\n        var lastValue;\n        var value;\n        var frequencies = [];\n        if (isStacking100) {\n            frequencies = this.findFrequencies(seriesCollection);\n        }\n        var stackingSeies = [];\n        var stackedValues = [];\n        var visiblePoints = [];\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            if (series.type.indexOf('Stacking') !== -1 || (series.drawType.indexOf('Stacking') !== -1 &&\n                (series.chart.chartAreaType === 'PolarRadar'))) {\n                stackingGroup = (series.type.indexOf('StackingArea') !== -1) ? 'StackingArea100' :\n                    (series.type.indexOf('StackingLine') !== -1) ? 'StackingLine100' : series.stackingGroup;\n                if (!lastPositive[stackingGroup]) {\n                    lastPositive[stackingGroup] = [];\n                    lastNegative[stackingGroup] = [];\n                }\n                yValues = series.yData;\n                startValues = [];\n                endValues = [];\n                stackingSeies.push(series);\n                visiblePoints = getVisiblePoints(series);\n                for (var j = 0, pointsLength = visiblePoints.length; j < pointsLength; j++) {\n                    lastValue = 0;\n                    value = +yValues[j]; // Fix for chart not rendering while y value is given as string issue\n                    if (lastPositive[stackingGroup][visiblePoints[j].xValue] === undefined) {\n                        lastPositive[stackingGroup][visiblePoints[j].xValue] = 0;\n                    }\n                    if (lastNegative[stackingGroup][visiblePoints[j].xValue] === undefined) {\n                        lastNegative[stackingGroup][visiblePoints[j].xValue] = 0;\n                    }\n                    if (isStacking100) {\n                        value = value / frequencies[stackingGroup][visiblePoints[j].xValue] * 100;\n                        value = !isNaN(value) ? value : 0;\n                        visiblePoints[j].percentage = +(value.toFixed(2));\n                    }\n                    else {\n                        stackedValues[j] = stackedValues[j] ? stackedValues[j] + Math.abs(value) : Math.abs(value);\n                    }\n                    if (value >= 0) {\n                        lastValue = lastPositive[stackingGroup][visiblePoints[j].xValue];\n                        lastPositive[stackingGroup][visiblePoints[j].xValue] += value;\n                    }\n                    else {\n                        lastValue = lastNegative[stackingGroup][visiblePoints[j].xValue];\n                        lastNegative[stackingGroup][visiblePoints[j].xValue] += value;\n                    }\n                    startValues.push(lastValue);\n                    endValues.push(value + lastValue);\n                    if (isStacking100 && (endValues[j] > 100)) {\n                        endValues[j] = 100;\n                    }\n                }\n                series.stackedValues = new StackValues(startValues, endValues);\n                var isLogAxis = series.yAxis.valueType === 'Logarithmic';\n                var isColumnBarType = (series.type.indexOf(\"Column\") !== -1 || series.type.indexOf(\"Bar\") !== -1);\n                series.yMin = isLogAxis && isColumnBarType && series.yMin < 1 ? series.yMin : Math.min.apply(0, startValues);\n                series.yMax = Math.max.apply(0, endValues);\n                if (series.yMin > Math.min.apply(0, endValues)) {\n                    series.yMin = (isStacking100) ? -100 :\n                        isLogAxis && isColumnBarType && series.yMin < 1 ? series.yMin : Math.min.apply(0, endValues);\n                }\n                if (series.yMax < Math.max.apply(0, startValues)) {\n                    series.yMax = 0;\n                }\n            }\n        }\n        this.findPercentageOfStacking(stackingSeies, stackedValues, isStacking100);\n    };\n    Series.prototype.findPercentageOfStacking = function (stackingSeies, values, isStacking100) {\n        for (var _i = 0, stackingSeies_1 = stackingSeies; _i < stackingSeies_1.length; _i++) {\n            var item = stackingSeies_1[_i];\n            if (isStacking100) {\n                return null;\n            }\n            for (var _a = 0, _b = getVisiblePoints(item); _a < _b.length; _a++) {\n                var point = _b[_a];\n                point.percentage = Math.abs(+(point.y / values[point.index] * 100).toFixed(2));\n            }\n        }\n    };\n    Series.prototype.findFrequencies = function (seriesCollection) {\n        var frequencies = [];\n        var stackingGroup;\n        var visiblePoints = [];\n        for (var _i = 0, seriesCollection_2 = seriesCollection; _i < seriesCollection_2.length; _i++) {\n            var series = seriesCollection_2[_i];\n            series.yAxis.isStack100 = series.type.indexOf('100') !== -1 ? true : false;\n            visiblePoints = getVisiblePoints(series);\n            if (series.type.indexOf('Stacking') !== -1) {\n                stackingGroup = (series.type.indexOf('StackingArea') !== -1) ? 'StackingArea100' :\n                    (series.type.indexOf('StackingLine') !== -1) ? 'StackingLine100' : series.stackingGroup;\n                if (!frequencies[stackingGroup]) {\n                    frequencies[stackingGroup] = [];\n                }\n                for (var j = 0, pointsLength = visiblePoints.length; j < pointsLength; j++) {\n                    if (frequencies[stackingGroup][visiblePoints[j].xValue] === undefined) {\n                        frequencies[stackingGroup][visiblePoints[j].xValue] = 0;\n                    }\n                    if (series.yData[j] > 0) {\n                        frequencies[stackingGroup][visiblePoints[j].xValue] += series.yData[j];\n                    }\n                    else {\n                        frequencies[stackingGroup][visiblePoints[j].xValue] -= series.yData[j];\n                    }\n                }\n            }\n        }\n        return frequencies;\n    };\n    /* private dataManagerFailure(e: { result: Object[] }): void {\n         this.currentViewData = [];\n         this.refreshChart();\n     }*/\n    /** @private */\n    Series.prototype.renderSeries = function (chart) {\n        var seriesType = firstToLowerCase(this.type);\n        seriesType = seriesType.replace('100', '');\n        if (chart[seriesType + 'SeriesModule']) {\n            if (this.category !== 'Indicator' && this.category !== 'TrendLine') {\n                this.createSeriesElements(chart);\n            }\n            this.visiblePoints = getVisiblePoints(this);\n            chart[seriesType + 'SeriesModule'].render(this, this.xAxis, this.yAxis, chart.requireInvertedAxis);\n            if (this.category !== 'Indicator') {\n                if (this.errorBar.visible) {\n                    this.chart.errorBarModule.render(this);\n                }\n                if (this.marker.dataLabel.visible) {\n                    chart.dataLabelModule.render(this, this.chart, this.marker.dataLabel);\n                }\n                this.appendSeriesElement(chart.seriesElements, chart);\n            }\n            if (!this.chart.enableCanvas) {\n                this.performAnimation(chart, seriesType, this.errorBar, this.marker, this.marker.dataLabel);\n            }\n        }\n    };\n    /**\n     * To create seris element.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.createSeriesElements = function (chart) {\n        if (this.category !== 'Indicator') {\n            var elementId = chart.element.id;\n            // 8 for extend border value 5 for extend size value\n            var explodeValue = this.marker.border.width + 8 + 5;\n            var render = (this.type === 'Scatter' || this.type === 'Bubble') ?\n                chart.svgRenderer : chart.renderer;\n            var index = this.index === undefined ? this.category : this.index;\n            var markerHeight = void 0;\n            var markerWidth = void 0;\n            var options = void 0;\n            if (this.type === 'Scatter') {\n                markerHeight = (chart.primaryYAxis.maximum || chart.primaryXAxis.maximum) ? 0 : (this.marker.height + explodeValue) / 2;\n                markerWidth = (chart.primaryYAxis.maximum || chart.primaryXAxis.maximum) ? 0 : (this.marker.width + explodeValue) / 2;\n            }\n            else {\n                markerHeight = 0;\n                markerWidth = 0;\n            }\n            if (chart.chartAreaType === 'PolarRadar') {\n                var markerMaxValue = (this.drawType === 'Scatter') ? Math.max(this.marker.width, this.marker.height) : 0;\n                options = new CircleOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, this.clipRect.width / 2 + this.clipRect.x, this.clipRect.height / 2 + this.clipRect.y, chart.radius + markerMaxValue);\n                this.clipRectElement = appendClipElement(chart.redraw, options, render, 'drawCircularClipPath');\n            }\n            else {\n                options = new RectOption(elementId + '_ChartSeriesClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                    x: -markerWidth, y: -markerHeight,\n                    width: this.clipRect.width + markerWidth * 2,\n                    height: this.clipRect.height + markerHeight * 2\n                });\n                this.clipRectElement = appendClipElement(chart.redraw, options, render);\n            }\n            var transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + this.clipRect.x + ',' + (this.clipRect.y) + ')' : '';\n            this.symbolElement = null;\n            this.seriesElement = render.createGroup({\n                'id': elementId + 'SeriesGroup' + index,\n                'transform': transform,\n                'clip-path': 'url(#' + elementId + '_ChartSeriesClipRect_' + index + ')'\n            });\n            if (!this.chart.enableCanvas || this.type === 'Scatter' || this.type === 'Bubble') {\n                this.seriesElement.appendChild(this.clipRectElement);\n            }\n        }\n    };\n    /**\n     * To append the series.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.appendSeriesElement = function (element, chart) {\n        var marker = this.marker;\n        var dataLabel = marker.dataLabel;\n        var redraw = chart.redraw;\n        if (this.category !== 'TrendLine') {\n            appendChildElement(chart.enableCanvas, chart.seriesElements, this.seriesElement, redraw);\n            var errorBar = this.errorBar;\n            if (errorBar.visible) {\n                if (chart.chartAreaType === 'PolarRadar') {\n                    appendChildElement(chart.enableCanvas, chart.seriesElements, this.seriesElement, redraw);\n                }\n                else {\n                    appendChildElement(chart.enableCanvas, chart.seriesElements, this.errorBarElement, redraw);\n                }\n            }\n            if (this.type === 'Scatter' || this.type === 'Bubble') {\n                appendChildElement(false, chart.seriesElements, this.seriesElement, redraw);\n            }\n        }\n        if (marker.visible && (chart.chartAreaType === 'Cartesian' ||\n            ((this.drawType !== 'Scatter') && chart.chartAreaType === 'PolarRadar')) && this.type !== 'Scatter' &&\n            this.type !== 'Bubble' && this.type !== 'Candle' && this.type !== 'Hilo' && this.type !== 'HiloOpenClose' && this.symbolElement) {\n            appendChildElement(chart.enableCanvas, chart.seriesElements, this.symbolElement, redraw);\n        }\n        if (dataLabel.visible && this.textElement) {\n            appendChildElement(chart.enableCanvas, chart.dataLabelElements, this.shapeElement, redraw);\n            appendChildElement(chart.enableCanvas, chart.dataLabelElements, this.textElement, redraw);\n        }\n        if (!chart.enableCanvas && chart.dataLabelElements.hasChildNodes()) {\n            chart.seriesElements.appendChild(chart.dataLabelElements);\n        }\n    };\n    /**\n     * To perform animation for chart series.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.performAnimation = function (chart, type, errorBar, marker, dataLabel) {\n        if (this.animation.enable && chart.animateSeries) {\n            chart[type + 'SeriesModule'].doAnimation(this);\n            if (errorBar.visible) {\n                chart.errorBarModule.doErrorBarAnimation(this);\n            }\n            if (marker.visible) {\n                chart.markerRender.doMarkerAnimation(this);\n            }\n            //to datalabel animation disabled for edge and IE\n            if (dataLabel.visible && Browser.info.name !== 'edge' && !Browser.isIE) {\n                chart.dataLabelModule.doDataLabelAnimation(this);\n            }\n        }\n    };\n    /**\n     * To set border color for empty point\n     *\n     * @private\n     */\n    Series.prototype.setPointColor = function (point, color) {\n        color = point.interior || color;\n        return point.isEmpty ? (this.emptyPointSettings.fill || color) : color;\n    };\n    /**\n     * To set border color for empty point\n     *\n     * @private\n     */\n    Series.prototype.setBorderColor = function (point, border) {\n        border.width = point.isEmpty ? (this.emptyPointSettings.border.width || border.width) : border.width;\n        border.color = point.isEmpty ? (this.emptyPointSettings.border.color || border.color) : border.color;\n        return border;\n    };\n    __decorate([\n        Property('')\n    ], Series.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"yName\", void 0);\n    __decorate([\n        Property('Line')\n    ], Series.prototype, \"drawType\", void 0);\n    __decorate([\n        Property(true)\n    ], Series.prototype, \"isClosed\", void 0);\n    __decorate([\n        Property('#2ecd71')\n    ], Series.prototype, \"bearFillColor\", void 0);\n    __decorate([\n        Property('#e74c3d')\n    ], Series.prototype, \"bullFillColor\", void 0);\n    __decorate([\n        Property(false)\n    ], Series.prototype, \"enableSolidCandles\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Series.prototype, \"binInterval\", void 0);\n    __decorate([\n        Property(false)\n    ], Series.prototype, \"showNormalDistribution\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"stackingGroup\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], Series.prototype, \"border\", void 0);\n    __decorate([\n        Property(1)\n    ], Series.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(0)\n    ], Series.prototype, \"zOrder\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"groupName\", void 0);\n    __decorate([\n        Property('Line')\n    ], Series.prototype, \"type\", void 0);\n    __decorate([\n        Complex(null, ErrorBarSettings)\n    ], Series.prototype, \"errorBar\", void 0);\n    __decorate([\n        Complex(null, MarkerSettings)\n    ], Series.prototype, \"marker\", void 0);\n    __decorate([\n        Complex({}, DragSettings)\n    ], Series.prototype, \"dragSettings\", void 0);\n    __decorate([\n        Collection([], Trendline)\n    ], Series.prototype, \"trendlines\", void 0);\n    __decorate([\n        Property(true)\n    ], Series.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"tooltipFormat\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"tooltipMappingName\", void 0);\n    __decorate([\n        Property('SeriesType')\n    ], Series.prototype, \"legendShape\", void 0);\n    __decorate([\n        Property('')\n    ], Series.prototype, \"legendImageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Series.prototype, \"selectionStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Series.prototype, \"unSelectedStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Series.prototype, \"nonHighlightStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Series.prototype, \"minRadius\", void 0);\n    __decorate([\n        Property(3)\n    ], Series.prototype, \"maxRadius\", void 0);\n    __decorate([\n        Property('Natural')\n    ], Series.prototype, \"splineType\", void 0);\n    __decorate([\n        Property(0.5)\n    ], Series.prototype, \"cardinalSplineTension\", void 0);\n    __decorate([\n        Complex(null, EmptyPointSettings)\n    ], Series.prototype, \"emptyPointSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Series.prototype, \"showMean\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Series.prototype, \"boxPlotMode\", void 0);\n    __decorate([\n        Property(null)\n    ], Series.prototype, \"columnWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Series.prototype, \"columnWidthInPixel\", void 0);\n    __decorate([\n        Property(0)\n    ], Series.prototype, \"columnSpacing\", void 0);\n    __decorate([\n        Property('#C64E4A')\n    ], Series.prototype, \"negativeFillColor\", void 0);\n    __decorate([\n        Property('#4E81BC')\n    ], Series.prototype, \"summaryFillColor\", void 0);\n    __decorate([\n        Property()\n    ], Series.prototype, \"intermediateSumIndexes\", void 0);\n    __decorate([\n        Property()\n    ], Series.prototype, \"sumIndexes\", void 0);\n    __decorate([\n        Complex({ color: 'black', width: 2 }, Connector)\n    ], Series.prototype, \"connector\", void 0);\n    __decorate([\n        Complex(null, CornerRadius)\n    ], Series.prototype, \"cornerRadius\", void 0);\n    return Series;\n}(SeriesBase));\nexport { Series };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}