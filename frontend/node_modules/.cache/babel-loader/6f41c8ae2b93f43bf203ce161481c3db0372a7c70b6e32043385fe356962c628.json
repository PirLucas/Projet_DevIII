{"ast":null,"code":"import { extend, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport * as CONSTANT from '../base/constant';\nimport { updateUndoRedoStatus, isIDevice } from '../base/util';\nimport { KEY_DOWN, KEY_UP } from './../../common/constant';\n/**\n * Formatter\n *\n * @hidden\n\n */\nvar Formatter = /** @class */function () {\n  function Formatter() {}\n  /**\n   * To execute the command\n   *\n   * @param  {IRichTextEditor} self - specifies the self element.\n   * @param  {ActionBeginEventArgs} args - specifies the event arguments.\n   * @param  {MouseEvent|KeyboardEvent} event - specifies the keyboard event.\n   * @param  {IItemCollectionArgs} value - specifies the collection arguments\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.process = function (self, args, event, value) {\n    var _this = this;\n    var selection = self.contentModule.getDocument().getSelection();\n    var range = selection.rangeCount > 0 ? selection.getRangeAt(selection.rangeCount - 1) : null;\n    var saveSelection;\n    if (self.editorMode === 'HTML') {\n      saveSelection = this.editorManager.nodeSelection.save(range, self.contentModule.getDocument());\n    }\n    if (!isNullOrUndefined(args) && args.item.command && args.item.command !== 'Table' && args.item.command !== 'Actions' && args.item.command !== 'Links' && args.item.command !== 'Images' && args.item.command !== 'Files' && range && !(self.contentModule.getEditPanel().contains(this.getAncestorNode(range.commonAncestorContainer)) || self.contentModule.getEditPanel() === range.commonAncestorContainer || self.contentModule.getPanel() === range.commonAncestorContainer)) {\n      return;\n    }\n    if (isNullOrUndefined(args)) {\n      var action_1 = event.action;\n      if (action_1 !== 'tab' && action_1 !== 'enter' && action_1 !== 'space' && action_1 !== 'escape') {\n        args = {};\n        if (self.editorMode === 'Markdown' && action_1 === 'insert-table') {\n          value = {\n            'headingText': self.localeObj.getConstant('TableHeadingText'),\n            'colText': self.localeObj.getConstant('TableColText')\n          };\n        }\n        var items = {\n          originalEvent: event,\n          cancel: false,\n          requestType: action_1 || event.key + 'Key',\n          itemCollection: value\n        };\n        extend(args, args, items, true);\n        self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n          if (actionBeginArgs.cancel) {\n            if (action_1 === 'paste' || action_1 === 'cut' || action_1 === 'copy') {\n              event.preventDefault();\n            }\n          }\n        });\n      }\n      var isTableModule = isNullOrUndefined(self.tableModule) ? true : self.tableModule ? self.tableModule.ensureInsideTableList : false;\n      if (event.which === 9 && isTableModule || event.which !== 9) {\n        if (event.which === 13 && self.editorMode === 'HTML') {\n          value = {\n            'enterAction': self.enterKey\n          };\n        }\n        this.editorManager.observer.notify(event.type === 'keydown' ? KEY_DOWN : KEY_UP, {\n          event: event,\n          callBack: this.onSuccess.bind(this, self),\n          value: value,\n          enterAction: self.enterKey\n        });\n      }\n    } else if (!isNullOrUndefined(args) && args.item.command && args.item.subCommand && (args.item.command !== args.item.subCommand && args.item.command !== 'Font' || (args.item.subCommand === 'FontName' || args.item.subCommand === 'FontSize') && args.name === 'dropDownSelect' || (args.item.subCommand === 'BackgroundColor' || args.item.subCommand === 'FontColor') && args.name === 'colorPickerChanged')) {\n      extend(args, args, {\n        requestType: args.item.subCommand,\n        cancel: false,\n        itemCollection: value,\n        selectType: args.name\n      }, true);\n      self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n        if (!actionBeginArgs.cancel) {\n          if (_this.getUndoRedoStack().length === 0 && actionBeginArgs.item.command !== 'Links' && actionBeginArgs.item.command !== 'Images') {\n            _this.saveData();\n          }\n          self.isBlur = false;\n          self.contentModule.getEditPanel().focus();\n          if (self.editorMode === 'HTML') {\n            saveSelection.restore();\n          }\n          var command = actionBeginArgs.item.subCommand.toLocaleLowerCase();\n          if (command === 'paste' || command === 'cut' || command === 'copy') {\n            self.clipboardAction(command, event);\n          } else {\n            _this.editorManager.observer.notify(CONSTANT.checkUndo, {\n              subCommand: actionBeginArgs.item.subCommand\n            });\n            _this.editorManager.execCommand(actionBeginArgs.item.command, actionBeginArgs.item.subCommand, event, _this.onSuccess.bind(_this, self), actionBeginArgs.item.value, actionBeginArgs.item.subCommand === 'Pre' && actionBeginArgs.selectType === 'dropDownSelect' ? {\n              name: actionBeginArgs.selectType\n            } : value, '#' + self.getID() + ' iframe', self.enterKey);\n          }\n        }\n      });\n    }\n    if (isNullOrUndefined(event) || event && event.action !== 'copy') {\n      this.enableUndo(self);\n    }\n  };\n  Formatter.prototype.getAncestorNode = function (node) {\n    node = node.nodeType === 3 ? node.parentNode : node;\n    return node;\n  };\n  /**\n   * onKeyHandler method\n   *\n   * @param {IRichTextEditor} self - specifies the self element.\n   * @param {KeyboardEvent} e - specifies the keyboard event.\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.onKeyHandler = function (self, e) {\n    var _this = this;\n    this.editorManager.observer.notify(KEY_UP, {\n      event: e,\n      callBack: function () {\n        self.notify(CONSTANT.contentChanged, {});\n        _this.enableUndo(self);\n      }\n    });\n  };\n  /**\n   * onSuccess method\n   *\n   * @param {IRichTextEditor} self - specifies the self element.\n   * @param {IMarkdownFormatterCallBack} events - specifies the event call back\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.onSuccess = function (self, events) {\n    self.notify(CONSTANT.contentChanged, {});\n    if (events && (isNullOrUndefined(events.event) || events.event.action !== 'copy')) {\n      this.enableUndo(self);\n      self.notify(CONSTANT.execCommandCallBack, events);\n    }\n    self.trigger(CONSTANT.actionComplete, events, function (callbackArgs) {\n      self.setPlaceHolder();\n      if (callbackArgs.requestType === 'Images' || callbackArgs.requestType === 'Links' && self.editorMode === 'HTML') {\n        var args = callbackArgs;\n        if (callbackArgs.requestType === 'Links' && callbackArgs.event && callbackArgs.event.type === 'keydown' && callbackArgs.event.keyCode === 32) {\n          return;\n        }\n        self.notify(CONSTANT.insertCompleted, {\n          args: args.event,\n          type: callbackArgs.requestType,\n          isNotify: true,\n          elements: args.elements\n        });\n      }\n      self.autoResize();\n    });\n  };\n  /**\n   * Save the data for undo and redo action.\n   *\n   * @param {KeyboardEvent} e - specifies the keyboard event.\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.saveData = function (e) {\n    this.editorManager.undoRedoManager.saveData(e);\n  };\n  /**\n   * getUndoStatus method\n   *\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.getUndoStatus = function () {\n    return this.editorManager.undoRedoManager.getUndoStatus();\n  };\n  /* eslint-disable */\n  /**\n   * getUndoRedoStack method\n   *\n   * @param {IHtmlUndoRedoData}  - specifies the redo data.\n   * @returns {void}\n   * @hidden\n    */\n  /* eslint-enable */\n  Formatter.prototype.getUndoRedoStack = function () {\n    return this.editorManager.undoRedoManager.undoRedoStack;\n  };\n  /**\n   * enableUndo method\n   *\n   * @param {IRichTextEditor} self - specifies the self element.\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.enableUndo = function (self) {\n    var status = this.getUndoStatus();\n    if (self.inlineMode.enable && (!Browser.isDevice || isIDevice())) {\n      updateUndoRedoStatus(self.quickToolbarModule.inlineQTBar.quickTBarObj, status);\n    } else {\n      if (self.toolbarModule) {\n        updateUndoRedoStatus(self.toolbarModule.baseToolbar, status);\n      }\n    }\n  };\n  return Formatter;\n}();\nexport { Formatter };","map":{"version":3,"names":["extend","isNullOrUndefined","Browser","CONSTANT","updateUndoRedoStatus","isIDevice","KEY_DOWN","KEY_UP","Formatter","prototype","process","self","args","event","value","_this","selection","contentModule","getDocument","getSelection","range","rangeCount","getRangeAt","saveSelection","editorMode","editorManager","nodeSelection","save","item","command","getEditPanel","contains","getAncestorNode","commonAncestorContainer","getPanel","action_1","action","localeObj","getConstant","items","originalEvent","cancel","requestType","key","itemCollection","trigger","actionBegin","actionBeginArgs","preventDefault","isTableModule","tableModule","ensureInsideTableList","which","enterKey","observer","notify","type","callBack","onSuccess","bind","enterAction","subCommand","name","selectType","getUndoRedoStack","length","saveData","isBlur","focus","restore","toLocaleLowerCase","clipboardAction","checkUndo","execCommand","getID","enableUndo","node","nodeType","parentNode","onKeyHandler","e","contentChanged","events","execCommandCallBack","actionComplete","callbackArgs","setPlaceHolder","keyCode","insertCompleted","isNotify","elements","autoResize","undoRedoManager","getUndoStatus","undoRedoStack","status","inlineMode","enable","isDevice","quickToolbarModule","inlineQTBar","quickTBarObj","toolbarModule","baseToolbar"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/formatter/formatter.js"],"sourcesContent":["import { extend, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport * as CONSTANT from '../base/constant';\nimport { updateUndoRedoStatus, isIDevice } from '../base/util';\nimport { KEY_DOWN, KEY_UP } from './../../common/constant';\n/**\n * Formatter\n *\n * @hidden\n\n */\nvar Formatter = /** @class */ (function () {\n    function Formatter() {\n    }\n    /**\n     * To execute the command\n     *\n     * @param  {IRichTextEditor} self - specifies the self element.\n     * @param  {ActionBeginEventArgs} args - specifies the event arguments.\n     * @param  {MouseEvent|KeyboardEvent} event - specifies the keyboard event.\n     * @param  {IItemCollectionArgs} value - specifies the collection arguments\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.process = function (self, args, event, value) {\n        var _this = this;\n        var selection = self.contentModule.getDocument().getSelection();\n        var range = (selection.rangeCount > 0) ? selection.getRangeAt(selection.rangeCount - 1) : null;\n        var saveSelection;\n        if (self.editorMode === 'HTML') {\n            saveSelection = this.editorManager.nodeSelection.save(range, self.contentModule.getDocument());\n        }\n        if (!isNullOrUndefined(args)\n            && args.item.command\n            && args.item.command !== 'Table'\n            && args.item.command !== 'Actions'\n            && args.item.command !== 'Links'\n            && args.item.command !== 'Images'\n            && args.item.command !== 'Files'\n            && range\n            && !(self.contentModule.getEditPanel().contains(this.getAncestorNode(range.commonAncestorContainer))\n                || self.contentModule.getEditPanel() === range.commonAncestorContainer\n                || self.contentModule.getPanel() === range.commonAncestorContainer)) {\n            return;\n        }\n        if (isNullOrUndefined(args)) {\n            var action_1 = event.action;\n            if (action_1 !== 'tab' && action_1 !== 'enter' && action_1 !== 'space' && action_1 !== 'escape') {\n                args = {};\n                if (self.editorMode === 'Markdown' && action_1 === 'insert-table') {\n                    value = {\n                        'headingText': self.localeObj.getConstant('TableHeadingText'),\n                        'colText': self.localeObj.getConstant('TableColText')\n                    };\n                }\n                var items = {\n                    originalEvent: event, cancel: false,\n                    requestType: action_1 || (event.key + 'Key'),\n                    itemCollection: value\n                };\n                extend(args, args, items, true);\n                self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n                    if (actionBeginArgs.cancel) {\n                        if (action_1 === 'paste' || action_1 === 'cut' || action_1 === 'copy') {\n                            event.preventDefault();\n                        }\n                    }\n                });\n            }\n            var isTableModule = isNullOrUndefined(self.tableModule) ? true : self.tableModule ?\n                self.tableModule.ensureInsideTableList : false;\n            if ((event.which === 9 && isTableModule) || event.which !== 9) {\n                if (event.which === 13 && self.editorMode === 'HTML') {\n                    value = {\n                        'enterAction': self.enterKey\n                    };\n                }\n                this.editorManager.observer.notify((event.type === 'keydown' ? KEY_DOWN : KEY_UP), {\n                    event: event,\n                    callBack: this.onSuccess.bind(this, self),\n                    value: value,\n                    enterAction: self.enterKey\n                });\n            }\n        }\n        else if (!isNullOrUndefined(args) && args.item.command && args.item.subCommand && ((args.item.command !== args.item.subCommand\n            && args.item.command !== 'Font')\n            || ((args.item.subCommand === 'FontName' || args.item.subCommand === 'FontSize') && args.name === 'dropDownSelect')\n            || ((args.item.subCommand === 'BackgroundColor' || args.item.subCommand === 'FontColor')\n                && args.name === 'colorPickerChanged'))) {\n            extend(args, args, { requestType: args.item.subCommand, cancel: false, itemCollection: value, selectType: args.name }, true);\n            self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n                if (!actionBeginArgs.cancel) {\n                    if (_this.getUndoRedoStack().length === 0 && actionBeginArgs.item.command !== 'Links'\n                        && actionBeginArgs.item.command !== 'Images') {\n                        _this.saveData();\n                    }\n                    self.isBlur = false;\n                    self.contentModule.getEditPanel().focus();\n                    if (self.editorMode === 'HTML') {\n                        saveSelection.restore();\n                    }\n                    var command = actionBeginArgs.item.subCommand.toLocaleLowerCase();\n                    if (command === 'paste' || command === 'cut' || command === 'copy') {\n                        self.clipboardAction(command, event);\n                    }\n                    else {\n                        _this.editorManager.observer.notify(CONSTANT.checkUndo, { subCommand: actionBeginArgs.item.subCommand });\n                        _this.editorManager.execCommand(actionBeginArgs.item.command, actionBeginArgs.item.subCommand, event, _this.onSuccess.bind(_this, self), actionBeginArgs.item.value, actionBeginArgs.item.subCommand === 'Pre' && actionBeginArgs.selectType === 'dropDownSelect' ?\n                            { name: actionBeginArgs.selectType } : value, ('#' + self.getID() + ' iframe'), self.enterKey);\n                    }\n                }\n            });\n        }\n        if (isNullOrUndefined(event) || event && event.action !== 'copy') {\n            this.enableUndo(self);\n        }\n    };\n    Formatter.prototype.getAncestorNode = function (node) {\n        node = node.nodeType === 3 ? node.parentNode : node;\n        return node;\n    };\n    /**\n     * onKeyHandler method\n     *\n     * @param {IRichTextEditor} self - specifies the self element.\n     * @param {KeyboardEvent} e - specifies the keyboard event.\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.onKeyHandler = function (self, e) {\n        var _this = this;\n        this.editorManager.observer.notify(KEY_UP, {\n            event: e, callBack: function () {\n                self.notify(CONSTANT.contentChanged, {});\n                _this.enableUndo(self);\n            }\n        });\n    };\n    /**\n     * onSuccess method\n     *\n     * @param {IRichTextEditor} self - specifies the self element.\n     * @param {IMarkdownFormatterCallBack} events - specifies the event call back\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.onSuccess = function (self, events) {\n        self.notify(CONSTANT.contentChanged, {});\n        if (events && (isNullOrUndefined(events.event) || events.event.action !== 'copy')) {\n            this.enableUndo(self);\n            self.notify(CONSTANT.execCommandCallBack, events);\n        }\n        self.trigger(CONSTANT.actionComplete, events, function (callbackArgs) {\n            self.setPlaceHolder();\n            if (callbackArgs.requestType === 'Images' || callbackArgs.requestType === 'Links' && self.editorMode === 'HTML') {\n                var args = callbackArgs;\n                if (callbackArgs.requestType === 'Links' && callbackArgs.event &&\n                    callbackArgs.event.type === 'keydown' &&\n                    callbackArgs.event.keyCode === 32) {\n                    return;\n                }\n                self.notify(CONSTANT.insertCompleted, {\n                    args: args.event, type: callbackArgs.requestType, isNotify: true,\n                    elements: args.elements\n                });\n            }\n            self.autoResize();\n        });\n    };\n    /**\n     * Save the data for undo and redo action.\n     *\n     * @param {KeyboardEvent} e - specifies the keyboard event.\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.saveData = function (e) {\n        this.editorManager.undoRedoManager.saveData(e);\n    };\n    /**\n     * getUndoStatus method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.getUndoStatus = function () {\n        return this.editorManager.undoRedoManager.getUndoStatus();\n    };\n    /* eslint-disable */\n    /**\n     * getUndoRedoStack method\n     *\n     * @param {IHtmlUndoRedoData}  - specifies the redo data.\n     * @returns {void}\n     * @hidden\n\n     */\n    /* eslint-enable */\n    Formatter.prototype.getUndoRedoStack = function () {\n        return this.editorManager.undoRedoManager.undoRedoStack;\n    };\n    /**\n     * enableUndo method\n     *\n     * @param {IRichTextEditor} self - specifies the self element.\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.enableUndo = function (self) {\n        var status = this.getUndoStatus();\n        if (self.inlineMode.enable && (!Browser.isDevice || isIDevice())) {\n            updateUndoRedoStatus(self.quickToolbarModule.inlineQTBar.quickTBarObj, status);\n        }\n        else {\n            if (self.toolbarModule) {\n                updateUndoRedoStatus(self.toolbarModule.baseToolbar, status);\n            }\n        }\n    };\n    return Formatter;\n}());\nexport { Formatter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}