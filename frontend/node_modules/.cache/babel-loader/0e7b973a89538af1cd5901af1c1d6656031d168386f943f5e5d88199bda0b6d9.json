{"ast":null,"code":"var _jsxFileName = \"D:\\\\USPERSO IMPLEMENTATION\\\\Projet_DevIII\\\\frontend\\\\src\\\\components\\\\Calendar.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport AddEventModal from \"./AddEventModal\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent({\n      start: moment(event.start).toDate(),\n      end: moment(event.end).toDate(),\n      contenu: event.title\n    });\n  };\n  async function handleEventAdd(data) {\n    try {\n      const response = await fetch(\"http://localhost:3000/api/calendar/create-event\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data.event)\n      });\n      if (!response.ok) {\n        console.error(\"Error adding event:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error in handleEventAdd:\", error);\n    }\n  }\n  async function handleDatesSet(data) {\n    try {\n      const start = moment(data.start).toISOString();\n      const end = moment(data.end).toISOString();\n      const response = await fetch(`http://localhost:3000/api/calendar/get-events?start=${start}&end=${end}`);\n      if (response.ok) {\n        const events = await response.json();\n        setEvents(events);\n      } else {\n        console.error(\"Error getting events:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error in handleDatesSet:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        events: events,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        eventAdd: event => handleEventAdd(event),\n        datesSet: date => handleDatesSet(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","moment","jsxDEV","_jsxDEV","modalOpen","setModalOpen","events","setEvents","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","start","toDate","end","contenu","title","handleEventAdd","data","response","fetch","method","headers","body","JSON","stringify","ok","console","error","statusText","handleDatesSet","toISOString","json","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","position","zIndex","ref","plugins","initialView","eventAdd","datesSet","date","isOpen","onClose"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/src/components/Calendar.jsx"],"sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport AddEventModal from \"./AddEventModal\";\r\nimport moment from \"moment\";\r\n\r\nexport default function () {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [events, setEvents] = useState([])\r\n    const calendarRef = useRef(null);\r\n\r\n    const onEventAdded = event => {\r\n        let calendarApi = calendarRef.current.getApi();\r\n        calendarApi.addEvent({\r\n            start: moment(event.start).toDate(),\r\n            end: moment(event.end).toDate(),\r\n            contenu: event.title\r\n        });\r\n    };\r\n\r\n    async function handleEventAdd(data) {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3000/api/calendar/create-event\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data.event),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                console.error(\"Error adding event:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in handleEventAdd:\", error);\r\n        }\r\n    }\r\n    \r\n    async function handleDatesSet(data) {\r\n        try {\r\n            const start = moment(data.start).toISOString();\r\n            const end = moment(data.end).toISOString();\r\n            const response = await fetch(`http://localhost:3000/api/calendar/get-events?start=${start}&end=${end}`);\r\n    \r\n            if (response.ok) {\r\n                const events = await response.json();\r\n                setEvents(events);\r\n            } else {\r\n                console.error(\"Error getting events:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in handleDatesSet:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\r\n                <div style={{position: \"relative\", zIndex: 0}}>\r\n                    <FullCalendar\r\n                        ref={calendarRef}\r\n                        events={events}\r\n                        plugins={[ dayGridPlugin ]}\r\n                        initialView=\"dayGridMonth\"\r\n                        eventAdd={event => handleEventAdd(event)}\r\n                        datesSet={(date) => handleDatesSet(date)}\r\n                    />\r\n                </div>\r\n\r\n            <AddEventModal isOpen={modalOpen}\r\n                           onClose={() => setModalOpen(false)}\r\n                           onEventAdded={event => onEventAdded(event)}\r\n            />\r\n\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,YAAY;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMa,YAAY,GAAGC,KAAK,IAAI;IAC1B,IAAIC,WAAW,GAAGH,WAAW,CAACI,OAAO,CAACC,MAAM,EAAE;IAC9CF,WAAW,CAACG,QAAQ,CAAC;MACjBC,KAAK,EAAEd,MAAM,CAACS,KAAK,CAACK,KAAK,CAAC,CAACC,MAAM,EAAE;MACnCC,GAAG,EAAEhB,MAAM,CAACS,KAAK,CAACO,GAAG,CAAC,CAACD,MAAM,EAAE;MAC/BE,OAAO,EAAER,KAAK,CAACS;IACnB,CAAC,CAAC;EACN,CAAC;EAED,eAAeC,cAAcA,CAACC,IAAI,EAAE;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAACX,KAAK;MACnC,CAAC,CAAC;MAEF,IAAI,CAACY,QAAQ,CAACO,EAAE,EAAE;QACdC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAET,QAAQ,CAACU,UAAU,CAAC;MAC7D;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ;EAEA,eAAeE,cAAcA,CAACZ,IAAI,EAAE;IAChC,IAAI;MACA,MAAMN,KAAK,GAAGd,MAAM,CAACoB,IAAI,CAACN,KAAK,CAAC,CAACmB,WAAW,EAAE;MAC9C,MAAMjB,GAAG,GAAGhB,MAAM,CAACoB,IAAI,CAACJ,GAAG,CAAC,CAACiB,WAAW,EAAE;MAC1C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDR,KAAM,QAAOE,GAAI,EAAC,CAAC;MAEvG,IAAIK,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMvB,MAAM,GAAG,MAAMgB,QAAQ,CAACa,IAAI,EAAE;QACpC5B,SAAS,CAACD,MAAM,CAAC;MACrB,CAAC,MAAM;QACHwB,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAET,QAAQ,CAACU,UAAU,CAAC;MAC/D;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ;EAEA,oBACI5B,OAAA;IAAAiC,QAAA,gBACIjC,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAMhC,YAAY,CAAC,IAAI,CAAE;MAAA+B,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACzDtC,OAAA;MAAKuC,KAAK,EAAE;QAACC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAC,CAAE;MAAAR,QAAA,eAC1CjC,OAAA,CAACL,YAAY;QACT+C,GAAG,EAAErC,WAAY;QACjBF,MAAM,EAAEA,MAAO;QACfwC,OAAO,EAAE,CAAE/C,aAAa,CAAG;QAC3BgD,WAAW,EAAC,cAAc;QAC1BC,QAAQ,EAAEtC,KAAK,IAAIU,cAAc,CAACV,KAAK,CAAE;QACzCuC,QAAQ,EAAGC,IAAI,IAAKjB,cAAc,CAACiB,IAAI;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC3C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eAEVtC,OAAA,CAACH,aAAa;MAACmD,MAAM,EAAE/C,SAAU;MAClBgD,OAAO,EAAEA,CAAA,KAAM/C,YAAY,CAAC,KAAK,CAAE;MACnCI,YAAY,EAAEC,KAAK,IAAID,YAAY,CAACC,KAAK;IAAE;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEI;AAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}