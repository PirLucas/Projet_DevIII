{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */function (_super) {\n  __extends(PaneProperties, _super);\n  function PaneProperties() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], PaneProperties.prototype, \"size\", void 0);\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsible\", void 0);\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsed\", void 0);\n  __decorate([Property(true)], PaneProperties.prototype, \"resizable\", void 0);\n  __decorate([Property(null)], PaneProperties.prototype, \"min\", void 0);\n  __decorate([Property(null)], PaneProperties.prototype, \"max\", void 0);\n  __decorate([Property()], PaneProperties.prototype, \"content\", void 0);\n  __decorate([Property('')], PaneProperties.prototype, \"cssClass\", void 0);\n  return PaneProperties;\n}(ChildProperty);\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */function (_super) {\n  __extends(Splitter, _super);\n  /**\n   * Initializes a new instance of the Splitter class.\n   *\n   * @param options  - Specifies Splitter model properties as options.\n   * @param element  - Specifies the element that is rendered as an Splitter.\n   */\n  function Splitter(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   *\n   * @param  {SplitterModel} newProp - specifies the new property\n   * @param  {SplitterModel} oldProp - specifies the old property\n   * @returns {void}\n   * @private\n   */\n  Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (!this.element.classList.contains(ROOT)) {\n      return;\n    }\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'height':\n          this.setSplitterSize(this.element, newProp.height, 'height');\n          break;\n        case 'width':\n          this.setSplitterSize(this.element, newProp.width, 'width');\n          break;\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass);\n          break;\n        case 'enabled':\n          this.isEnabled(this.enabled);\n          break;\n        case 'enableReversePanes':\n          this.setReversePane();\n          break;\n        case 'separatorSize':\n          this.setSeparatorSize(newProp.separatorSize);\n          break;\n        case 'orientation':\n          this.changeOrientation(newProp.orientation);\n          break;\n        case 'paneSettings':\n          {\n            if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n              var paneCounts = Object.keys(newProp.paneSettings);\n              for (var i = 0; i < paneCounts.length; i++) {\n                var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                for (var j = 0; j < changedPropsCount; j++) {\n                  var property = Object.keys(newProp.paneSettings[index])[j];\n                  switch (property) {\n                    case 'content':\n                      {\n                        var newValue = Object(newProp.paneSettings[index])[property];\n                        if (!isNullOrUndefined(newValue)) {\n                          this.allPanes[index].innerHTML = '';\n                          this.setTemplate(newValue, this.allPanes[index]);\n                        }\n                        break;\n                      }\n                    case 'resizable':\n                      {\n                        var newVal = Object(newProp.paneSettings[index])[property];\n                        this.resizableModel(index, newVal);\n                        break;\n                      }\n                    case 'collapsible':\n                      this.collapsibleModelUpdate(index);\n                      break;\n                    case 'collapsed':\n                      // eslint-disable-next-line\n                      newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                      break;\n                    case 'cssClass':\n                      this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                      break;\n                    case 'size':\n                      {\n                        var newValSize = Object(newProp.paneSettings[index])[property];\n                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                          this.updatePaneSize(newValSize, index);\n                        }\n                        break;\n                      }\n                  }\n                }\n              }\n            } else {\n              this.destroyPaneSettings();\n              this.allBars = [];\n              this.allPanes = [];\n              this.createSplitPane(this.element);\n              this.addSeparator(this.element);\n              this.getPanesDimensions();\n              this.setRTL(this.enableRtl);\n              this.isCollapsed();\n            }\n            break;\n          }\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n      }\n    }\n  };\n  Splitter.prototype.updatePaneSize = function (newValSize, index) {\n    this.allPanes[index].style.flexBasis = newValSize;\n    var flexPaneIndexes = [];\n    var staticPaneWidth;\n    var flexCount = 0;\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      } else if (this.paneSettings[i].size) {\n        staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n      }\n    }\n    staticPaneWidth = this.orientation === 'Horizontal' ? this.allBars[0].offsetWidth * this.allBars.length + staticPaneWidth : this.allBars[0].offsetHeight * this.allBars.length + staticPaneWidth;\n    var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight) - staticPaneWidth - this.border * 2;\n    var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n    }\n    this.allPanes[index].classList.add(STATIC_PANE);\n  };\n  Splitter.prototype.initializeValues = function () {\n    this.allPanes = [];\n    this.paneOrder = [];\n    this.separatorOrder = [];\n    this.allBars = [];\n    this.previousCoordinates = {};\n    this.currentCoordinates = {};\n    this.updatePrePaneInPercentage = false;\n    this.updateNextPaneInPercentage = false;\n    this.panesDimensions = [];\n    this.border = 0;\n    this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n    this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n    this.iconsDelay = 300;\n    this.templateElement = [];\n    this.collapseFlag = false;\n    this.expandFlag = true;\n  };\n  Splitter.prototype.preRender = function () {\n    this.initializeValues();\n    this.onReportWindowSize = this.reportWindowSize.bind(this);\n    this.onMouseMoveHandler = this.onMouseMove.bind(this);\n    this.onMouseUpHandler = this.onMouseUp.bind(this);\n    this.onTouchMoveHandler = this.onMouseMove.bind(this);\n    this.onTouchEndHandler = this.onMouseUp.bind(this);\n    this.wrapper = this.element.cloneNode(true);\n    this.wrapperParent = this.element.parentElement;\n    removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n    var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n    addClass([this.element], orientation);\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : '';\n    this.setCssClass(this.element, css);\n    if (Browser.isDevice) {\n      addClass([this.element], SPLIT_TOUCH);\n    }\n  };\n  Splitter.prototype.getPersistData = function () {\n    return this.addOnPersist(['paneSettings']);\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns {string} - returns the string value\n   * @private\n   */\n  Splitter.prototype.getModuleName = function () {\n    return 'splitter';\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n  Splitter.prototype.render = function () {\n    this.checkDataAttributes();\n    this.setCssClass(this.element, this.cssClass);\n    this.isEnabled(this.enabled);\n    this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n    this.createSplitPane(this.element);\n    this.addSeparator(this.element);\n    this.getPanesDimensions();\n    this.setPaneSettings();\n    this.setRTL(this.enableRtl);\n    if (this.enableReversePanes) {\n      this.setReversePane();\n    }\n    this.collapseFlag = true;\n    this.isCollapsed();\n    this.collapseFlag = false;\n    EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    this.renderComplete();\n    this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n    EventHandler.add(this.element, 'keydown', this.onMove, this);\n  };\n  Splitter.prototype.onDocumentClick = function (e) {\n    if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n      this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n      this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n    }\n  };\n  Splitter.prototype.checkPaneSize = function (e) {\n    var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n    var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n    var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n    if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n      var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n      var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n      this.totalPercent = previousFlexBasis + nextFlexBasis;\n      this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < this.convertPercentageToPixel(nextFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis + 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis - 1 + '%';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < this.convertPercentageToPixel(previousFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis - 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis + 1 + '%';\n        }\n      }\n    } else {\n      this.totalWidth = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth + this.nextPane.offsetWidth : this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < nextPaneSize + splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize + splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize < splitBarSize ? '0px' : nextPaneSize - splitBarSize + 'px';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < prePaneSize - splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize < splitBarSize ? '0px' : prePaneSize - splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize + splitBarSize + 'px';\n        }\n      }\n    }\n  };\n  Splitter.prototype.onMove = function (event) {\n    if (this.allPanes.length > 1) {\n      var index = this.getSeparatorIndex(this.currentSeparator);\n      var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n      var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n      var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n      if ((this.orientation !== 'Horizontal' && event.keyCode === 38 || this.orientation === 'Horizontal' && event.keyCode === 39 || this.orientation === 'Horizontal' && event.keyCode === 37 || this.orientation !== 'Horizontal' && event.keyCode === 40) && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || isPrevpaneExpanded && !isNextpaneCollapsed) && document.activeElement.classList.contains(SPLIT_BAR) && this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable) {\n        event.preventDefault();\n        this.checkPaneSize(event);\n        this.triggerResizing(event);\n      } else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n          this.collapse(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        } else {\n          this.expand(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        }\n      }\n    }\n  };\n  Splitter.prototype.getMinInPixel = function (minValue) {\n    var min;\n    if (isNullOrUndefined(minValue)) {\n      return 0;\n    }\n    var paneMinRange = this.convertPixelToNumber(minValue.toString());\n    if (minValue.indexOf('%') > 0) {\n      paneMinRange = this.convertPercentageToPixel(minValue);\n    }\n    min = this.convertPixelToNumber(paneMinRange.toString());\n    return min;\n  };\n  /**\n   * @param {string} value - specifies the string value\n   * @returns {string} returns the string\n   * @hidden\n   */\n  Splitter.prototype.sanitizeHelper = function (value) {\n    if (this.enableHtmlSanitizer) {\n      var item = SanitizeHtmlHelper.beforeSanitize();\n      var beforeEvent = {\n        cancel: false,\n        helper: null\n      };\n      extend(item, item, beforeEvent);\n      this.trigger('beforeSanitizeHtml', item);\n      if (item.cancel && !isNullOrUndefined(item.helper)) {\n        value = item.helper(value);\n      } else if (!item.cancel) {\n        value = SanitizeHtmlHelper.serializeValue(item, value);\n      }\n    }\n    return value;\n  };\n  Splitter.prototype.checkDataAttributes = function () {\n    var api;\n    var value;\n    // Element values\n    for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n      value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n      if (!isNullOrUndefined(value)) {\n        api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n        // eslint-disable-next-line\n        this[api] = value;\n      }\n    }\n    // Pane values\n    for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n      for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n        value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n        if (!isNullOrUndefined(value)) {\n          api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n          value = api === 'collapsible' || api === 'resizable' ? value === 'true' : value;\n          if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n            this.paneSettings[paneIndex] = {\n              size: '',\n              min: null,\n              max: null,\n              content: '',\n              resizable: true,\n              collapsible: false,\n              collapsed: false\n            };\n          }\n          // eslint-disable-next-line\n          var paneAPI = this.paneSettings[paneIndex][api];\n          if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n          if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n        }\n      }\n    }\n  };\n  Splitter.prototype.destroyPaneSettings = function () {\n    [].slice.call(this.element.children).forEach(function (el) {\n      detach(el);\n    });\n    this.restoreElem();\n  };\n  Splitter.prototype.setPaneSettings = function () {\n    var childCount = this.allPanes.length;\n    var paneCollection = [];\n    var paneValue = {\n      size: '',\n      min: null,\n      max: null,\n      content: '',\n      resizable: true,\n      collapsed: false,\n      collapsible: false,\n      cssClass: ''\n    };\n    for (var i = 0; i < childCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i])) {\n        paneCollection[i] = paneValue;\n      } else {\n        paneCollection[i] = this.paneSettings[i];\n      }\n    }\n    this.setProperties({\n      'paneSettings': paneCollection\n    }, true);\n  };\n  Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n    return this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow);\n  };\n  Splitter.prototype.removeDataPrefix = function (attribute) {\n    return attribute.slice(attribute.lastIndexOf('-') + 1);\n  };\n  Splitter.prototype.setRTL = function (rtl) {\n    // eslint-disable-next-line\n    rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n  };\n  Splitter.prototype.setReversePane = function () {\n    this.allPanes = this.allPanes.reverse();\n    this.allBars = this.allBars.reverse();\n    addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n    removeClass([this.allBars[0]], LAST_BAR);\n    this.setProperties({\n      'paneSettings': this.paneSettings.reverse()\n    }, true);\n    if (this.enableReversePanes) {\n      this.element.setAttribute('dir', 'rtl');\n    } else {\n      this.element.removeAttribute('dir');\n    }\n  };\n  Splitter.prototype.setSplitterSize = function (element, size, property) {\n    var style = property === 'width' ? {\n      'width': formatUnit(size)\n    } : {\n      'height': formatUnit(size)\n    };\n    setStyleAttribute(element, style);\n  };\n  Splitter.prototype.getPanesDimensions = function () {\n    for (var index = 0; index < this.allPanes.length; index++) {\n      // eslint-disable-next-line\n      this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) : this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n    }\n  };\n  Splitter.prototype.setCssClass = function (element, className) {\n    if (className) {\n      addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n  Splitter.prototype.hideResizer = function (target) {\n    addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n  };\n  Splitter.prototype.showResizer = function (target) {\n    if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) && !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n      removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    }\n  };\n  Splitter.prototype.resizableModel = function (index, newVal) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var i = index;\n    EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n    if (newVal) {\n      EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n      if (this.isResizable()) {\n        this.showResizer(this.allBars[paneIndex]);\n        removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n        this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n        // eslint-disable-next-line\n        index === this.allBars.length ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n        this.updateResizablePanes(i);\n      }\n    } else {\n      this.updateResizablePanes(i);\n      this.hideResizer(this.allBars[paneIndex]);\n      this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n      // eslint-disable-next-line\n      index === this.allBars.length ? this.allPanes[index].classList.remove(RESIZABLE_PANE) : this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n    }\n  };\n  Splitter.prototype.collapsibleModelUpdate = function (index) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var arrow2 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n    var arrow1 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n    this.paneCollapsible(this.allPanes[index], index);\n    this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n  };\n  Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n    return selectAll('.' + arrow, this.allBars[barIndex])[0];\n  };\n  Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n    if (!isNullOrUndefined(index)) {\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n      }\n      targetEle.click();\n    }\n  };\n  Splitter.prototype.isCollapsed = function (index) {\n    var _this = this;\n    if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n      return;\n    }\n    this.expandFlag = false;\n    if (!isNullOrUndefined(index)) {\n      this.collapseFlag = true;\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) : this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n      }\n      var event_1 = {\n        target: targetEle\n      };\n      var eventArgs = this.beforeAction(event_1);\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          var collapsedindex = [];\n          collapsedindex[0] = index;\n          var j = 1;\n          for (var i = 0; i < _this.allPanes.length; i++) {\n            if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n              collapsedindex[j] = i;\n              j++;\n            }\n          }\n          collapsedindex = collapsedindex.sort();\n          _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n          for (var i = 0; i < collapsedindex.length; i++) {\n            if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n              _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n            }\n          }\n          for (var i = collapsedindex.length; i > 0; i--) {\n            if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n              var targetArrow = _this.targetArrows();\n              _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n            }\n          }\n          var collapseEventArgs = _this.afterAction(event_1);\n          _this.trigger('collapsed', collapseEventArgs);\n          _this.collapseFlag = false;\n        }\n      });\n    } else {\n      for (var m = 0; m < this.allPanes.length; m++) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n          this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n      }\n      for (var m = this.allPanes.length - 1; m >= 0; m--) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed && !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n          var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n          if (m !== 0) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n          if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n        }\n      }\n    }\n    this.expandFlag = true;\n  };\n  Splitter.prototype.targetArrows = function () {\n    this.splitterProperty();\n    return {\n      collapseArrow: this.orientation === 'Horizontal' ? ARROW_LEFT : ARROW_UP,\n      lastBarArrow: this.orientation === 'Vertical' ? ARROW_DOWN : ARROW_RIGHT\n    };\n  };\n  Splitter.prototype.collapsedOnchange = function (index) {\n    if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed) && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n      this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n    }\n  };\n  Splitter.prototype.isEnabled = function (enabled) {\n    // eslint-disable-next-line\n    enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n  };\n  Splitter.prototype.setSeparatorSize = function (size) {\n    var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n    var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n    for (var index = 0; index < this.allBars.length; index++) {\n      var splitBar = selectAll('.' + separator, this.element)[index];\n      var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n      if (this.orientation === 'Horizontal') {\n        splitBar.style.width = sizeValue;\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.width = sizeValue;\n        }\n      } else {\n        splitBar.style.height = sizeValue;\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.height = sizeValue;\n        }\n      }\n    }\n  };\n  Splitter.prototype.changeOrientation = function (orientation) {\n    var isVertical = orientation === 'Vertical';\n    this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n    this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n    for (var index = 0; index < this.allPanes.length; index++) {\n      this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n      this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n    }\n    for (var index = 0; index < this.allBars.length; index++) {\n      detach(this.allBars[index]);\n    }\n    this.allBars = [];\n    this.addSeparator(this.element);\n  };\n  Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n    var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n    return paneEle;\n  };\n  Splitter.prototype.collectPanes = function (childNodes) {\n    var elements = [];\n    for (var i = 0; i < childNodes.length; i++) {\n      if (childNodes[i].classList.contains(PANE)) {\n        elements.push(childNodes[i]);\n      }\n    }\n    return elements;\n  };\n  Splitter.prototype.getPrevPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n  };\n  Splitter.prototype.getNextPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n  };\n  Splitter.prototype.getOrderPane = function (order) {\n    var pane;\n    for (var i = 0; i < this.element.children.length; i++) {\n      if (parseInt(this.element.children[i].style.order, 10) === order) {\n        pane = this.element.children[i];\n      }\n    }\n    return pane;\n  };\n  Splitter.prototype.getOrderIndex = function (order, type) {\n    var index;\n    var panes;\n    if (type === 'pane') {\n      panes = this.allPanes;\n    } else {\n      panes = this.allBars;\n    }\n    for (var i = 0; i < panes.length; i++) {\n      if (parseInt(panes[i].style.order, 10) === order) {\n        index = i;\n      }\n    }\n    return index;\n  };\n  Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n    var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n    // eslint-disable-next-line\n    this.orientation === 'Horizontal' ? resizeHanlder.style.width = sizeValue : resizeHanlder.style.height = sizeValue;\n  };\n  Splitter.prototype.addResizeHandler = function (currentBar) {\n    var resizeHanlder = this.createElement('div');\n    addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n    this.updateSeparatorSize(resizeHanlder);\n    currentBar.appendChild(resizeHanlder);\n  };\n  Splitter.prototype.getHeight = function (target) {\n    var height = this.height;\n    height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n    return height;\n  };\n  Splitter.prototype.getWidth = function (target) {\n    var width = this.width;\n    width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n    return width;\n  };\n  Splitter.prototype.setDimension = function (height, width) {\n    setStyleAttribute(this.element, {\n      'height': height,\n      'width': width\n    });\n  };\n  Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          // eslint-disable-next-line\n          this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n        }\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            // eslint-disable-next-line\n            this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n          }\n        }\n      }\n    }\n  };\n  Splitter.prototype.updateIconClass = function () {\n    if (this.orientation === 'Horizontal') {\n      this.leftArrow = ARROW_LEFT;\n      this.rightArrow = ARROW_RIGHT;\n    } else {\n      this.leftArrow = ARROW_UP;\n      this.rightArrow = ARROW_DOWN;\n    }\n  };\n  Splitter.prototype.createSeparator = function (i) {\n    var separator = this.createElement('div');\n    this.allBars.push(separator);\n    var arrow1 = this.createElement('button');\n    var arrow2 = this.createElement('button');\n    arrow1.setAttribute('tabindex', '-1');\n    arrow2.setAttribute('tabindex', '-1');\n    arrow1.setAttribute('aria-label', 'Toggle navigation');\n    arrow2.setAttribute('aria-label', 'Toggle navigation');\n    arrow1.setAttribute('type', 'button');\n    arrow2.setAttribute('type', 'button');\n    var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n    // eslint-disable-next-line\n    var proxy = this;\n    if (this.orientation === 'Horizontal') {\n      this.updateIconClass();\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n      separator.style.width = size;\n    } else {\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n      this.updateIconClass();\n      separator.style.height = size;\n    }\n    this.addMouseActions(separator);\n    separator.appendChild(arrow2);\n    this.addResizeHandler(separator);\n    separator.appendChild(arrow1);\n    this.updateCollapseIcons(i, arrow1, arrow2);\n    separator.setAttribute('tabindex', '0');\n    if (this.enableReversePanes) {\n      separator.setAttribute('dir', 'ltr');\n    } else {\n      separator.removeAttribute('dir');\n    }\n    separator.addEventListener('focus', function () {\n      separator.classList.add(SPLIT_BAR_ACTIVE);\n      proxy.currentSeparator = separator;\n      proxy.getPaneDetails();\n    });\n    separator.addEventListener('blur', function () {\n      separator.classList.remove(SPLIT_BAR_ACTIVE);\n    });\n    return separator;\n  };\n  Splitter.prototype.updateResizablePanes = function (index) {\n    this.getPaneDetails();\n    // eslint-disable-next-line\n    this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n  };\n  Splitter.prototype.addSeparator = function (target) {\n    var childCount = this.allPanes.length;\n    var clonedEle = target.children;\n    var separator;\n    var proxy;\n    for (var i = 0; i < childCount; i++) {\n      if (i < childCount - 1) {\n        separator = this.createSeparator(i);\n        setStyleAttribute(separator, {\n          'order': i * 2 + 1\n        });\n        this.separatorOrder.push(i * 2 + 1);\n        clonedEle[i].parentNode.appendChild(separator);\n        this.currentSeparator = separator;\n        separator.setAttribute('role', 'separator');\n        separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        this.wireClickEvents();\n        if (!isNullOrUndefined(separator)) {\n          if (this.isResizable()) {\n            EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n            var eventName = Browser.info.name === 'msie' ? 'pointerdown' : 'touchstart';\n            EventHandler.add(separator, eventName, this.onMouseDown, this);\n            separator.classList.add(RESIZABLE_BAR);\n            this.updateResizablePanes(i);\n          } else {\n            addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n          }\n        }\n      } else {\n        if (separator) {\n          addClass([separator], LAST_BAR);\n        }\n        if (childCount > 1) {\n          this.updateResizablePanes(i);\n        }\n      }\n    }\n    if (Browser.info.name === 'msie') {\n      var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n      for (var i = 0; i < allBar.length; i++) {\n        var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n        allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n        allBar[i].style.paddingRight = sepSize / 2 + 'px';\n      }\n    }\n  };\n  Splitter.prototype.isResizable = function () {\n    var resizable = false;\n    if (!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) && this.paneSettings[this.getPreviousPaneIndex()].resizable && !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) && this.paneSettings[this.getNextPaneIndex()].resizable || isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n      resizable = true;\n    }\n    return resizable;\n  };\n  Splitter.prototype.addMouseActions = function (separator) {\n    var _this = this;\n    var sTout;\n    var hoverTimeOut;\n    separator.addEventListener('mouseenter', function () {\n      /* istanbul ignore next */\n      sTout = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n    separator.addEventListener('mouseleave', function () {\n      clearTimeout(sTout);\n      removeClass([separator], [SPLIT_BAR_HOVER]);\n    });\n    separator.addEventListener('mouseout', function () {\n      clearTimeout(hoverTimeOut);\n    });\n    separator.addEventListener('mouseover', function () {\n      /* istanbul ignore next */\n      hoverTimeOut = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n  };\n  Splitter.prototype.getEventType = function (e) {\n    return e.indexOf('mouse') > -1 ? 'mouse' : 'touch';\n  };\n  Splitter.prototype.updateCurrentSeparator = function (target) {\n    this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n  };\n  Splitter.prototype.isSeparator = function (target) {\n    return target.classList.contains(SPLIT_BAR) ? false : true;\n  };\n  Splitter.prototype.isMouseEvent = function (e) {\n    var isMouse = false;\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      isMouse = true;\n    }\n    return isMouse;\n  };\n  Splitter.prototype.updateCursorPosition = function (e, type) {\n    if (this.isMouseEvent(e)) {\n      this.changeCoordinates({\n        x: e.pageX,\n        y: e.pageY\n      }, type);\n    } else {\n      var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n      this.changeCoordinates({\n        x: eventType.pageX,\n        y: eventType.pageY\n      }, type);\n    }\n  };\n  Splitter.prototype.changeCoordinates = function (coordinates, type) {\n    if (type === 'previous') {\n      this.previousCoordinates = coordinates;\n    } else {\n      this.currentCoordinates = coordinates;\n    }\n  };\n  Splitter.prototype.reportWindowSize = function () {\n    var _this = this;\n    var paneCount = this.allPanes.length;\n    if (!document.body.contains(this.element)) {\n      document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n      return;\n    }\n    for (var i = 0; i < paneCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n      if (paneCount - 1 === i) {\n        var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n        if (staticPaneCount === paneCount) {\n          removeClass([this.allPanes[i]], STATIC_PANE);\n        }\n      }\n    }\n    if (paneCount > 0) {\n      setTimeout(function () {\n        _this.updateSplitterSize(true);\n      }, 200);\n    }\n  };\n  Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n    var totalWidth = 0;\n    var flexPaneIndexes = [];\n    var flexCount = 0;\n    var children = this.element.children;\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n    for (var j = 0; j < this.allBars.length; j++) {\n      totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) + parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) + parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n    }\n    var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth - (this.border * 2 + totalWidth) : this.element.offsetHeight - (this.border * 2 + totalWidth);\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      }\n    }\n    var avgDiffWidth = diff / flexPaneIndexes.length;\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ? this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth + 'px' : this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth + 'px';\n    }\n    if (this.allPanes.length === 2 && iswindowResize) {\n      var paneCount = this.allPanes.length;\n      var minValue = void 0;\n      var paneMinRange = void 0;\n      var paneIndex = 0;\n      var updatePane = void 0;\n      var flexPane = void 0;\n      for (var i = 0; i < paneCount; i++) {\n        if (!isNullOrUndefined(this.paneSettings[i].min)) {\n          paneMinRange = this.convertPixelToNumber(this.paneSettings[i].min.toString());\n          if (this.paneSettings[i].min.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n          }\n          minValue = this.convertPixelToNumber(paneMinRange.toString());\n          if (this.allPanes[i].offsetWidth < minValue) {\n            if (i === paneIndex) {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i + 1];\n            } else {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i - 1];\n            }\n            var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n            var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n            updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%' : updatePane.offsetWidth + sizeDiff + 'px';\n            flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ? this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : flexPane.offsetWidth - sizeDiff + 'px';\n          }\n        }\n      }\n    }\n  };\n  Splitter.prototype.wireResizeEvents = function () {\n    document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.addEventListener('mouseup', this.onMouseUpHandler, true);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n  Splitter.prototype.unwireResizeEvents = function () {\n    this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n    document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n  Splitter.prototype.wireClickEvents = function () {\n    EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n  };\n  Splitter.prototype.clickHandler = function (e) {\n    if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n      var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n      if (hoverBars.length > 0) {\n        removeClass(hoverBars, SPLIT_BAR_HOVER);\n      }\n      e.target.classList.add(SPLIT_BAR_HOVER);\n    }\n    var icon = e.target;\n    if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n      this.collapseAction(e);\n    }\n    if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n      this.expandAction(e);\n    }\n    var totalWidth = 0;\n    var children = this.element.children;\n    for (var i = 0; i < children.length; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n    if (totalWidth > this.element.offsetWidth) {\n      this.updateSplitterSize();\n    }\n  };\n  Splitter.prototype.expandAction = function (e) {\n    var _this = this;\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n    if (this.expandFlag) {\n      this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n        if (!beforeExpandArgs.cancel) {\n          _this.expandPane(e);\n        }\n        var expandEventArgs = _this.afterAction(e);\n        _this.trigger('expanded', expandEventArgs);\n      });\n    } else {\n      this.expandPane(e);\n    }\n  };\n  Splitter.prototype.expandPane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = !this.previousPane.classList.contains(COLLAPSE_PANE) && this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n    if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.nextPane], EXPAND_PANE);\n      removeClass([this.previousPane], collapseClass);\n      addClass([this.previousPane], EXPAND_PANE);\n      addClass([this.nextPane], collapseClass);\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, true);\n      }\n    } else {\n      removeClass([this.previousPane], collapseClass);\n      removeClass([this.nextPane], EXPAND_PANE);\n      if (this.expandFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, false);\n      }\n    }\n    this.updateIconsOnExpand(e);\n    this.previousPane.setAttribute('aria-expanded', 'true');\n    this.nextPane.setAttribute('aria-expanded', 'false');\n    this.updateFlexGrow(this.checkStaticPanes());\n    if (flexStatus) {\n      this.previousPane.classList.remove(EXPAND_PANE);\n      this.previousPane.style.flexGrow = '';\n    }\n  };\n  Splitter.prototype.checkStaticPanes = function () {\n    var staticPane = true;\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n        if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n          staticPane = true;\n        } else {\n          staticPane = false;\n        }\n      }\n    }\n    return staticPane;\n  };\n  Splitter.prototype.updateFlexGrow = function (status) {\n    var collapseCount = 0;\n    for (var j = 0; j < this.element.children.length; j++) {\n      if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n        collapseCount = collapseCount + 1;\n      }\n    }\n    var visiblePane = collapseCount === this.allPanes.length - 2;\n    var panes = this.allPanes;\n    for (var i = 0; i < panes.length; i++) {\n      if (panes[i].classList.contains(EXPAND_PANE)) {\n        panes[i].style.flexGrow = '1';\n      } else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n        panes[i].style.flexGrow = '0';\n      } else {\n        panes[i].style.flexGrow = '';\n      }\n      if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n        this.nextPane.style.flexGrow = '1';\n      }\n      if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size && i !== this.allPanes.length - 1) {\n        panes[i].style.flexGrow = '';\n      }\n    }\n  };\n  Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n    addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n  Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n    removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n  Splitter.prototype.updateIconsOnCollapse = function (e) {\n    this.splitterProperty();\n    if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      addClass([e.target], HIDE_ICON);\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n      this.resizableModel(this.currentBarIndex, false);\n      if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n      }\n      if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.leftArrow);\n        } else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n        }\n      }\n      if (!isNullOrUndefined(this.prevBar)) {\n        this.resizableModel(this.currentBarIndex - 1, false);\n        this.hideTargetBarIcon(this.prevBar, this.arrow);\n      }\n      if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n    } else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n      if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.currentBarIndex + 1].resizable) {\n        this.resizableModel(this.currentBarIndex + 1, true);\n      }\n      if (!this.paneSettings[this.currentBarIndex].collapsible) {\n        addClass([e.target], HIDE_ICON);\n      }\n      if (this.previousPane && this.prevPaneIndex === 0 && this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n      }\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n      }\n      if (!this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n      }\n      if (!isNullOrUndefined(this.nextBar)) {\n        if (this.nextPane.nextElementSibling && this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex + 1].collapsible || !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.nextBar, this.leftArrow);\n        } else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible && this.paneSettings[this.currentBarIndex]) {\n          this.hideTargetBarIcon(this.nextBar, this.arrow);\n        }\n      }\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n        this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n  Splitter.prototype.collapseAction = function (e) {\n    var _this = this;\n    this.splitterDetails(e);\n    var eventArgs = this.beforeAction(e);\n    if (this.collapseFlag) {\n      this.collapsePane(e);\n    } else {\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          _this.collapsePane(e);\n          var collapseEventArgs = _this.afterAction(e);\n          _this.trigger('collapsed', collapseEventArgs);\n        }\n      });\n    }\n  };\n  Splitter.prototype.collapsePane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = this.previousPane.classList.contains(STATIC_PANE) && !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !(collapseCount === this.allPanes.length - 2) || this.nextPane.classList.contains(COLLAPSE_PANE) && !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n    if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.nextPaneIndex, false);\n      }\n    } else {\n      removeClass([this.previousPane], EXPAND_PANE);\n      removeClass([this.nextPane], collapseClass);\n      addClass([this.nextPane], EXPAND_PANE);\n      addClass([this.previousPane], collapseClass);\n      if (!this.collapseFlag) {\n        this.updatePaneSettings(this.prevPaneIndex, true);\n      }\n    }\n    this.updateIconsOnCollapse(e);\n    this.previousPane.setAttribute('aria-expanded', 'false');\n    this.nextPane.setAttribute('aria-expanded', 'true');\n    this.updateFlexGrow(this.checkStaticPanes());\n    if (flexStatus) {\n      this.nextPane.classList.remove(EXPAND_PANE);\n      this.nextPane.style.flexGrow = '';\n    }\n  };\n  Splitter.prototype.removeStaticPanes = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n    }\n  };\n  Splitter.prototype.beforeAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    return eventArgs;\n  };\n  Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n    var paneValues = this.paneSettings;\n    paneValues[index].collapsed = collapsed;\n    this.setProperties({\n      'paneSettings': paneValues\n    }, true);\n  };\n  Splitter.prototype.splitterProperty = function () {\n    this.splitInstance = {\n      currentBarIndex: this.currentBarIndex,\n      nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n      prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n      prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n      nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n      nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n      prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n      nextPaneIndex: this.getNextPaneIndex(),\n      prevPaneIndex: this.getPreviousPaneIndex(),\n      nextPaneNextEle: this.nextPane.nextElementSibling,\n      prevPanePreEle: this.previousPane.previousElementSibling\n    };\n  };\n  Splitter.prototype.showCurrentBarIcon = function () {\n    removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n  };\n  Splitter.prototype.updateIconsOnExpand = function (e) {\n    this.splitterProperty();\n    addClass([e.target], HIDE_ICON);\n    if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n      if (this.paneSettings[this.prevPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        removeClass([e.target], HIDE_ICON);\n      }\n      if (this.paneSettings[this.currentBarIndex].resizable) {\n        this.resizableModel(this.currentBarIndex, true);\n      }\n      if (!isNullOrUndefined(this.prevBar) && !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n        if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n          this.resizableModel(this.currentBarIndex - 1, true);\n        }\n        if (this.paneSettings[this.prevPaneIndex].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n        if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n          this.hideTargetBarIcon(this.prevBar, this.arrow);\n          if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n            this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n          }\n        } else if (this.paneSettings[this.currentBarIndex].collapsible && !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      } else {\n        if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible && this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex - 1].collapsible) {\n          this.showTargetBarIcon(this.prevBar, this.rightArrow);\n        }\n        if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n          this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n        }\n      }\n    } else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n      this.resizableModel(this.currentBarIndex, false);\n      this.resizableModel(this.currentBarIndex + 1, false);\n      if (this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showCurrentBarIcon();\n      }\n      if (!isNullOrUndefined(this.nextBar)) {\n        this.hideTargetBarIcon(this.nextBar, this.arrow);\n      }\n      if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && !this.paneSettings[this.nextPaneIndex].collapsible && this.splitInstance.nextPaneCollapsed) {\n        this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n      }\n      if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling && this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.nextPaneIndex].collapsible) {\n        this.showTargetBarIcon(this.nextBar, this.rightArrow);\n      }\n    }\n  };\n  Splitter.prototype.afterAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator\n    };\n    return eventArgs;\n  };\n  Splitter.prototype.currentIndex = function (e) {\n    this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n  };\n  Splitter.prototype.getSeparatorIndex = function (target) {\n    var array = [].slice.call(this.allBars);\n    array = this.enableReversePanes ? array.reverse() : array;\n    return array.indexOf(target);\n  };\n  Splitter.prototype.getPrevBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar - 1];\n    return prevbar;\n  };\n  Splitter.prototype.getNextBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar + 1];\n    return prevbar;\n  };\n  Splitter.prototype.updateBars = function (index) {\n    this.prevBar = this.getPrevBar(index);\n    this.nextBar = this.getNextBar(index);\n  };\n  Splitter.prototype.splitterDetails = function (e) {\n    if (this.orientation === 'Horizontal') {\n      this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n    } else {\n      this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n    }\n    this.updateCurrentSeparator(e.target);\n    this.currentIndex(e);\n    this.updateBars(this.currentBarIndex);\n    this.getPaneDetails();\n  };\n  Splitter.prototype.triggerResizing = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n      separator: this.currentSeparator\n    };\n    this.trigger('resizing', eventArgs);\n  };\n  Splitter.prototype.onMouseDown = function (e) {\n    var _this = this;\n    e.preventDefault();\n    var target = e.target;\n    if (target.classList.contains(NAVIGATE_ARROW)) {\n      return;\n    }\n    this.updateCurrentSeparator(target);\n    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.updateCursorPosition(e, 'previous');\n    this.getPaneDetails();\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n    }\n    this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n      if (!resizeStartArgs.cancel) {\n        _this.wireResizeEvents();\n        _this.checkPaneSize(e);\n      }\n    });\n  };\n  Splitter.prototype.updatePaneFlexBasis = function (pane) {\n    var previous;\n    if (pane.style.flexBasis.indexOf('%') > 0) {\n      previous = this.removePercentageUnit(pane.style.flexBasis);\n    } else {\n      if (pane.style.flexBasis !== '') {\n        previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n      } else {\n        var offset = this.orientation === 'Horizontal' ? pane.offsetWidth : pane.offsetHeight;\n        previous = this.convertPixelToPercentage(offset);\n      }\n    }\n    return previous;\n  };\n  Splitter.prototype.removePercentageUnit = function (value) {\n    return parseFloat(value.slice(0, value.indexOf('%')));\n  };\n  Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n    var percentage = value.toString();\n    var convertedValue;\n    if (percentage.indexOf('%') > -1) {\n      convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n      var offsetValue = void 0;\n      if (!isNullOrUndefined(targetElement)) {\n        offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n      } else {\n        offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n      }\n      convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n    } else {\n      convertedValue = parseInt(percentage, 10);\n    }\n    return convertedValue;\n  };\n  Splitter.prototype.convertPixelToPercentage = function (value) {\n    var offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return value / offsetValue * 100;\n  };\n  Splitter.prototype.convertPixelToNumber = function (value) {\n    if (value.indexOf('p') > -1) {\n      return parseFloat(value.slice(0, value.indexOf('p')));\n    } else {\n      return parseFloat(value);\n    }\n  };\n  Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n    var separatorPosition = this.orientation === 'Horizontal' ? this.currentCoordinates.x - rectValue : this.currentCoordinates.y - rectValue;\n    var separator;\n    separator = separatorPosition / offsetValue;\n    separator = separator > 1 ? 1 : separator < 0 ? 0 : separator;\n    return separator * offsetValue;\n  };\n  Splitter.prototype.getSeparatorPosition = function (e) {\n    this.updateCursorPosition(e, 'current');\n    var rectBound = this.orientation === 'Horizontal' ? this.element.getBoundingClientRect().left + window.scrollX : this.element.getBoundingClientRect().top + window.scrollY;\n    var offSet = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return this.calcDragPosition(rectBound, offSet);\n  };\n  Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n    var defaultVal = selection === 'min' ? 0 : null;\n    // eslint-disable-next-line\n    var paneValue = null;\n    if (selection === 'min') {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n        paneValue = this.paneSettings[paneIndex].min;\n      }\n    } else {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n        paneValue = this.paneSettings[paneIndex].max;\n      }\n    }\n    if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(paneValue)) {\n      if (paneValue.indexOf('%') > 0) {\n        paneValue = this.convertPercentageToPixel(paneValue).toString();\n      }\n      return this.convertPixelToNumber(paneValue);\n    } else {\n      return defaultVal;\n    }\n  };\n  Splitter.prototype.getPreviousPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 : parseInt(this.currentSeparator.style.order, 10) - 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n  Splitter.prototype.getNextPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 : parseInt(this.currentSeparator.style.order, 10) + 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n  Splitter.prototype.getPaneDetails = function () {\n    var prevPane = null;\n    var nextPane = null;\n    this.order = parseInt(this.currentSeparator.style.order, 10);\n    if (this.allPanes.length > 1) {\n      prevPane = this.getPrevPane(this.order);\n      nextPane = this.getNextPane(this.order);\n    }\n    if (prevPane && nextPane) {\n      this.previousPane = prevPane;\n      this.nextPane = nextPane;\n      this.prevPaneIndex = this.getPreviousPaneIndex();\n      this.nextPaneIndex = this.getNextPaneIndex();\n    } else {\n      return;\n    }\n  };\n  Splitter.prototype.getPaneHeight = function (pane) {\n    return this.orientation === 'Horizontal' ? pane.offsetWidth.toString() : pane.offsetHeight.toString();\n  };\n  Splitter.prototype.isValidSize = function (paneIndex) {\n    var isValid = false;\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].size) && this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n      isValid = true;\n    }\n    return isValid;\n  };\n  Splitter.prototype.getPaneDimensions = function () {\n    this.previousPaneHeightWidth = this.previousPane.style.flexBasis === '' ? this.getPaneHeight(this.previousPane) : this.previousPane.style.flexBasis;\n    this.nextPaneHeightWidth = this.nextPane.style.flexBasis === '' ? this.getPaneHeight(this.nextPane) : this.nextPane.style.flexBasis;\n    if (this.isValidSize(this.prevPaneIndex)) {\n      this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n      this.updatePrePaneInPercentage = true;\n    }\n    if (this.isValidSize(this.nextPaneIndex)) {\n      this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n      this.updateNextPaneInPercentage = true;\n    }\n    this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n    this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n  };\n  Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n    var coordinatesChanged = true;\n    if (pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y) {\n      coordinatesChanged = false;\n    }\n    return coordinatesChanged;\n  };\n  Splitter.prototype.isCursorMoved = function (e) {\n    var cursorMoved = true;\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n    } else {\n      cursorMoved = Browser.info.name !== 'msie' ? this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) : this.checkCoordinates(e.pageX, e.pageY);\n    }\n    return cursorMoved;\n  };\n  Splitter.prototype.getBorder = function () {\n    this.border = 0;\n    var border = this.orientation === 'Horizontal' ? (this.element.offsetWidth - this.element.clientWidth) / 2 : (this.element.offsetHeight - this.element.clientHeight) / 2;\n    this.border = Browser.info.name !== 'chrome' ? this.border : border;\n  };\n  Splitter.prototype.onMouseMove = function (e) {\n    if (!this.isCursorMoved(e)) {\n      return;\n    }\n    this.getPaneDetails();\n    this.getPaneDimensions();\n    this.triggerResizing(e);\n    var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n    var separatorNewPosition;\n    this.getBorder();\n    if (this.orientation === 'Horizontal') {\n      separatorNewPosition = this.element.getBoundingClientRect().left + left - this.currentSeparator.getBoundingClientRect().left + this.border;\n    } else {\n      separatorNewPosition = this.element.getBoundingClientRect().top + left - this.currentSeparator.getBoundingClientRect().top + this.border;\n    }\n    this.nextPaneHeightWidth = typeof this.nextPaneHeightWidth === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n    this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n    this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n    this.validateMinMaxValues();\n    if (this.nextPaneCurrentWidth < 0) {\n      this.nextPaneCurrentWidth = 0;\n    }\n    /* istanbul ignore next */\n    if (this.prevPaneCurrentWidth < 0) {\n      this.prevPaneCurrentWidth = 0;\n    }\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth > this.totalWidth) {\n      if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      } else {\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      }\n    }\n    /* istanbul ignore next */\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth < this.totalWidth) {\n      var difference = this.totalWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth);\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n    }\n    this.calculateCurrentDimensions();\n    this.addStaticPaneClass();\n    this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n    this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n    if (!(this.allPanes.length > 2)) {\n      this.updateSplitterSize();\n    }\n  };\n  // eslint-disable-next-line\n  Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMinRange = null;\n    var paneMinDimensions;\n    var difference = 0;\n    var validatedVal;\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n      paneMinRange = this.paneSettings[paneIndex].min.toString();\n    }\n    if (!isNullOrUndefined(paneMinRange)) {\n      if (paneMinRange.indexOf('%') > 0) {\n        paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n      }\n      paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n      if (paneCurrentWidth < paneMinDimensions) {\n        difference = paneCurrentWidth - paneMinDimensions <= 0 ? 0 : paneCurrentWidth - paneMinDimensions;\n        this.totalWidth = this.totalWidth - difference;\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMinDimensions;\n      }\n    }\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n  // eslint-disable-next-line\n  Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n    var paneMaxRange = null;\n    var paneMaxDimensions;\n    var validatedVal;\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n      paneMaxRange = this.paneSettings[paneIndex].max.toString();\n    }\n    if (!isNullOrUndefined(paneMaxRange)) {\n      if (paneMaxRange.indexOf('%') > 0) {\n        paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n      }\n      paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n      if (paneCurrentWidth > paneMaxDimensions) {\n        this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMaxDimensions;\n      }\n    }\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n  Splitter.prototype.validateMinMaxValues = function () {\n    //validate previous pane minimum range\n    this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n    // Validate next pane minimum range\n    this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    // validate previous pane maximum range\n    this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n    // validate next pane maximum range\n    this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n  };\n  Splitter.prototype.equatePaneWidths = function () {\n    var difference;\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth > this.totalPercent) {\n      difference = this.prevPaneCurrentWidth + this.nextPaneCurrentWidth - this.totalPercent;\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - difference / 2 + '%';\n    }\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth < this.totalPercent) {\n      difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference / 2 + '%';\n    }\n  };\n  Splitter.prototype.calculateCurrentDimensions = function () {\n    if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n      this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth) * 10) / 10));\n      this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth) * 10) / 10));\n      if (this.prevPaneCurrentWidth === 0) {\n        this.nextPaneCurrentWidth = this.totalPercent;\n      }\n      if (this.nextPaneCurrentWidth === 0) {\n        this.prevPaneCurrentWidth = this.totalPercent;\n      }\n      if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n        this.equatePaneWidths();\n      } else {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n      }\n      this.prevPaneCurrentWidth = this.updatePrePaneInPercentage ? this.prevPaneCurrentWidth : this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n      this.nextPaneCurrentWidth = this.updateNextPaneInPercentage ? this.nextPaneCurrentWidth : this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n      this.updatePrePaneInPercentage = false;\n      this.updateNextPaneInPercentage = false;\n    } else {\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n    }\n  };\n  Splitter.prototype.addStaticPaneClass = function () {\n    if (!this.previousPane.classList.contains(STATIC_PANE)) {\n      this.previousPane.classList.add(STATIC_PANE);\n    }\n    if (!this.nextPane.classList.contains(STATIC_PANE)) {\n      this.nextPane.classList.add(STATIC_PANE);\n    }\n  };\n  Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n    var separatorTopLeft = this.orientation === 'Horizontal' ? this.currentSeparator.offsetLeft + window.scrollX : this.currentSeparator.offsetTop;\n    var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n    var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n    var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n    var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n    var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n    var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n    var validatedSize = draggedPos;\n    if (draggedPos > nextPaneRange - pane2MinSize) {\n      validatedSize = nextPaneRange - pane2MinSize;\n    } else if (draggedPos < prePaneRange + pane1MinSize) {\n      validatedSize = prePaneRange + pane1MinSize;\n    }\n    if (!isNullOrUndefined(pane1MaxSize)) {\n      if (draggedPos > prePaneRange + pane1MaxSize) {\n        validatedSize = prePaneRange + pane1MaxSize;\n      }\n    } else if (!isNullOrUndefined(pane2MaxSize)) {\n      if (draggedPos < nextPaneRange - pane2MaxSize) {\n        validatedSize = nextPaneRange - pane2MaxSize;\n      }\n    }\n    return validatedSize;\n  };\n  Splitter.prototype.onMouseUp = function (e) {\n    removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.unwireResizeEvents();\n    var eventArgs = {\n      event: e,\n      element: this.element,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n    };\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n    }\n    this.trigger('resizeStop', eventArgs);\n    if (this.enablePersistence) {\n      var paneValues = this.paneSettings;\n      paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n      paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n      this.setProperties({\n        'paneSettings': paneValues\n      }, true);\n    }\n  };\n  Splitter.prototype.panesDimension = function (index, child) {\n    var childCount = child.length;\n    var size;\n    parseInt(this.getHeight(this.element), 10);\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].size)) {\n        size = this.paneSettings[index].size;\n        if (index < childCount) {\n          setStyleAttribute(child[index], {\n            'flex-basis': size,\n            'order': index * 2\n          });\n          if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          } else if (!this.sizeFlag) {\n            child[index].style.flexBasis = null;\n          }\n          if (index === childCount - 1 && this.sizeFlag && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          }\n        }\n      } else {\n        this.sizeFlag = true;\n        setStyleAttribute(child[index], {\n          'order': index * 2\n        });\n      }\n    } else {\n      setStyleAttribute(child[index], {\n        'order': index * 2\n      });\n    }\n    this.paneOrder.push(index * 2);\n  };\n  Splitter.prototype.setTemplate = function (template, toElement) {\n    toElement.innerHTML = '';\n    template = typeof template === 'string' ? this.sanitizeHelper(template) : template;\n    this.templateCompile(toElement, template);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  };\n  // eslint-disable-next-line\n  Splitter.prototype.templateCompile = function (ele, cnt) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n    if (tempEle.childNodes.length !== 0) {\n      [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n        ele.appendChild(childEle);\n      });\n    }\n  };\n  Splitter.prototype.compileElement = function (ele, val, prop) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    if (typeof val === 'string') {\n      if (val[0] === '.' || val[0] === '#') {\n        var eleVal = document.querySelector(val);\n        if (!isNullOrUndefined(eleVal)) {\n          this.templateElement.push(eleVal);\n          if (eleVal.style.display === 'none') {\n            eleVal.style.removeProperty('display');\n          }\n          if (eleVal.getAttribute('style') === '') {\n            eleVal.removeAttribute('style');\n          }\n          ele.appendChild(eleVal);\n          return;\n        } else {\n          val = val.trim();\n        }\n      } else {\n        val = val.trim();\n      }\n    }\n    var templateFn;\n    if (!isNullOrUndefined(val.outerHTML)) {\n      templateFn = compile(val.outerHTML);\n    } else {\n      templateFn = compile(val);\n    }\n    var templateFUN;\n    if (!isNullOrUndefined(templateFn)) {\n      templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n    }\n    if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n  Splitter.prototype.paneCollapsible = function (pane, index) {\n    // eslint-disable-next-line\n    this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n  };\n  Splitter.prototype.createSplitPane = function (target) {\n    var childCount = target.children.length;\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (childCount < this.paneSettings.length) {\n        var childElement = this.createElement('div');\n        this.element.appendChild(childElement);\n        childCount = childCount + 1;\n      }\n    }\n    childCount = target.children.length;\n    var child = [].slice.call(target.children);\n    this.sizeFlag = false;\n    if (childCount > 0) {\n      for (var i = 0; i < childCount; i++) {\n        // To accept only div and span element as pane\n        if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n          this.allPanes.push(child[i]);\n          if (this.orientation === 'Horizontal') {\n            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          } else {\n            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          }\n          if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n            this.setTemplate(this.paneSettings[i].content, child[i]);\n          }\n          if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n          }\n          if (!isNullOrUndefined(this.paneSettings[i])) {\n            this.paneCollapsible(child[i], i);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * expands corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n   * @returns {void}\n   */\n  Splitter.prototype.expand = function (index) {\n    this.collapsedOnchange(index);\n    this.updatePaneSettings(index, false);\n  };\n  /**\n   * collapses corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n   * @returns {void}\n   */\n  Splitter.prototype.collapse = function (index) {\n    this.isCollapsed(index);\n    this.updatePaneSettings(index, true);\n  };\n  /**\n   * Removes the control from the DOM and also removes all its related events.\n   *\n   * @returns {void}\n   */\n  Splitter.prototype.destroy = function () {\n    if (!this.isDestroyed) {\n      _super.prototype.destroy.call(this);\n      EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n      this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n      while (this.element.attributes.length > 0) {\n        this.element.removeAttribute(this.element.attributes[0].name);\n      }\n      this.element.innerHTML = this.wrapper.innerHTML;\n      for (var i = 0; i < this.wrapper.attributes.length; i++) {\n        this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n      }\n      if (this.refreshing) {\n        addClass([this.element], ['e-control', 'e-lib', ROOT]);\n        this.allBars = [];\n        this.allPanes = [];\n      }\n      this.restoreElem();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n    }\n  };\n  Splitter.prototype.restoreElem = function () {\n    if (this.templateElement.length > 0) {\n      for (var i = 0; i < this.templateElement.length; i++) {\n        this.templateElement[i].style.display = 'none';\n        document.body.appendChild(this.templateElement[i]);\n      }\n    }\n  };\n  Splitter.prototype.addPaneClass = function (pane) {\n    // eslint-disable-next-line\n    this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) : addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n    return pane;\n  };\n  Splitter.prototype.removePaneOrders = function (paneClass) {\n    var childNodes = this.element.childNodes;\n    var panes = [];\n    for (var i = 0; childNodes.length < 0; i++) {\n      if (childNodes[i].classList.contains(paneClass)) {\n        panes.push(childNodes[i]);\n      }\n    }\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.removeProperty('order');\n    }\n  };\n  Splitter.prototype.setPaneOrder = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      this.panesDimension(i, this.allPanes);\n    }\n  };\n  Splitter.prototype.removeSeparator = function () {\n    for (var i = 0; i < this.allBars.length; i++) {\n      detach(this.allBars[i]);\n    }\n    this.allBars = [];\n  };\n  Splitter.prototype.updatePanes = function () {\n    this.setPaneOrder();\n    this.removeSeparator();\n    this.addSeparator(this.element);\n  };\n  /**\n   * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n   *\n   * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n   * @param { number } index - Specifies the index where the pane will be inserted.\n   * @returns {void}\n   */\n  Splitter.prototype.addPane = function (paneProperties, index) {\n    var newPane = this.createElement('div');\n    newPane = this.addPaneClass(newPane);\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var paneDetails = {\n      size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n      min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n      max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n      content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n      resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n      collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n      collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n      cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n    };\n    this.paneSettings.splice(index, 0, paneDetails);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n    if (this.orientation === 'Horizontal') {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n      this.removePaneOrders(SPLIT_H_PANE);\n    } else {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n      this.removePaneOrders(SPLIT_V_PANE);\n    }\n    this.allPanes.splice(index, 0, newPane);\n    this.updatePanes();\n    this.setTemplate(this.paneSettings[index].content, newPane);\n    this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n    this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n  };\n  /**\n   * Allows you to remove the specified pane dynamically by passing its index value.\n   *\n   * @param { number } index - Specifies the index value to remove the corresponding pane.\n   * @returns {void}\n   */\n  Splitter.prototype.removePane = function (index) {\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var elementClass = this.orientation === 'Horizontal' ? SPLIT_H_PANE : SPLIT_V_PANE;\n    if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n      return;\n    }\n    detach(this.element.querySelectorAll('.' + elementClass)[index]);\n    this.allPanes.splice(index, 1);\n    this.removePaneOrders(elementClass);\n    this.updatePanes();\n    this.paneSettings.splice(index, 1);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n    if (this.allPanes.length > 0) {\n      this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    }\n  };\n  __decorate([Property('100%')], Splitter.prototype, \"height\", void 0);\n  __decorate([Property(false)], Splitter.prototype, \"enableReversePanes\", void 0);\n  __decorate([Property('100%')], Splitter.prototype, \"width\", void 0);\n  __decorate([Property(false)], Splitter.prototype, \"enablePersistence\", void 0);\n  __decorate([Collection([], PaneProperties)], Splitter.prototype, \"paneSettings\", void 0);\n  __decorate([Property('Horizontal')], Splitter.prototype, \"orientation\", void 0);\n  __decorate([Property('')], Splitter.prototype, \"cssClass\", void 0);\n  __decorate([Property(true)], Splitter.prototype, \"enabled\", void 0);\n  __decorate([Property(true)], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(null)], Splitter.prototype, \"separatorSize\", void 0);\n  __decorate([Event()], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n  __decorate([Event()], Splitter.prototype, \"created\", void 0);\n  __decorate([Event()], Splitter.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], Splitter.prototype, \"resizing\", void 0);\n  __decorate([Event()], Splitter.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], Splitter.prototype, \"beforeCollapse\", void 0);\n  __decorate([Event()], Splitter.prototype, \"beforeExpand\", void 0);\n  __decorate([Event()], Splitter.prototype, \"collapsed\", void 0);\n  __decorate([Event()], Splitter.prototype, \"expanded\", void 0);\n  Splitter = __decorate([NotifyPropertyChanges], Splitter);\n  return Splitter;\n}(Component);\nexport { Splitter };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","setStyleAttribute","ChildProperty","compile","NotifyPropertyChanges","addClass","Collection","isNullOrUndefined","Event","EventHandler","selectAll","removeClass","select","Browser","detach","formatUnit","SanitizeHtmlHelper","extend","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","SPLIT_TOUCH","DISABLED","RTL","E_ICONS","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","BAR_SIZE_DEFAULT","PaneProperties","_super","apply","Splitter","options","element","call","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","prop","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","allPanes","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","isCollapsed","collapsedOnchange","newValSize","updatePaneSize","destroyPaneSettings","allBars","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","style","flexBasis","flexPaneIndexes","staticPaneWidth","flexCount","size","innerText","offsetWidth","offsetHeight","flexPaneWidth","border","avgDiffWidth","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","name","info","css","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","collapse","expand","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","push","getBoundingClientRect","className","split","hideResizer","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","updateIsCollapsed","lastBarArrow","targetEle","lastBarIndex","click","_this","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","m","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","staticPaneCount","updateSplitterSize","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","prevbar","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","percentage","convertedValue","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","window","scrollX","top","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","cursorMoved","getBorder","clientWidth","clientHeight","validateDraggedPosition","separatorNewPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxRange","paneMaxDimensions","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","blazorContain","tempEle","compileElement","childEle","val","eleVal","display","removeProperty","trim","templateFn","outerHTML","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-layouts/src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left + window.scrollX :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft + window.scrollX :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}