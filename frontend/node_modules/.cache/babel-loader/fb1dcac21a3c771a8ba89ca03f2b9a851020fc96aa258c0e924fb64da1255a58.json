{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { ScrollElements, createScrollSvg } from './scrollbar-elements';\nimport { getElement, minMax, logBase } from '../utils/helper';\nimport { getScrollbarThemeColor } from '../model/theme';\nimport { scrollChanged, scrollEnd, scrollStart } from '../model/constants';\n/**\n * Scrollbar Base\n */\nvar ScrollBar = /** @class */function () {\n  /**\n   * Constructor for creating scrollbar\n   *\n   * @param component\n   * @param axis\n   */\n  function ScrollBar(component, axis) {\n    /** @private */\n    this.scrollRange = {\n      max: null,\n      min: null,\n      interval: null,\n      delta: null\n    };\n    this.component = component;\n    this.elements = [];\n    this.scrollElements = new ScrollElements(component);\n    this.axis = axis;\n    this.mouseMoveListener = this.scrollMouseMove.bind(this);\n    this.mouseUpListener = this.scrollMouseUp.bind(this);\n    this.animateDuration = 500;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n  }\n  /**\n   * To Mouse x and y position\n   *\n   * @param e\n   */\n  ScrollBar.prototype.getMouseXY = function (e) {\n    var pageX;\n    var pageY;\n    var touchArg;\n    if (e.type.indexOf('touch') > -1) {\n      touchArg = e;\n      pageX = touchArg.changedTouches[0].clientX;\n      pageY = touchArg.changedTouches[0].clientY;\n    } else {\n      pageX = e.clientX;\n      pageY = e.clientY;\n    }\n    var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n    this.mouseX = pageX - Math.max(svgRect.left, 0);\n    this.mouseY = pageY - Math.max(svgRect.top, 0);\n  };\n  /**\n   * Method to bind events for scrollbar svg object\n   *\n   * @param element\n   * @returns {void}\n   */\n  ScrollBar.prototype.wireEvents = function (element) {\n    EventHandler.add(element, Browser.touchStartEvent, this.scrollMouseDown, this);\n    EventHandler.add(element, Browser.touchMoveEvent, this.scrollMouseMove, this);\n    EventHandler.add(element, Browser.touchEndEvent, this.scrollMouseUp, this);\n    EventHandler.add(element, 'mousewheel', this.scrollMouseWheel, this);\n    window.addEventListener('mousemove', this.mouseMoveListener, false);\n    window.addEventListener('mouseup', this.mouseUpListener, false);\n  };\n  /**\n   * Method to remove events for srcollbar svg object\n   *\n   * @param element\n   */\n  ScrollBar.prototype.unWireEvents = function (element) {\n    EventHandler.remove(element, Browser.touchStartEvent, this.scrollMouseDown);\n    EventHandler.remove(element, Browser.touchMoveEvent, this.scrollMouseMove);\n    EventHandler.remove(element, Browser.touchEndEvent, this.scrollMouseUp);\n    EventHandler.remove(element, 'mousewheel', this.scrollMouseWheel);\n    window.removeEventListener('mousemove', this.mouseMoveListener, false);\n    window.removeEventListener('mouseup', this.mouseUpListener, false);\n  };\n  /**\n   * Handles the mouse down on scrollbar\n   *\n   * @param e\n   */\n  ScrollBar.prototype.scrollMouseDown = function (e) {\n    var id = e.target.id;\n    var elem = this.scrollElements;\n    var isInverse = this.axis.isAxisInverse;\n    this.getMouseXY(e);\n    this.isResizeLeft = this.isExist(id, '_leftCircle_') || this.isExist(id, '_leftArrow_');\n    this.isResizeRight = this.isExist(id, '_rightCircle_') || this.isExist(id, '_rightArrow_');\n    //  this.previousXY = this.isVertical ? this.mouseY : this.mouseX;\n    this.previousXY = this.isVertical && isInverse ? this.mouseY : this.isVertical ? this.width - this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n    this.previousWidth = elem.thumbRectWidth;\n    this.previousRectX = elem.thumbRectX;\n    this.startZoomPosition = this.axis.zoomPosition;\n    this.startZoomFactor = this.axis.zoomFactor;\n    this.startRange = this.axis.visibleRange;\n    this.scrollStarted = true;\n    this.component.trigger(scrollStart, this.getArgs(scrollStart));\n    if (this.isExist(id, 'scrollBarThumb_') || this.isExist(id, 'gripCircle')) {\n      this.isThumbDrag = true;\n      this.svgObject.style.cursor = '-webkit-grabbing';\n    } else if (this.isExist(id, 'scrollBarBackRect_')) {\n      var currentX = this.moveLength(this.previousXY, this.previousRectX);\n      elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n      this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n      this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth, false);\n      if (this.isLazyLoad) {\n        var thumbMove = elem.thumbRectX > this.previousRectX ? 'RightMove' : 'LeftMove';\n        var args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n        }\n      }\n    }\n    /**\n     * Customer issue\n     * Task ID - EJ2-28898\n     * Issue: While element's height is smaller than chart'height, html scroll bar presents. On that case while moving chart scrollbar,\n     * html scrollbar goes up due to chart's svg removed from the dom when zoomFactor and zoomPosition chnaged\n     * Fix: Only for scrolling purpose, height for element is set to chart's available height\n     */\n    if (this.component.element.style.height === '') {\n      this.isCustomHeight = true;\n      this.component.element.style.height = this.component.availableSize.height + 'px';\n    }\n  };\n  /**\n   * To check the matched string\n   *\n   * @param id\n   * @param match\n   */\n  ScrollBar.prototype.isExist = function (id, match) {\n    return id.indexOf(match) > -1;\n  };\n  /**\n   * To check current poisition is within scrollbar region\n   *\n   * @param currentX\n   */\n  ScrollBar.prototype.isWithIn = function (currentX) {\n    var circleRadius = 8;\n    return currentX - circleRadius >= 0 && currentX + this.scrollElements.thumbRectWidth + circleRadius <= this.width;\n  };\n  /**\n   * Method to find move length of thumb\n   *\n   * @param mouseXY\n   * @param thumbX\n   * @param circleRadius\n   */\n  ScrollBar.prototype.moveLength = function (mouseXY, thumbX, circleRadius) {\n    if (circleRadius === void 0) {\n      circleRadius = 8;\n    }\n    var moveLength = 10 / 100 * (this.width - circleRadius * 2);\n    if (mouseXY < thumbX) {\n      moveLength = thumbX - (thumbX - moveLength > circleRadius ? moveLength : circleRadius);\n    } else {\n      moveLength = thumbX + (thumbX + this.scrollElements.thumbRectWidth + moveLength < this.width - circleRadius ? moveLength : circleRadius);\n    }\n    return moveLength;\n  };\n  /**\n   * Method to calculate zoom factor and position\n   *\n   * @param currentX\n   * @param currentWidth\n   */\n  ScrollBar.prototype.setZoomFactorPosition = function (currentX, currentWidth, isRequire) {\n    if (isRequire === void 0) {\n      isRequire = true;\n    }\n    this.isScrollUI = true;\n    var axis = this.axis;\n    var circleRadius = 8;\n    var circleWidth = 1;\n    var currentScrollWidth = currentX + currentWidth + circleRadius + circleWidth;\n    var currentZPWidth = circleRadius + circleWidth / 2;\n    this.zoomPosition = (currentX - (currentX - currentZPWidth <= 0 ? currentZPWidth : 0)) / (this.isVertical ? axis.rect.height : this.width);\n    this.zoomFactor = (currentWidth + (currentScrollWidth >= this.width ? circleRadius + circleWidth : 0)) / (this.isVertical ? axis.rect.height : this.width);\n    axis.zoomPosition = this.zoomPosition < 0 ? 0 : this.zoomPosition > 0.9 ? 1 : this.zoomPosition;\n    axis.zoomFactor = isRequire ? this.zoomFactor : axis.zoomFactor;\n  };\n  /**\n   * Handles the mouse move on scrollbar\n   *\n   * @param e\n   */\n  ScrollBar.prototype.scrollMouseMove = function (e) {\n    var target = e.target;\n    var elem = this.scrollElements;\n    var isInverse = this.axis.isAxisInverse;\n    if (!getElement(this.svgObject.id)) {\n      return null;\n    }\n    this.getMouseXY(e);\n    this.setCursor(target);\n    this.setTheme(target);\n    //let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n    var mouseXY = this.isVertical && isInverse ? this.width - this.mouseY : this.isVertical ? this.mouseY : this.mouseX;\n    var range = this.axis.visibleRange;\n    var zoomPosition = this.zoomPosition;\n    var zoomFactor = this.zoomFactor;\n    var moveLength = this.previousRectX - elem.thumbRectX;\n    var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n    var args;\n    if (this.isLazyLoad && (this.isThumbDrag || this.isResizeLeft || this.isResizeRight)) {\n      args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n    }\n    var currentRange = args ? args.currentRange : null;\n    if (this.isThumbDrag) {\n      this.component.isScrolling = this.isThumbDrag;\n      mouseXY = this.isVertical || isInverse ? this.width - mouseXY : mouseXY;\n      var currentX = elem.thumbRectX + (mouseXY - this.previousXY);\n      if (mouseXY >= currentX + elem.thumbRectWidth) {\n        this.setCursor(target);\n      } else {\n        this.svgObject.style.cursor = '-webkit-grabbing';\n      }\n      if (mouseXY >= 0 && mouseXY <= currentX + elem.thumbRectWidth) {\n        elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n        this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n        this.previousXY = mouseXY;\n        this.setZoomFactorPosition(currentX, elem.thumbRectWidth, false);\n      }\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n    } else if (this.isResizeLeft || this.isResizeRight) {\n      this.resizeThumb();\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n    }\n  };\n  /**\n   * Handles the mouse wheel on scrollbar\n   *\n   * @param e\n   */\n  ScrollBar.prototype.scrollMouseWheel = function (e) {\n    var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n    this.mouseX = e.clientX - Math.max(svgRect.left, 0);\n    this.mouseY = e.clientY - Math.max(svgRect.top, 0);\n    var origin = 0.5;\n    var elem = this.scrollElements;\n    var axis = this.axis;\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e['wheelDelta'] / 120 > 0 ? 1 : -1;\n    var cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n    var range = this.axis.visibleRange;\n    var zoomPosition = this.zoomPosition;\n    var zoomFactor = this.zoomFactor;\n    var args;\n    if (cumulative >= 1) {\n      origin = axis.orientation === 'Horizontal' ? this.mouseX / axis.rect.width : 1 - this.mouseY / axis.rect.height;\n      origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n      this.zoomFactor = cumulative === 1 ? 1 : minMax(1 / cumulative, 0, 1);\n      this.zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - this.zoomFactor) * origin;\n    }\n    elem.thumbRectX = this.isWithIn(this.zoomPosition * this.width) ? this.zoomPosition * this.width : elem.thumbRectX;\n    this.isScrollUI = true;\n    this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n    if (this.isLazyLoad) {\n      this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth);\n    }\n    axis.zoomFactor = this.zoomFactor;\n    axis.zoomPosition = this.zoomPosition;\n    if (this.isLazyLoad) {\n      args = this.calculateMouseWheelRange(elem.thumbRectX, elem.thumbRectWidth);\n      if (args) {\n        if (args.currentRange.minimum !== args.previousAxisRange.minimum && args.currentRange.maximum !== args.previousAxisRange.maximum) {\n          this.component.trigger(scrollEnd, args);\n          this.isScrollEnd = false;\n        }\n      }\n    }\n    if (!this.isLazyLoad) {\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor));\n    }\n  };\n  /**\n   * Handles the mouse up on scrollbar\n   *\n   * @param e\n   */\n  ScrollBar.prototype.scrollMouseUp = function () {\n    var args;\n    this.startX = this.scrollElements.thumbRectX;\n    var circleRadius = 8;\n    var circleWidth = 1;\n    var currentScrollWidth = this.startX + this.scrollElements.thumbRectWidth + circleRadius + circleWidth;\n    var currentZPWidth = circleRadius + circleWidth / 2;\n    if ((this.isResizeLeft || this.isResizeRight) && !this.isLazyLoad) {\n      this.axis.zoomFactor = currentScrollWidth >= this.width - 1 && this.startX - currentZPWidth <= 0 ? 1 : this.zoomFactor;\n    }\n    if (this.isLazyLoad) {\n      var moveLength = this.previousRectX - this.startX;\n      if ((moveLength > 0 || moveLength < 0) && this.isThumbDrag) {\n        var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n        if (thumbMove === 'RightMove') {\n          this.startX = this.startX + Math.abs(moveLength) < this.width - circleRadius ? this.startX : this.width - circleRadius - this.scrollElements.thumbRectWidth;\n        } else {\n          this.startX = this.startX + this.scrollElements.thumbRectWidth - Math.abs(moveLength) > circleRadius ? this.startX : circleRadius;\n        }\n        args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth, thumbMove);\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n          this.scrollStarted = false;\n        }\n      }\n      if (this.isResizeLeft || this.isResizeRight) {\n        args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth);\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n          this.scrollStarted = false;\n        }\n      }\n    }\n    this.isThumbDrag = false;\n    this.isResizeLeft = false;\n    this.isResizeRight = false;\n    this.isScrollEnd = false;\n    this.component.isScrolling = false;\n    if (this.scrollStarted && !this.isLazyLoad) {\n      this.component.trigger(scrollEnd, this.getArgs(scrollChanged, this.startRange, this.startZoomPosition, this.startZoomFactor));\n      this.scrollStarted = false;\n    }\n    /**\n     * Customer issue\n     * Task ID - EJ2-28898\n     * Chart's height setted is removed here.\n     */\n    if (this.isCustomHeight) {\n      this.component.element.style.height = null;\n    }\n  };\n  ScrollBar.prototype.calculateMouseWheelRange = function (scrollThumbX, scrollThumbWidth) {\n    var zoomFactor;\n    var zoomPosition;\n    var args;\n    var range = this.scrollRange;\n    var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n    var circleRadius = 8;\n    if (scrollThumbX + scrollThumbWidth + circleRadius <= this.width) {\n      zoomPosition = (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = scrollThumbWidth / this.width;\n    }\n    var currentStart = range.min + zoomPosition * range.delta;\n    var currentEnd = currentStart + zoomFactor * range.delta;\n    if (currentEnd) {\n      args = {\n        axis: this.axis,\n        currentRange: this.getStartEnd(currentStart, currentEnd, true),\n        previousAxisRange: previousRange\n      };\n    }\n    return args;\n  };\n  /**\n   * Range calculation for lazy loading\n   *\n   * @param scrollThumbX\n   * @param scrollThumbWidth\n   * @param thumbMove\n   * @param scrollThumbX\n   * @param scrollThumbWidth\n   * @param thumbMove\n   * @param scrollThumbX\n   * @param scrollThumbWidth\n   * @param thumbMove\n   */\n  ScrollBar.prototype.calculateLazyRange = function (scrollThumbX, scrollThumbWidth, thumbMove) {\n    var currentScrollWidth = scrollThumbWidth;\n    var zoomFactor;\n    var zoomPosition;\n    var currentStart;\n    var currentEnd;\n    var args;\n    var range = this.scrollRange;\n    var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n    var circleRadius = 8;\n    var circleWidth = 16;\n    if (this.isResizeRight || thumbMove === 'RightMove') {\n      currentScrollWidth = this.isResizeRight ? currentScrollWidth + circleWidth : currentScrollWidth;\n      zoomFactor = (currentScrollWidth + circleRadius) / this.width;\n      zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : this.axis.zoomPosition;\n      currentStart = thumbMove === 'RightMove' ? range.min + zoomPosition * range.delta : this.previousStart;\n      currentEnd = currentStart + zoomFactor * range.delta;\n    } else if (this.isResizeLeft || thumbMove === 'LeftMove') {\n      zoomPosition = (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = currentScrollWidth / this.width;\n      currentStart = range.min + zoomPosition * range.delta;\n      currentStart = currentStart >= range.min ? currentStart : range.min;\n      currentEnd = thumbMove === 'LeftMove' ? currentStart + zoomFactor * range.delta : this.previousEnd;\n    } else if (this.isThumbDrag) {\n      zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = this.scrollElements.thumbRectWidth / this.width;\n      currentStart = range.min + zoomPosition * range.delta;\n      currentStart = currentStart >= range.min ? currentStart : range.min;\n      currentEnd = currentStart + zoomFactor * range.delta;\n    }\n    if (currentEnd) {\n      args = {\n        axis: this.component.isBlazor ? {} : this.axis,\n        currentRange: this.getStartEnd(currentStart, currentEnd, true),\n        previousAxisRange: previousRange\n      };\n    }\n    return args;\n  };\n  /**\n   * Get start and end values\n   *\n   * @param start\n   * @param end\n   * @param isCurrentStartEnd\n   * @param start\n   * @param end\n   * @param isCurrentStartEnd\n   * @param start\n   * @param end\n   * @param isCurrentStartEnd\n   */\n  ScrollBar.prototype.getStartEnd = function (start, end, isCurrentStartEnd) {\n    var valueType = this.valueType;\n    if ((valueType === 'DateTime' || valueType === 'DateTimeCategory') && isCurrentStartEnd) {\n      this.previousStart = start;\n      this.previousEnd = end;\n    } else if (isCurrentStartEnd) {\n      this.previousStart = Math.round(start);\n      this.previousEnd = Math.ceil(end);\n    }\n    switch (valueType) {\n      case 'Double':\n      case 'Category':\n      case 'Logarithmic':\n        start = Math.round(start);\n        end = Math.ceil(end);\n        break;\n      case 'DateTime':\n      case 'DateTimeCategory':\n        start = new Date(start);\n        end = new Date(end);\n        break;\n    }\n    return {\n      minimum: start,\n      maximum: end\n    };\n  };\n  /**\n   * To render scroll bar\n   *\n   * @param isScrollExist\n   * @private\n   */\n  ScrollBar.prototype.render = function (isScrollExist) {\n    if (this.component.zoomModule || isScrollExist && this.axis.scrollbarSettings.enable) {\n      this.getDefaults();\n    }\n    this.getTheme();\n    this.removeScrollSvg();\n    createScrollSvg(this, this.component.svgRenderer);\n    this.wireEvents(this.svgObject);\n    this.svgObject.appendChild(this.scrollElements.renderElements(this, this.component.svgRenderer));\n    return this.svgObject;\n  };\n  /**\n   * Theming for scrollabr\n   *\n   * @returns {void}\n   */\n  ScrollBar.prototype.getTheme = function () {\n    this.scrollbarThemeStyle = getScrollbarThemeColor(this.component.theme);\n  };\n  /**\n   * Method to remove existing scrollbar\n   *\n   * @returns {void}\n   */\n  ScrollBar.prototype.removeScrollSvg = function () {\n    if (document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name)) {\n      remove(document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name));\n    }\n  };\n  /**\n   * Method to set cursor fpr scrollbar\n   *\n   * @param target\n   */\n  ScrollBar.prototype.setCursor = function (target) {\n    var id = target.id;\n    this.svgObject.style.cursor = id.indexOf('scrollBarThumb_') > -1 || id.indexOf('_gripCircle') > -1 ? '-webkit-grab' : id.indexOf('Circle_') > -1 || id.indexOf('Arrow_') > -1 ? this.isVertical ? 'ns-resize' : 'ew-resize' : 'auto';\n  };\n  /**\n   * Method to set theme for sollbar\n   *\n   * @param target\n   */\n  ScrollBar.prototype.setTheme = function (target) {\n    var id = target.id;\n    var isLeftHover = id.indexOf('_leftCircle_') > -1 || id.indexOf('_leftArrow_') > -1;\n    var isRightHover = id.indexOf('_rightCircle_') > -1 || id.indexOf('_rightArrow_') > -1;\n    var style = this.scrollbarThemeStyle;\n    var leftArrowEle = this.scrollElements.leftArrowEle;\n    var rightArrowEle = this.scrollElements.rightArrowEle;\n    var leftCircleEle = this.scrollElements.leftCircleEle;\n    var rightCircleEle = this.scrollElements.rightCircleEle;\n    var isAxis = this.isCurrentAxis(target, leftArrowEle);\n    leftCircleEle.style.fill = isLeftHover && isAxis ? style.circleHover : style.circle;\n    rightCircleEle.style.fill = isRightHover && isAxis ? style.circleHover : style.circle;\n    leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n    rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n    if (this.component.theme === 'HighContrastLight') {\n      leftArrowEle.style.fill = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n      leftArrowEle.style.stroke = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n      rightArrowEle.style.fill = isRightHover && isAxis ? style.arrowHover : style.arrow;\n      rightArrowEle.style.stroke = isRightHover && isAxis ? style.arrowHover : style.arrow;\n      leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n      rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n    }\n  };\n  /**\n   * To check current axis\n   *\n   * @param target\n   * @param ele\n   */\n  ScrollBar.prototype.isCurrentAxis = function (target, ele) {\n    return target.id.split('_')[2] === ele.id.split('_')[2];\n  };\n  /**\n   * Method to resize thumb\n   *\n   * @param e\n   */\n  ScrollBar.prototype.resizeThumb = function () {\n    var currentWidth;\n    var circleRadius = 8;\n    var padding = 5;\n    var gripWidth = 14;\n    var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n    var thumbX = this.previousRectX;\n    var isInverse = this.axis.isAxisInverse;\n    // let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n    var mouseXY = this.isVertical && isInverse ? this.mouseY : this.isVertical ? this.width - this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n    var diff = Math.abs(this.previousXY - mouseXY);\n    if (this.isResizeLeft && mouseXY >= 0) {\n      var currentX = thumbX + (mouseXY > this.previousXY ? diff : -diff);\n      currentWidth = currentX - circleRadius >= 0 ? this.previousWidth + (mouseXY > this.previousXY ? -diff : diff) : this.previousWidth;\n      currentX = currentX - circleRadius >= 0 ? currentX : thumbX;\n      if (currentWidth >= minThumbWidth && mouseXY < currentX + currentWidth) {\n        this.scrollElements.thumbRectX = this.previousRectX = currentX;\n        this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n        this.previousXY = mouseXY;\n        this.positionThumb(currentX, currentWidth);\n        this.setZoomFactorPosition(currentX, currentWidth);\n      }\n    } else if (this.isResizeRight) {\n      currentWidth = mouseXY >= minThumbWidth + this.scrollElements.thumbRectX && mouseXY <= this.width - circleRadius ? mouseXY - this.scrollElements.thumbRectX : this.previousWidth;\n      this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n      this.previousXY = mouseXY;\n      this.positionThumb(this.startX, currentWidth);\n      this.setZoomFactorPosition(this.startX, currentWidth);\n      if (!this.isLazyLoad) {\n        this.setZoomFactorPosition(this.startX, currentWidth);\n      }\n    }\n  };\n  /**\n   * Method to position the scrollbar thumb\n   *\n   * @param currentX\n   * @param currentWidth\n   */\n  ScrollBar.prototype.positionThumb = function (currentX, currentWidth) {\n    var elem = this.scrollElements;\n    var gripWidth = 14;\n    var gripCircleDiameter = 2;\n    var padding = gripWidth / 2 - gripCircleDiameter;\n    elem.slider.setAttribute('x', currentX.toString());\n    elem.slider.setAttribute('width', currentWidth.toString());\n    elem.leftCircleEle.setAttribute('cx', currentX.toString());\n    elem.rightCircleEle.setAttribute('cx', (currentX + currentWidth).toString());\n    elem.setArrowDirection(currentX, currentWidth, this.height);\n    elem.gripCircle.setAttribute('transform', 'translate(' + (currentX + currentWidth / 2 + (this.isVertical ? 1 : -1) * padding) + ',' + (this.isVertical ? '10' : '5') + ') rotate(' + (this.isVertical ? '180' : '0') + ')');\n  };\n  /**\n   * Method to get default values\n   *\n   * @returns {void}\n   */\n  ScrollBar.prototype.getDefaults = function () {\n    var axis = this.axis;\n    var circleRadius = 8;\n    var padding = 5;\n    var gripWidth = 14;\n    var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n    if (this.axis.scrollbarSettings.enable) {\n      this.isLazyLoad = true;\n      this.getLazyDefaults(axis);\n    }\n    this.isVertical = axis.orientation === 'Vertical';\n    this.zoomFactor = this.isLazyLoad ? this.zoomFactor : axis.zoomFactor;\n    this.zoomPosition = this.isLazyLoad ? this.zoomPosition : axis.zoomPosition;\n    var currentWidth = this.zoomFactor * (this.isVertical ? axis.rect.height : axis.rect.width);\n    currentWidth = currentWidth > minThumbWidth ? currentWidth : minThumbWidth;\n    this.scrollX = axis.rect.x;\n    this.scrollY = axis.rect.y;\n    this.width = this.isVertical ? axis.rect.height : axis.rect.width;\n    this.height = 16;\n    var currentX = this.zoomPosition * (this.isVertical ? axis.rect.height : this.width);\n    var minThumbX = this.width - minThumbWidth - circleRadius;\n    this.scrollElements.thumbRectX = currentX > minThumbX ? minThumbX : currentX < circleRadius ? circleRadius : currentX;\n    this.scrollElements.thumbRectWidth = currentWidth + this.scrollElements.thumbRectX < this.width - circleRadius * 2 ? currentWidth : this.width - this.scrollElements.thumbRectX - circleRadius;\n  };\n  /**\n   * Lazy load default values\n   *\n   * @param axis\n   */\n  ScrollBar.prototype.getLazyDefaults = function (axis) {\n    var start;\n    var end;\n    var valueType = axis.valueType;\n    var scrollbarSettings = axis.scrollbarSettings;\n    var range = axis.scrollbarSettings.range;\n    var visibleRange = axis.visibleRange;\n    var pointsLength = axis.scrollbarSettings.pointsLength;\n    this.valueType = valueType = (!scrollbarSettings.range.minimum || !scrollbarSettings.range.maximum) && scrollbarSettings.pointsLength ? 'Double' : valueType;\n    var option = {\n      skeleton: 'full',\n      type: 'dateTime'\n    };\n    var dateParser = this.component.intl.getDateParser(option);\n    var dateFormatter = this.component.intl.getDateFormat(option);\n    switch (valueType) {\n      case 'Double':\n      case 'Category':\n      case 'Logarithmic':\n        start = range.minimum ? range.minimum : pointsLength ? 0 : visibleRange.min;\n        end = range.maximum ? range.maximum : pointsLength ? pointsLength - 1 : visibleRange.max;\n        break;\n      case 'DateTime':\n      case 'DateTimeCategory':\n        start = range.minimum ? Date.parse(dateParser(dateFormatter(range.minimum))) : visibleRange.min;\n        end = range.maximum ? Date.parse(dateParser(dateFormatter(range.maximum))) : visibleRange.max;\n        break;\n    }\n    start = Math.min(start, visibleRange.min);\n    end = Math.max(end, visibleRange.max);\n    var zoomFactor = (visibleRange.max - visibleRange.min) / (end - start);\n    var zoomPosition = (visibleRange.min - start) / (end - start);\n    this.zoomFactor = range.minimum || range.maximum ? zoomFactor : this.axis.maxPointLength / axis.scrollbarSettings.pointsLength;\n    this.zoomPosition = range.minimum || range.maximum ? zoomPosition : axis.zoomPosition;\n    this.scrollRange.min = start;\n    this.scrollRange.max = end;\n    this.scrollRange.delta = end - start;\n    this.previousStart = visibleRange.min;\n    this.previousEnd = visibleRange.max;\n  };\n  /**\n   * Method to get log range\n   *\n   * @param axis\n   */\n  ScrollBar.prototype.getLogRange = function (axis) {\n    var range = axis.scrollbarSettings.range;\n    var start = logBase(range.minimum, axis.logBase);\n    var end = logBase(range.maximum, axis.logBase);\n    start = isFinite(start) ? start : range.minimum;\n    end = isFinite(start) ? end : range.maximum;\n    return {\n      minimum: Math.floor(start / 1),\n      maximum: Math.ceil(end / 1)\n    };\n  };\n  /**\n   * Method for injecting scrollbar module\n   *\n   * @param axis\n   * @param component\n   */\n  ScrollBar.prototype.injectTo = function (axis, component) {\n    axis.zoomingScrollBar = new ScrollBar(component, axis);\n  };\n  /**\n   * Method to destroy scrollbar\n   *\n   * @returns {void}\n   */\n  ScrollBar.prototype.destroy = function () {\n    var _this = this;\n    if (this.axes) {\n      this.axes.map(function (axis) {\n        axis.zoomingScrollBar.destroy();\n      });\n    } else {\n      this.elements.map(function (element) {\n        _this.unWireEvents(element);\n        remove(element.firstChild);\n      });\n      this.elements = [];\n    }\n  };\n  /**\n   * Method to get scrollbar module name\n   *\n   * @returns {string}\n   */\n  ScrollBar.prototype.getModuleName = function () {\n    return 'ScrollBar';\n  };\n  ScrollBar.prototype.getArgs = function (eventName, range, zoomPosition, zoomFactor, currentRanges) {\n    var scrollArgs = {\n      axis: this.component.isBlazor ? {} : this.axis,\n      name: eventName,\n      range: this.axis.visibleRange,\n      zoomFactor: this.axis.zoomFactor,\n      zoomPosition: this.axis.zoomPosition,\n      previousRange: range,\n      previousZoomFactor: zoomFactor,\n      previousZoomPosition: zoomPosition,\n      currentRange: currentRanges\n    };\n    return scrollArgs;\n  };\n  return ScrollBar;\n}();\nexport { ScrollBar };","map":{"version":3,"names":["EventHandler","Browser","remove","ScrollElements","createScrollSvg","getElement","minMax","logBase","getScrollbarThemeColor","scrollChanged","scrollEnd","scrollStart","ScrollBar","component","axis","scrollRange","max","min","interval","delta","elements","scrollElements","mouseMoveListener","scrollMouseMove","bind","mouseUpListener","scrollMouseUp","animateDuration","isPointer","browserName","info","name","prototype","getMouseXY","e","pageX","pageY","touchArg","type","indexOf","changedTouches","clientX","clientY","svgRect","element","id","getBoundingClientRect","mouseX","Math","left","mouseY","top","wireEvents","add","touchStartEvent","scrollMouseDown","touchMoveEvent","touchEndEvent","scrollMouseWheel","window","addEventListener","unWireEvents","removeEventListener","target","elem","isInverse","isAxisInverse","isResizeLeft","isExist","isResizeRight","previousXY","isVertical","width","previousWidth","thumbRectWidth","previousRectX","thumbRectX","startZoomPosition","zoomPosition","startZoomFactor","zoomFactor","startRange","visibleRange","scrollStarted","trigger","getArgs","isThumbDrag","svgObject","style","cursor","currentX","moveLength","isWithIn","positionThumb","setZoomFactorPosition","isLazyLoad","thumbMove","args","calculateLazyRange","height","isCustomHeight","availableSize","match","circleRadius","mouseXY","thumbX","currentWidth","isRequire","isScrollUI","circleWidth","currentScrollWidth","currentZPWidth","rect","setCursor","setTheme","range","currentRange","isScrolling","resizeThumb","origin","direction","detail","cumulative","orientation","calculateMouseWheelRange","minimum","previousAxisRange","maximum","isScrollEnd","startX","abs","scrollThumbX","scrollThumbWidth","previousRange","getStartEnd","previousStart","previousEnd","currentStart","currentEnd","isBlazor","start","end","isCurrentStartEnd","valueType","round","ceil","Date","render","isScrollExist","zoomModule","scrollbarSettings","enable","getDefaults","getTheme","removeScrollSvg","svgRenderer","appendChild","renderElements","scrollbarThemeStyle","theme","document","getElementById","isLeftHover","isRightHover","leftArrowEle","rightArrowEle","leftCircleEle","rightCircleEle","isAxis","isCurrentAxis","fill","circleHover","circle","stroke","arrowHover","arrow","ele","split","padding","gripWidth","minThumbWidth","diff","gripCircleDiameter","slider","setAttribute","toString","setArrowDirection","gripCircle","getLazyDefaults","scrollX","x","scrollY","y","minThumbX","pointsLength","option","skeleton","dateParser","intl","getDateParser","dateFormatter","getDateFormat","parse","maxPointLength","getLogRange","isFinite","floor","injectTo","zoomingScrollBar","destroy","_this","axes","map","firstChild","getModuleName","eventName","currentRanges","scrollArgs","previousZoomFactor","previousZoomPosition"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-charts/src/common/scrollbar/scrollbar.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { ScrollElements, createScrollSvg } from './scrollbar-elements';\nimport { getElement, minMax, logBase } from '../utils/helper';\nimport { getScrollbarThemeColor } from '../model/theme';\nimport { scrollChanged, scrollEnd, scrollStart } from '../model/constants';\n/**\n * Scrollbar Base\n */\nvar ScrollBar = /** @class */ (function () {\n    /**\n     * Constructor for creating scrollbar\n     *\n     * @param component\n     * @param axis\n     */\n    function ScrollBar(component, axis) {\n        /** @private */\n        this.scrollRange = { max: null, min: null, interval: null, delta: null };\n        this.component = component;\n        this.elements = [];\n        this.scrollElements = new ScrollElements(component);\n        this.axis = axis;\n        this.mouseMoveListener = this.scrollMouseMove.bind(this);\n        this.mouseUpListener = this.scrollMouseUp.bind(this);\n        this.animateDuration = 500;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n    }\n    /**\n     * To Mouse x and y position\n     *\n     * @param e\n     */\n    ScrollBar.prototype.getMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        if (e.type.indexOf('touch') > -1) {\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n        this.mouseX = pageX - Math.max(svgRect.left, 0);\n        this.mouseY = pageY - Math.max(svgRect.top, 0);\n    };\n    /**\n     * Method to bind events for scrollbar svg object\n     *\n     * @param element\n     * @returns {void}\n     */\n    ScrollBar.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.scrollMouseDown, this);\n        EventHandler.add(element, Browser.touchMoveEvent, this.scrollMouseMove, this);\n        EventHandler.add(element, Browser.touchEndEvent, this.scrollMouseUp, this);\n        EventHandler.add(element, 'mousewheel', this.scrollMouseWheel, this);\n        window.addEventListener('mousemove', this.mouseMoveListener, false);\n        window.addEventListener('mouseup', this.mouseUpListener, false);\n    };\n    /**\n     * Method to remove events for srcollbar svg object\n     *\n     * @param element\n     */\n    ScrollBar.prototype.unWireEvents = function (element) {\n        EventHandler.remove(element, Browser.touchStartEvent, this.scrollMouseDown);\n        EventHandler.remove(element, Browser.touchMoveEvent, this.scrollMouseMove);\n        EventHandler.remove(element, Browser.touchEndEvent, this.scrollMouseUp);\n        EventHandler.remove(element, 'mousewheel', this.scrollMouseWheel);\n        window.removeEventListener('mousemove', this.mouseMoveListener, false);\n        window.removeEventListener('mouseup', this.mouseUpListener, false);\n    };\n    /**\n     * Handles the mouse down on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseDown = function (e) {\n        var id = e.target.id;\n        var elem = this.scrollElements;\n        var isInverse = this.axis.isAxisInverse;\n        this.getMouseXY(e);\n        this.isResizeLeft = this.isExist(id, '_leftCircle_') || this.isExist(id, '_leftArrow_');\n        this.isResizeRight = this.isExist(id, '_rightCircle_') || this.isExist(id, '_rightArrow_');\n        //  this.previousXY = this.isVertical ? this.mouseY : this.mouseX;\n        this.previousXY = (this.isVertical && isInverse) ? this.mouseY : this.isVertical ? this.width -\n            this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n        this.previousWidth = elem.thumbRectWidth;\n        this.previousRectX = elem.thumbRectX;\n        this.startZoomPosition = this.axis.zoomPosition;\n        this.startZoomFactor = this.axis.zoomFactor;\n        this.startRange = this.axis.visibleRange;\n        this.scrollStarted = true;\n        this.component.trigger(scrollStart, this.getArgs(scrollStart));\n        if (this.isExist(id, 'scrollBarThumb_') || this.isExist(id, 'gripCircle')) {\n            this.isThumbDrag = true;\n            this.svgObject.style.cursor = '-webkit-grabbing';\n        }\n        else if (this.isExist(id, 'scrollBarBackRect_')) {\n            var currentX = this.moveLength(this.previousXY, this.previousRectX);\n            elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n            this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n            this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth, false);\n            if (this.isLazyLoad) {\n                var thumbMove = elem.thumbRectX > this.previousRectX ? 'RightMove' : 'LeftMove';\n                var args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                }\n            }\n        }\n        /**\n         * Customer issue\n         * Task ID - EJ2-28898\n         * Issue: While element's height is smaller than chart'height, html scroll bar presents. On that case while moving chart scrollbar,\n         * html scrollbar goes up due to chart's svg removed from the dom when zoomFactor and zoomPosition chnaged\n         * Fix: Only for scrolling purpose, height for element is set to chart's available height\n         */\n        if (this.component.element.style.height === '') {\n            this.isCustomHeight = true;\n            this.component.element.style.height = this.component.availableSize.height + 'px';\n        }\n    };\n    /**\n     * To check the matched string\n     *\n     * @param id\n     * @param match\n     */\n    ScrollBar.prototype.isExist = function (id, match) {\n        return id.indexOf(match) > -1;\n    };\n    /**\n     * To check current poisition is within scrollbar region\n     *\n     * @param currentX\n     */\n    ScrollBar.prototype.isWithIn = function (currentX) {\n        var circleRadius = 8;\n        return (currentX - circleRadius >= 0 &&\n            currentX + this.scrollElements.thumbRectWidth + circleRadius <= this.width);\n    };\n    /**\n     * Method to find move length of thumb\n     *\n     * @param mouseXY\n     * @param thumbX\n     * @param circleRadius\n     */\n    ScrollBar.prototype.moveLength = function (mouseXY, thumbX, circleRadius) {\n        if (circleRadius === void 0) { circleRadius = 8; }\n        var moveLength = (10 / 100) * (this.width - circleRadius * 2);\n        if (mouseXY < thumbX) {\n            moveLength = thumbX - (thumbX - moveLength > circleRadius ? moveLength : circleRadius);\n        }\n        else {\n            moveLength = thumbX + (thumbX + this.scrollElements.thumbRectWidth + moveLength < this.width - circleRadius ?\n                moveLength : circleRadius);\n        }\n        return moveLength;\n    };\n    /**\n     * Method to calculate zoom factor and position\n     *\n     * @param currentX\n     * @param currentWidth\n     */\n    ScrollBar.prototype.setZoomFactorPosition = function (currentX, currentWidth, isRequire) {\n        if (isRequire === void 0) { isRequire = true; }\n        this.isScrollUI = true;\n        var axis = this.axis;\n        var circleRadius = 8;\n        var circleWidth = 1;\n        var currentScrollWidth = currentX + currentWidth + circleRadius + circleWidth;\n        var currentZPWidth = circleRadius + (circleWidth / 2);\n        this.zoomPosition = (currentX - (currentX - currentZPWidth <= 0 ? currentZPWidth : 0)) / (this.isVertical\n            ? axis.rect.height : this.width);\n        this.zoomFactor = (currentWidth + (currentScrollWidth >= this.width ? circleRadius + circleWidth : 0)) / (this.isVertical\n            ? axis.rect.height : this.width);\n        axis.zoomPosition = this.zoomPosition < 0 ? 0 : this.zoomPosition > 0.9 ? 1 : this.zoomPosition;\n        axis.zoomFactor = isRequire ? this.zoomFactor : axis.zoomFactor;\n    };\n    /**\n     * Handles the mouse move on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseMove = function (e) {\n        var target = e.target;\n        var elem = this.scrollElements;\n        var isInverse = this.axis.isAxisInverse;\n        if (!getElement(this.svgObject.id)) {\n            return null;\n        }\n        this.getMouseXY(e);\n        this.setCursor(target);\n        this.setTheme(target);\n        //let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n        var mouseXY = (this.isVertical && isInverse) ? this.width - this.mouseY : this.isVertical ?\n            this.mouseY : this.mouseX;\n        var range = this.axis.visibleRange;\n        var zoomPosition = this.zoomPosition;\n        var zoomFactor = this.zoomFactor;\n        var moveLength = this.previousRectX - elem.thumbRectX;\n        var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n        var args;\n        if (this.isLazyLoad && (this.isThumbDrag || this.isResizeLeft || this.isResizeRight)) {\n            args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n        }\n        var currentRange = args ? args.currentRange : null;\n        if (this.isThumbDrag) {\n            this.component.isScrolling = this.isThumbDrag;\n            mouseXY = (this.isVertical || isInverse) ? this.width - mouseXY : mouseXY;\n            var currentX = elem.thumbRectX + (mouseXY - this.previousXY);\n            if (mouseXY >= currentX + elem.thumbRectWidth) {\n                this.setCursor(target);\n            }\n            else {\n                this.svgObject.style.cursor = '-webkit-grabbing';\n            }\n            if (mouseXY >= 0 && mouseXY <= currentX + elem.thumbRectWidth) {\n                elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n                this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n                this.previousXY = mouseXY;\n                this.setZoomFactorPosition(currentX, elem.thumbRectWidth, false);\n            }\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n        }\n        else if (this.isResizeLeft || this.isResizeRight) {\n            this.resizeThumb();\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n        }\n    };\n    /**\n     * Handles the mouse wheel on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseWheel = function (e) {\n        var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n        this.mouseX = e.clientX - Math.max(svgRect.left, 0);\n        this.mouseY = e.clientY - Math.max(svgRect.top, 0);\n        var origin = 0.5;\n        var elem = this.scrollElements;\n        var axis = this.axis;\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e['wheelDelta'] / 120) > 0 ? 1 : -1;\n        var cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n        var range = this.axis.visibleRange;\n        var zoomPosition = this.zoomPosition;\n        var zoomFactor = this.zoomFactor;\n        var args;\n        if (cumulative >= 1) {\n            origin = axis.orientation === 'Horizontal' ? this.mouseX / axis.rect.width : 1 - (this.mouseY / axis.rect.height);\n            origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n            this.zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n            this.zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - this.zoomFactor) * origin);\n        }\n        elem.thumbRectX = this.isWithIn(this.zoomPosition * this.width) ? this.zoomPosition * this.width : elem.thumbRectX;\n        this.isScrollUI = true;\n        this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n        if (this.isLazyLoad) {\n            this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth);\n        }\n        axis.zoomFactor = this.zoomFactor;\n        axis.zoomPosition = this.zoomPosition;\n        if (this.isLazyLoad) {\n            args = this.calculateMouseWheelRange(elem.thumbRectX, elem.thumbRectWidth);\n            if (args) {\n                if ((args.currentRange.minimum !== args.previousAxisRange.minimum) && (args.currentRange.maximum !==\n                    args.previousAxisRange.maximum)) {\n                    this.component.trigger(scrollEnd, args);\n                    this.isScrollEnd = false;\n                }\n            }\n        }\n        if (!this.isLazyLoad) {\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor));\n        }\n    };\n    /**\n     * Handles the mouse up on scrollbar\n     *\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseUp = function () {\n        var args;\n        this.startX = this.scrollElements.thumbRectX;\n        var circleRadius = 8;\n        var circleWidth = 1;\n        var currentScrollWidth = this.startX + this.scrollElements.thumbRectWidth + circleRadius + circleWidth;\n        var currentZPWidth = circleRadius + (circleWidth / 2);\n        if ((this.isResizeLeft || this.isResizeRight) && !this.isLazyLoad) {\n            this.axis.zoomFactor = (currentScrollWidth >= this.width - 1 && (this.startX - currentZPWidth) <= 0) ? 1 : this.zoomFactor;\n        }\n        if (this.isLazyLoad) {\n            var moveLength = this.previousRectX - this.startX;\n            if ((moveLength > 0 || moveLength < 0) && this.isThumbDrag) {\n                var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n                if (thumbMove === 'RightMove') {\n                    this.startX = (this.startX + Math.abs(moveLength)) < this.width - circleRadius ? this.startX :\n                        this.width - circleRadius - this.scrollElements.thumbRectWidth;\n                }\n                else {\n                    this.startX = (this.startX + this.scrollElements.thumbRectWidth - Math.abs(moveLength)) > circleRadius ?\n                        this.startX : circleRadius;\n                }\n                args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth, thumbMove);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                    this.scrollStarted = false;\n                }\n            }\n            if (this.isResizeLeft || this.isResizeRight) {\n                args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                    this.scrollStarted = false;\n                }\n            }\n        }\n        this.isThumbDrag = false;\n        this.isResizeLeft = false;\n        this.isResizeRight = false;\n        this.isScrollEnd = false;\n        this.component.isScrolling = false;\n        if (this.scrollStarted && !this.isLazyLoad) {\n            this.component.trigger(scrollEnd, this.getArgs(scrollChanged, this.startRange, this.startZoomPosition, this.startZoomFactor));\n            this.scrollStarted = false;\n        }\n        /**\n         * Customer issue\n         * Task ID - EJ2-28898\n         * Chart's height setted is removed here.\n         */\n        if (this.isCustomHeight) {\n            this.component.element.style.height = null;\n        }\n    };\n    ScrollBar.prototype.calculateMouseWheelRange = function (scrollThumbX, scrollThumbWidth) {\n        var zoomFactor;\n        var zoomPosition;\n        var args;\n        var range = this.scrollRange;\n        var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n        var circleRadius = 8;\n        if ((scrollThumbX + scrollThumbWidth + circleRadius) <= this.width) {\n            zoomPosition = (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = scrollThumbWidth / (this.width);\n        }\n        var currentStart = range.min + zoomPosition * range.delta;\n        var currentEnd = currentStart + zoomFactor * range.delta;\n        if (currentEnd) {\n            args = { axis: this.axis, currentRange: this.getStartEnd(currentStart, currentEnd, true), previousAxisRange: previousRange };\n        }\n        return args;\n    };\n    /**\n     * Range calculation for lazy loading\n     *\n     * @param scrollThumbX\n     * @param scrollThumbWidth\n     * @param thumbMove\n     * @param scrollThumbX\n     * @param scrollThumbWidth\n     * @param thumbMove\n     * @param scrollThumbX\n     * @param scrollThumbWidth\n     * @param thumbMove\n     */\n    ScrollBar.prototype.calculateLazyRange = function (scrollThumbX, scrollThumbWidth, thumbMove) {\n        var currentScrollWidth = scrollThumbWidth;\n        var zoomFactor;\n        var zoomPosition;\n        var currentStart;\n        var currentEnd;\n        var args;\n        var range = this.scrollRange;\n        var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n        var circleRadius = 8;\n        var circleWidth = 16;\n        if (this.isResizeRight || thumbMove === 'RightMove') {\n            currentScrollWidth = this.isResizeRight ? currentScrollWidth + circleWidth : currentScrollWidth;\n            zoomFactor = (currentScrollWidth + circleRadius) / this.width;\n            zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : this.axis.zoomPosition;\n            currentStart = thumbMove === 'RightMove' ? (range.min + zoomPosition * range.delta) : this.previousStart;\n            currentEnd = currentStart + zoomFactor * range.delta;\n        }\n        else if (this.isResizeLeft || thumbMove === 'LeftMove') {\n            zoomPosition = (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = currentScrollWidth / this.width;\n            currentStart = range.min + zoomPosition * range.delta;\n            currentStart = currentStart >= range.min ? currentStart : range.min;\n            currentEnd = thumbMove === 'LeftMove' ? (currentStart + zoomFactor * range.delta) : this.previousEnd;\n        }\n        else if (this.isThumbDrag) {\n            zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = (this.scrollElements.thumbRectWidth) / this.width;\n            currentStart = range.min + zoomPosition * range.delta;\n            currentStart = currentStart >= range.min ? currentStart : range.min;\n            currentEnd = currentStart + zoomFactor * range.delta;\n        }\n        if (currentEnd) {\n            args = { axis: (this.component.isBlazor ? {} : this.axis), currentRange: this.getStartEnd(currentStart, currentEnd, true),\n                previousAxisRange: previousRange };\n        }\n        return args;\n    };\n    /**\n     * Get start and end values\n     *\n     * @param start\n     * @param end\n     * @param isCurrentStartEnd\n     * @param start\n     * @param end\n     * @param isCurrentStartEnd\n     * @param start\n     * @param end\n     * @param isCurrentStartEnd\n     */\n    ScrollBar.prototype.getStartEnd = function (start, end, isCurrentStartEnd) {\n        var valueType = this.valueType;\n        if ((valueType === 'DateTime' || valueType === 'DateTimeCategory') && isCurrentStartEnd) {\n            this.previousStart = start;\n            this.previousEnd = end;\n        }\n        else if (isCurrentStartEnd) {\n            this.previousStart = Math.round(start);\n            this.previousEnd = Math.ceil(end);\n        }\n        switch (valueType) {\n            case 'Double':\n            case 'Category':\n            case 'Logarithmic':\n                start = Math.round(start);\n                end = Math.ceil(end);\n                break;\n            case 'DateTime':\n            case 'DateTimeCategory':\n                start = new Date(start);\n                end = new Date(end);\n                break;\n        }\n        return { minimum: start, maximum: end };\n    };\n    /**\n     * To render scroll bar\n     *\n     * @param isScrollExist\n     * @private\n     */\n    ScrollBar.prototype.render = function (isScrollExist) {\n        if (this.component.zoomModule || (isScrollExist && this.axis.scrollbarSettings.enable)) {\n            this.getDefaults();\n        }\n        this.getTheme();\n        this.removeScrollSvg();\n        createScrollSvg(this, this.component.svgRenderer);\n        this.wireEvents(this.svgObject);\n        this.svgObject.appendChild(this.scrollElements.renderElements(this, this.component.svgRenderer));\n        return this.svgObject;\n    };\n    /**\n     * Theming for scrollabr\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.getTheme = function () {\n        this.scrollbarThemeStyle = getScrollbarThemeColor(this.component.theme);\n    };\n    /**\n     * Method to remove existing scrollbar\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.removeScrollSvg = function () {\n        if (document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name)) {\n            remove(document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name));\n        }\n    };\n    /**\n     * Method to set cursor fpr scrollbar\n     *\n     * @param target\n     */\n    ScrollBar.prototype.setCursor = function (target) {\n        var id = target.id;\n        this.svgObject.style.cursor = id.indexOf('scrollBarThumb_') > -1 || id.indexOf('_gripCircle') > -1 ?\n            '-webkit-grab' : (id.indexOf('Circle_') > -1 || id.indexOf('Arrow_') > -1) ? this.isVertical ? 'ns-resize' :\n            'ew-resize' : 'auto';\n    };\n    /**\n     * Method to set theme for sollbar\n     *\n     * @param target\n     */\n    ScrollBar.prototype.setTheme = function (target) {\n        var id = target.id;\n        var isLeftHover = id.indexOf('_leftCircle_') > -1 || id.indexOf('_leftArrow_') > -1;\n        var isRightHover = id.indexOf('_rightCircle_') > -1 || id.indexOf('_rightArrow_') > -1;\n        var style = this.scrollbarThemeStyle;\n        var leftArrowEle = this.scrollElements.leftArrowEle;\n        var rightArrowEle = this.scrollElements.rightArrowEle;\n        var leftCircleEle = this.scrollElements.leftCircleEle;\n        var rightCircleEle = this.scrollElements.rightCircleEle;\n        var isAxis = this.isCurrentAxis(target, leftArrowEle);\n        leftCircleEle.style.fill = isLeftHover && isAxis ? style.circleHover : style.circle;\n        rightCircleEle.style.fill = isRightHover && isAxis ? style.circleHover : style.circle;\n        leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n        rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n        if (this.component.theme === 'HighContrastLight') {\n            leftArrowEle.style.fill = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n            leftArrowEle.style.stroke = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n            rightArrowEle.style.fill = isRightHover && isAxis ? style.arrowHover : style.arrow;\n            rightArrowEle.style.stroke = isRightHover && isAxis ? style.arrowHover : style.arrow;\n            leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n            rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n        }\n    };\n    /**\n     * To check current axis\n     *\n     * @param target\n     * @param ele\n     */\n    ScrollBar.prototype.isCurrentAxis = function (target, ele) {\n        return (target.id.split('_')[2] === ele.id.split('_')[2]);\n    };\n    /**\n     * Method to resize thumb\n     *\n     * @param e\n     */\n    ScrollBar.prototype.resizeThumb = function () {\n        var currentWidth;\n        var circleRadius = 8;\n        var padding = 5;\n        var gripWidth = 14;\n        var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n        var thumbX = this.previousRectX;\n        var isInverse = this.axis.isAxisInverse;\n        // let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n        var mouseXY = (this.isVertical && isInverse) ? this.mouseY : this.isVertical ? this.width -\n            this.mouseY : isInverse ? this.width - this.mouseX : this.mouseX;\n        var diff = Math.abs(this.previousXY - mouseXY);\n        if (this.isResizeLeft && mouseXY >= 0) {\n            var currentX = thumbX + (mouseXY > this.previousXY ? diff : -diff);\n            currentWidth = currentX - circleRadius >= 0 ? this.previousWidth + (mouseXY > this.previousXY ? -diff : diff) :\n                this.previousWidth;\n            currentX = currentX - circleRadius >= 0 ? currentX : thumbX;\n            if (currentWidth >= minThumbWidth && mouseXY < currentX + currentWidth) {\n                this.scrollElements.thumbRectX = this.previousRectX = currentX;\n                this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n                this.previousXY = mouseXY;\n                this.positionThumb(currentX, currentWidth);\n                this.setZoomFactorPosition(currentX, currentWidth);\n            }\n        }\n        else if (this.isResizeRight) {\n            currentWidth = mouseXY >= minThumbWidth + this.scrollElements.thumbRectX && mouseXY <= this.width - circleRadius ?\n                mouseXY - this.scrollElements.thumbRectX : this.previousWidth;\n            this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n            this.previousXY = mouseXY;\n            this.positionThumb(this.startX, currentWidth);\n            this.setZoomFactorPosition(this.startX, currentWidth);\n            if (!this.isLazyLoad) {\n                this.setZoomFactorPosition(this.startX, currentWidth);\n            }\n        }\n    };\n    /**\n     * Method to position the scrollbar thumb\n     *\n     * @param currentX\n     * @param currentWidth\n     */\n    ScrollBar.prototype.positionThumb = function (currentX, currentWidth) {\n        var elem = this.scrollElements;\n        var gripWidth = 14;\n        var gripCircleDiameter = 2;\n        var padding = gripWidth / 2 - gripCircleDiameter;\n        elem.slider.setAttribute('x', currentX.toString());\n        elem.slider.setAttribute('width', currentWidth.toString());\n        elem.leftCircleEle.setAttribute('cx', currentX.toString());\n        elem.rightCircleEle.setAttribute('cx', (currentX + currentWidth).toString());\n        elem.setArrowDirection(currentX, currentWidth, this.height);\n        elem.gripCircle.setAttribute('transform', 'translate(' + (currentX + currentWidth / 2 + ((this.isVertical ? 1 : -1) * padding)) +\n            ',' + (this.isVertical ? '10' : '5') + ') rotate(' + (this.isVertical ? '180' : '0') + ')');\n    };\n    /**\n     * Method to get default values\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.getDefaults = function () {\n        var axis = this.axis;\n        var circleRadius = 8;\n        var padding = 5;\n        var gripWidth = 14;\n        var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n        if (this.axis.scrollbarSettings.enable) {\n            this.isLazyLoad = true;\n            this.getLazyDefaults(axis);\n        }\n        this.isVertical = axis.orientation === 'Vertical';\n        this.zoomFactor = this.isLazyLoad ? this.zoomFactor : axis.zoomFactor;\n        this.zoomPosition = this.isLazyLoad ? this.zoomPosition : axis.zoomPosition;\n        var currentWidth = this.zoomFactor * (this.isVertical ? axis.rect.height : axis.rect.width);\n        currentWidth = currentWidth > minThumbWidth ? currentWidth : minThumbWidth;\n        this.scrollX = axis.rect.x;\n        this.scrollY = axis.rect.y;\n        this.width = this.isVertical ? axis.rect.height : axis.rect.width;\n        this.height = 16;\n        var currentX = this.zoomPosition * (this.isVertical ? axis.rect.height : this.width);\n        var minThumbX = (this.width - minThumbWidth - circleRadius);\n        this.scrollElements.thumbRectX = currentX > minThumbX ? minThumbX : currentX < circleRadius ? circleRadius : currentX;\n        this.scrollElements.thumbRectWidth = ((currentWidth + this.scrollElements.thumbRectX) < this.width - (circleRadius * 2))\n            ? currentWidth : this.width - this.scrollElements.thumbRectX - circleRadius;\n    };\n    /**\n     * Lazy load default values\n     *\n     * @param axis\n     */\n    ScrollBar.prototype.getLazyDefaults = function (axis) {\n        var start;\n        var end;\n        var valueType = axis.valueType;\n        var scrollbarSettings = axis.scrollbarSettings;\n        var range = axis.scrollbarSettings.range;\n        var visibleRange = axis.visibleRange;\n        var pointsLength = axis.scrollbarSettings.pointsLength;\n        this.valueType = valueType = (!scrollbarSettings.range.minimum || !scrollbarSettings.range.maximum) &&\n            scrollbarSettings.pointsLength ? 'Double' : valueType;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.component.intl.getDateParser(option);\n        var dateFormatter = this.component.intl.getDateFormat(option);\n        switch (valueType) {\n            case 'Double':\n            case 'Category':\n            case 'Logarithmic':\n                start = range.minimum ? range.minimum : pointsLength ? 0 : visibleRange.min;\n                end = range.maximum ? range.maximum : pointsLength ? (pointsLength - 1) : visibleRange.max;\n                break;\n            case 'DateTime':\n            case 'DateTimeCategory':\n                start = range.minimum ? Date.parse(dateParser(dateFormatter(range.minimum))) : visibleRange.min;\n                end = range.maximum ? Date.parse(dateParser(dateFormatter(range.maximum))) : visibleRange.max;\n                break;\n        }\n        start = Math.min(start, visibleRange.min);\n        end = Math.max(end, visibleRange.max);\n        var zoomFactor = (visibleRange.max - visibleRange.min) / (end - start);\n        var zoomPosition = (visibleRange.min - start) / (end - start);\n        this.zoomFactor = range.minimum || range.maximum ? zoomFactor : (this.axis.maxPointLength / axis.scrollbarSettings.pointsLength);\n        this.zoomPosition = range.minimum || range.maximum ? zoomPosition : axis.zoomPosition;\n        this.scrollRange.min = start;\n        this.scrollRange.max = end;\n        this.scrollRange.delta = end - start;\n        this.previousStart = visibleRange.min;\n        this.previousEnd = visibleRange.max;\n    };\n    /**\n     * Method to get log range\n     *\n     * @param axis\n     */\n    ScrollBar.prototype.getLogRange = function (axis) {\n        var range = axis.scrollbarSettings.range;\n        var start = logBase(range.minimum, axis.logBase);\n        var end = logBase(range.maximum, axis.logBase);\n        start = isFinite(start) ? start : range.minimum;\n        end = isFinite(start) ? end : range.maximum;\n        return { minimum: Math.floor(start / 1), maximum: Math.ceil(end / 1) };\n    };\n    /**\n     * Method for injecting scrollbar module\n     *\n     * @param axis\n     * @param component\n     */\n    ScrollBar.prototype.injectTo = function (axis, component) {\n        axis.zoomingScrollBar = new ScrollBar(component, axis);\n    };\n    /**\n     * Method to destroy scrollbar\n     *\n     * @returns {void}\n     */\n    ScrollBar.prototype.destroy = function () {\n        var _this = this;\n        if (this.axes) {\n            this.axes.map(function (axis) {\n                axis.zoomingScrollBar.destroy();\n            });\n        }\n        else {\n            this.elements.map(function (element) {\n                _this.unWireEvents(element);\n                remove(element.firstChild);\n            });\n            this.elements = [];\n        }\n    };\n    /**\n     * Method to get scrollbar module name\n     *\n     * @returns {string}\n     */\n    ScrollBar.prototype.getModuleName = function () {\n        return 'ScrollBar';\n    };\n    ScrollBar.prototype.getArgs = function (eventName, range, zoomPosition, zoomFactor, currentRanges) {\n        var scrollArgs = {\n            axis: (this.component.isBlazor ? {} : this.axis),\n            name: eventName,\n            range: this.axis.visibleRange,\n            zoomFactor: this.axis.zoomFactor,\n            zoomPosition: this.axis.zoomPosition,\n            previousRange: range,\n            previousZoomFactor: zoomFactor,\n            previousZoomPosition: zoomPosition,\n            currentRange: currentRanges\n        };\n        return scrollArgs;\n    };\n    return ScrollBar;\n}());\nexport { ScrollBar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}