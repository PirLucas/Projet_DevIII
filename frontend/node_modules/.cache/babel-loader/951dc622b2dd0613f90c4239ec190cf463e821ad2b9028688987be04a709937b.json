{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart legend\n */\nimport { extend, Browser, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\nimport { pointByIndex } from '../model/acc-base';\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { textTrim, getElement, blazorTemplatesReset } from '../../common/utils/helper';\n/**\n * AccumulationLegend module used to render `Legend` for Accumulation chart.\n */\nvar AccumulationLegend = /** @class */function (_super) {\n  __extends(AccumulationLegend, _super);\n  /**\n   * Constructor for Accumulation Legend.\n   *\n   * @param {AccumulationChart} chart Get a chart as a parameter.\n   */\n  function AccumulationLegend(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.library = _this;\n    _this.titleRect = new Rect(0, chart.margin.top, 0, 0);\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n  * Binding events for legend module.\n  */\n  AccumulationLegend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n  };\n  /**\n  * UnBinding events for legend module.\n  */\n  AccumulationLegend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n  * To handle mosue move for legend module\n  */\n  AccumulationLegend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      if (this.chart.accumulationHighlightModule && this.chart.highlightMode !== 'None') {\n        this.click(e);\n      }\n    }\n  };\n  /**\n  * To handle mosue end for legend module\n  */\n  AccumulationLegend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   *\n   * @returns {void} Legend options.\n   * @private\n   */\n  AccumulationLegend.prototype.getLegendOptions = function (chart, series) {\n    this.legendCollections = [];\n    this.isRtlEnable = chart.enableRtl;\n    this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n    for (var i = 0; i < 1; i++) {\n      var seriesType = series[i].type;\n      if (seriesType === 'Pie' || seriesType === 'Doughnut') {\n        seriesType = series[i].innerRadius !== '0' && series[i].innerRadius !== '0%' ? 'Doughnut' : 'Pie';\n      }\n      for (var _i = 0, _a = series[i].points; _i < _a.length; _i++) {\n        var point = _a[_i];\n        if (!isNullOrUndefined(point.x) && !isNullOrUndefined(point.y)) {\n          this.legendCollections.push(new LegendOptions(point.x.toString(), point.color, series[i].legendShape, point.visible, seriesType, point.legendImageUrl, null, null, point.index, series[i].index));\n        }\n      }\n      if (this.isReverse) {\n        this.legendCollections.reverse();\n      }\n    }\n  };\n  /**\n   * To find legend bounds for accumulation chart.\n   *\n   * @private\n   */\n  AccumulationLegend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    var extraWidth = 0;\n    var extraHeight = 0;\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var titlePlusArrowSpace = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = legend.enablePages ? 0 : this.arrowHeight;\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n    legendBounds.width += extraWidth;\n    legendBounds.height += extraHeight;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = 0;\n    var shapeWidth = legend.shapeWidth;\n    var rowWidth = 0;\n    var rowCount = 0;\n    var columnWidth = [];\n    var columnHeight = 0;\n    var legendWidth = 0;\n    var titleHeight = 0;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n    var legendEventArgs;\n    var render = false;\n    for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n      var legendOption = _a[_i];\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        name: 'legendRender',\n        cancel: false\n      };\n      this.chart.trigger('legendRender', legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text.indexOf('&') > -1 ? this.convertHtmlEntities(legendEventArgs.text) : legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n      if (legendOption.render && legendOption.text !== '') {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n        if (this.isVertical) {\n          ++rowCount;\n          columnHeight = rowCount * (this.maxItemHeight + padding) + padding + this.legendTitleSize.height + arrowHeight;\n          if (rowCount * (this.maxItemHeight + padding) + padding + arrowHeight > legendBounds.height) {\n            columnHeight = Math.max(columnHeight, rowCount * (this.maxItemHeight + padding) + padding + arrowHeight);\n            rowWidth = rowWidth + maximumWidth;\n            columnWidth.push(maximumWidth);\n            this.totalPages = Math.max(rowCount, this.totalPages || 1);\n            maximumWidth = 0;\n            rowCount = 1;\n          }\n          maximumWidth = Math.max(legendWidth, maximumWidth);\n        } else {\n          if (!legend.enablePages) {\n            // For new legend navigation support\n            titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n            titlePlusArrowSpace += arrowWidth;\n          }\n          rowWidth = rowWidth + legendWidth;\n          if (legendBounds.width < padding + rowWidth + titlePlusArrowSpace) {\n            maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - legendWidth);\n            if (rowCount === 0 && legendWidth !== rowWidth) {\n              rowCount = 1;\n            }\n            rowWidth = legendWidth;\n            rowCount++;\n            columnHeight = rowCount * (this.maxItemHeight + padding) + padding + this.legendTitleSize.height;\n          }\n        }\n      }\n    }\n    titleHeight = titlePosition === 'Top' ? this.legendTitleSize.height : 0;\n    if (this.isVertical) {\n      rowWidth = rowWidth + maximumWidth;\n      this.isPaging = legendBounds.width < rowWidth + padding;\n      columnHeight = Math.max(columnHeight, (this.totalPages || 1) * (this.maxItemHeight + padding) + padding + arrowHeight);\n      this.isPaging = this.isPaging && this.totalPages > 1;\n      if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n        columnWidth.push(maximumWidth);\n      }\n    } else {\n      this.isPaging = legendBounds.height < columnHeight;\n      columnHeight = !legend.enablePages && this.isPaging ? this.maxItemHeight + padding + padding + titleHeight : columnHeight;\n      this.totalPages = this.totalRowCount = rowCount;\n      columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleHeight);\n      if (!this.isPaging) {\n        // For title left and right position\n        rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n      }\n    }\n    this.maxColumns = 0; // initialization for max columns\n    var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) : Math.max(rowWidth + padding, maximumWidth);\n    if (render) {\n      // if any legends not skipped in event check\n      this.setBounds(width, columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  /**\n   * To find html entities value for legend\n   *\n   * @returns {string} converts the entities to normal string.\n   */\n  AccumulationLegend.prototype.convertHtmlEntities = function (legendText) {\n    var text = legendText.replace('&amp;', '&').replace('&lt;', '<').replace('&gt;', '>').replace('&quot;', '\"').replace('&nbsp;', ' ').replace('&cent;', '¢').replace('&pound;', '£').replace('&yen;', '¥').replace('&euro;', '€').replace('&copy;', '©').replace('&reg;', '®');\n    text = text.replace('&#38;', '&').replace('&#60;', '<').replace('&#62;', '>').replace('&#34;', '\"').replace('&#160;', ' ').replace('&#162;', '¢').replace('&#163;', '£').replace('&#165;', '¥').replace('&#8364;', '€').replace('&#169;', '©').replace('&#174;', '®');\n    return text;\n  };\n  /**\n   * To find maximum column size for legend\n   *\n   * @returns {number} Get a maximum columns.\n   */\n  AccumulationLegend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n    var maxPageColumn = padding;\n    this.maxColumnWidth = Math.max.apply(null, columns);\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      maxPageColumn += this.maxColumnWidth;\n      this.maxColumns++;\n      if (maxPageColumn + padding > width) {\n        maxPageColumn -= this.maxColumnWidth;\n        this.maxColumns--;\n        break;\n      }\n    }\n    this.isPaging = maxPageColumn < rowWidth && this.totalPages > 1;\n    if (maxPageColumn === padding) {\n      maxPageColumn = width;\n    }\n    this.maxColumns = Math.max(1, this.maxColumns);\n    this.maxWidth = maxPageColumn;\n    return maxPageColumn;\n  };\n  /**\n   * To find available width from legend x position.\n   *\n   * @returns {number} Get a available width.\n   */\n  AccumulationLegend.prototype.getAvailWidth = function (tx, width) {\n    if (this.isVertical) {\n      width = this.maxWidth;\n    }\n    return width - (this.legend.padding * 2 + this.legend.shapeWidth + this.legend.shapePadding);\n  };\n  /**\n   * To find legend rendering locations from legend options.\n   *\n   * @private\n   */\n  AccumulationLegend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var padding = this.legend.padding;\n    if (this.isVertical) {\n      if (count === firstLegend || prevLegend.location.y + this.maxItemHeight * 1.5 + padding * 2 > rect.y + rect.height) {\n        legendOption.location.x = prevLegend.location.x + (count === firstLegend ? 0 : !this.isRtlEnable ? this.maxColumnWidth : -this.maxColumnWidth);\n        legendOption.location.y = start.y;\n        var textStartLoc = this.legend.shapeWidth / 2 + padding;\n        this.pageXCollections.push(legendOption.location.x + (!this.isRtlEnable ? -textStartLoc : textStartLoc));\n        this.totalPages++;\n      } else {\n        legendOption.location.x = prevLegend.location.x;\n        legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n      }\n    } else {\n      var textWidth = textPadding + prevLegend.textSize.width;\n      var previousBound = prevLegend.location.x + (!this.isRtlEnable ? textWidth : -textWidth);\n      if (this.isWithinBounds(previousBound, legendOption.textSize.width + textPadding, rect, this.legend.shapeWidth / 2)) {\n        legendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.maxItemHeight + padding;\n        legendOption.location.x = start.x;\n      } else {\n        legendOption.location.y = prevLegend.location.y;\n        legendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      }\n      this.totalPages = this.totalRowCount;\n    }\n    var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n    legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n  };\n  /**\n  * check whether legend group within legend bounds or not.\n  *\n  */\n  AccumulationLegend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n    if (!this.isRtlEnable) {\n      return previousBound + textWidth > legendBounds.x + legendBounds.width + shapeWidth;\n    } else {\n      return previousBound - textWidth < legendBounds.x - shapeWidth;\n    }\n  };\n  /**\n   * finding the smart legend place according to positions.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationLegend.prototype.getSmartLegendLocation = function (labelBound, legendBound, margin) {\n    var space;\n    switch (this.position) {\n      case 'Left':\n        space = (labelBound.x - legendBound.width - margin.left) / 2;\n        legendBound.x = labelBound.x - legendBound.width < margin.left ? legendBound.x : labelBound.x - legendBound.width - space;\n        break;\n      case 'Right':\n        space = (this.chart.availableSize.width - margin.right - (labelBound.x + labelBound.width + legendBound.width)) / 2;\n        legendBound.x = labelBound.x + labelBound.width + legendBound.width > this.chart.availableSize.width - margin.right ? legendBound.x : labelBound.x + labelBound.width + space;\n        break;\n      case 'Top':\n        this.getTitleRect(this.chart);\n        space = (labelBound.y - legendBound.height - (this.titleRect.y + this.titleRect.height)) / 2;\n        legendBound.y = labelBound.y - legendBound.height < margin.top ? legendBound.y : labelBound.y - legendBound.height - space;\n        break;\n      case 'Bottom':\n        space = (this.chart.availableSize.height - margin.bottom - (labelBound.y + labelBound.height + legendBound.height)) / 2;\n        legendBound.y = labelBound.y + labelBound.height + legendBound.height > this.chart.availableSize.height - margin.bottom ? legendBound.y : labelBound.y + labelBound.height + space;\n        break;\n    }\n  };\n  /**\n   * To get title rect.\n   *\n   * @returns {void} Get a title rect.\n   */\n  AccumulationLegend.prototype.getTitleRect = function (accumulation) {\n    if (!accumulation.title) {\n      return null;\n    }\n    var titleSize = measureText(accumulation.title, accumulation.titleStyle);\n    this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n  };\n  /**\n   * To get legend by index\n   *\n   * @returns {LegendOptions} Return legend index.\n   */\n  AccumulationLegend.prototype.legendByIndex = function (index, legendCollections) {\n    for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n      var legend = legendCollections_1[_i];\n      if (legend.pointIndex === index) {\n        return legend;\n      }\n    }\n    return null;\n  };\n  /**\n   * To show or hide the legend on clicking the legend.\n   *\n   * @returns {void}\n   */\n  AccumulationLegend.prototype.click = function (event) {\n    var targetId = event.target.id;\n    var chart = this.chart;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_', this.legendID + '_shape_marker_'];\n    if (this.chart.accumulationSelectionModule) {\n      var selectedDataIndexes = extend([], this.chart.accumulationSelectionModule.selectedDataIndexes, null, true);\n    }\n    this.chart.animateSeries = false;\n    for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n      var id = legendItemsId_1[_i];\n      if (targetId.indexOf(id) > -1) {\n        var pointIndex = parseInt(targetId.split(id)[1], 10);\n        if (this.chart.legendSettings.toggleVisibility && !isNaN(pointIndex)) {\n          var currentSeries = this.chart.visibleSeries[0];\n          var point = pointByIndex(pointIndex, currentSeries.points);\n          var legendOption = this.legendByIndex(pointIndex, this.legendCollections);\n          point.visible = !point.visible;\n          legendOption.visible = point.visible;\n          currentSeries.sumOfPoints += point.visible ? point.y : -point.y;\n          chart.redraw = chart.enableAnimation;\n          this.sliceVisibility(pointIndex, point.visible);\n          chart.removeSvg();\n          //To remove the blazor templates\n          blazorTemplatesReset(chart);\n          this.chart.refreshPoints(currentSeries.points);\n          this.chart.renderElements();\n        } else if (this.chart.accumulationSelectionModule && !isNaN(pointIndex)) {\n          this.chart.accumulationSelectionModule.legendSelection(this.chart, 0, pointIndex, event);\n        } else if (this.chart.accumulationHighlightModule && !isNaN(pointIndex)) {\n          this.chart.accumulationHighlightModule.legendSelection(this.chart, 0, pointIndex, event);\n        }\n      }\n    }\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n    chart.redraw = false;\n  };\n  /**\n   * To translate the point elements by index and position\n   */\n  AccumulationLegend.prototype.sliceVisibility = function (index, isVisible) {\n    var sliceId = this.chart.element.id + '_Series_0_Point_';\n    if (this.chart.visibleSeries[0].dataLabel.visible) {\n      sliceId = this.chart.element.id + '_datalabel_Series_0_';\n      this.sliceAnimate(getElement(sliceId + 'g_' + index), isVisible);\n    }\n  };\n  /**\n   * Slice animation\n   *\n   * @param {Element} element slice element.\n   * @param {boolean} isVisible boolean value of slice.\n   * @returns {void} slice animation method.\n   */\n  AccumulationLegend.prototype.sliceAnimate = function (element, isVisible) {\n    if (!element) {\n      return null;\n    }\n    new Animation({}).animate(element, {\n      duration: 300,\n      delay: 0,\n      name: isVisible ? 'FadeIn' : 'FadeOut',\n      end: function (args) {\n        args.element.style.visibility = isVisible ? 'visible' : 'hidden';\n      }\n    });\n  };\n  /**\n   * Get module name\n   *\n   * @returns {string} Return module name.\n   */\n  AccumulationLegend.prototype.getModuleName = function () {\n    return 'AccumulationLegend';\n  };\n  /**\n   * To destroy the Legend.\n   *\n   * @returns {void}\n   * @private\n   */\n  AccumulationLegend.prototype.destroy = function () {\n    /**\n     * Destroy method calling here\n     */\n    this.removeEventListener();\n  };\n  return AccumulationLegend;\n}(BaseLegend);\nexport { AccumulationLegend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","extend","Browser","isNullOrUndefined","Animation","pointByIndex","BaseLegend","LegendOptions","Rect","measureText","textTrim","getElement","blazorTemplatesReset","AccumulationLegend","_super","chart","_this","call","library","titleRect","margin","top","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","click","touchEndEvent","mouseEnd","removeEventListener","off","e","legendSettings","visible","isTouch","accumulationHighlightModule","highlightMode","move","getLegendOptions","series","legendCollections","isRtlEnable","enableRtl","isReverse","reverse","i","seriesType","type","innerRadius","_i","_a","points","length","point","x","y","push","toString","color","legendShape","legendImageUrl","index","getLegendBounds","availableSize","legendBounds","legend","calculateLegendTitle","isTitle","title","extraWidth","extraHeight","padding","titlePosition","titlePlusArrowSpace","arrowWidth","arrowHeight","enablePages","isVertical","height","width","shapePadding","maximumWidth","shapeWidth","rowWidth","rowCount","columnWidth","columnHeight","legendWidth","titleHeight","maxItemHeight","Math","max","textStyle","shapeHeight","legendEventArgs","render","legendOption","fill","text","shape","name","cancel","trigger","indexOf","convertHtmlEntities","textSize","legendTitleSize","totalPages","fivePixel","isPaging","totalRowCount","maxColumns","getMaxColumn","setBounds","legendText","replace","columns","maxPageColumn","maxColumnWidth","apply","columns_1","column","maxWidth","getAvailWidth","tx","getRenderPoint","start","textPadding","prevLegend","rect","count","firstLegend","location","textStartLoc","pageXCollections","textWidth","previousBound","isWithinBounds","availablewidth","toFixed","getSmartLegendLocation","labelBound","legendBound","space","position","left","right","getTitleRect","bottom","accumulation","titleSize","titleStyle","legendByIndex","legendCollections_1","pointIndex","event","targetId","target","id","legendItemsId","legendID","accumulationSelectionModule","selectedDataIndexes","animateSeries","legendItemsId_1","parseInt","split","toggleVisibility","isNaN","currentSeries","visibleSeries","sumOfPoints","redraw","enableAnimation","sliceVisibility","removeSvg","refreshPoints","renderElements","legendSelection","changePage","isVisible","sliceId","element","dataLabel","sliceAnimate","animate","duration","delay","end","args","style","visibility","getModuleName","destroy"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-charts/src/accumulation-chart/renderer/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable valid-jsdoc */\n/**\n * AccumulationChart legend\n */\nimport { extend, Browser, isNullOrUndefined, Animation } from '@syncfusion/ej2-base';\nimport { pointByIndex } from '../model/acc-base';\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { textTrim, getElement, blazorTemplatesReset } from '../../common/utils/helper';\n/**\n * AccumulationLegend module used to render `Legend` for Accumulation chart.\n */\nvar AccumulationLegend = /** @class */ (function (_super) {\n    __extends(AccumulationLegend, _super);\n    /**\n     * Constructor for Accumulation Legend.\n     *\n     * @param {AccumulationChart} chart Get a chart as a parameter.\n     */\n    function AccumulationLegend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.titleRect = new Rect(0, chart.margin.top, 0, 0);\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n    * Binding events for legend module.\n    */\n    AccumulationLegend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n    * UnBinding events for legend module.\n    */\n    AccumulationLegend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n    * To handle mosue move for legend module\n    */\n    AccumulationLegend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            if (this.chart.accumulationHighlightModule && this.chart.highlightMode !== 'None') {\n                this.click(e);\n            }\n        }\n    };\n    /**\n    * To handle mosue end for legend module\n    */\n    AccumulationLegend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     *\n     * @returns {void} Legend options.\n     * @private\n     */\n    AccumulationLegend.prototype.getLegendOptions = function (chart, series) {\n        this.legendCollections = [];\n        this.isRtlEnable = chart.enableRtl;\n        this.isReverse = !this.isRtlEnable && chart.legendSettings.reverse;\n        for (var i = 0; i < 1; i++) {\n            var seriesType = series[i].type;\n            if (seriesType === 'Pie' || seriesType === 'Doughnut') {\n                seriesType = (series[i].innerRadius !== '0' && series[i].innerRadius !== '0%') ?\n                    'Doughnut' : 'Pie';\n            }\n            for (var _i = 0, _a = series[i].points; _i < _a.length; _i++) {\n                var point = _a[_i];\n                if (!isNullOrUndefined(point.x) && !isNullOrUndefined(point.y)) {\n                    this.legendCollections.push(new LegendOptions(point.x.toString(), point.color, series[i].legendShape, point.visible, seriesType, point.legendImageUrl, null, null, point.index, series[i].index));\n                }\n            }\n            if (this.isReverse) {\n                this.legendCollections.reverse();\n            }\n        }\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @private\n     */\n    AccumulationLegend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var titlePlusArrowSpace = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = legend.enablePages ? 0 : this.arrowHeight;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = 0;\n        var shapeWidth = legend.shapeWidth;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        var titleHeight = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = { fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false };\n            this.chart.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = ((legendEventArgs.text.indexOf('&') > -1) ?\n                this.convertHtmlEntities(legendEventArgs.text) : legendEventArgs.text);\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + this.legendTitleSize.height + arrowHeight;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding + arrowHeight > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding + arrowHeight);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    if (!legend.enablePages) { // For new legend navigation support\n                        titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                        titlePlusArrowSpace += arrowWidth;\n                    }\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + this.legendTitleSize.height;\n                    }\n                }\n            }\n        }\n        titleHeight = titlePosition === 'Top' ? this.legendTitleSize.height : 0;\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding + arrowHeight);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            columnHeight = !legend.enablePages && this.isPaging ? (this.maxItemHeight + padding) + padding + titleHeight : columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleHeight);\n            if (!this.isPaging) { // For title left and right position\n                rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n            }\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * To find html entities value for legend\n     *\n     * @returns {string} converts the entities to normal string.\n     */\n    AccumulationLegend.prototype.convertHtmlEntities = function (legendText) {\n        var text = (legendText).replace('&amp;', '&').replace('&lt;', '<').replace('&gt;', '>').replace('&quot;', '\"').replace('&nbsp;', ' ').replace('&cent;', '¢').replace('&pound;', '£').replace('&yen;', '¥').replace('&euro;', '€').replace('&copy;', '©').replace('&reg;', '®');\n        text = (text).replace('&#38;', '&').replace('&#60;', '<').replace('&#62;', '>').replace('&#34;', '\"').replace('&#160;', ' ').\n            replace('&#162;', '¢').replace('&#163;', '£').replace('&#165;', '¥').replace('&#8364;', '€').replace('&#169;', '©').replace('&#174;', '®');\n        return text;\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @returns {number} Get a maximum columns.\n     */\n    AccumulationLegend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @returns {number} Get a available width.\n     */\n    AccumulationLegend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @private\n     */\n    AccumulationLegend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.isRtlEnable) ? this.maxColumnWidth : -this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.isRtlEnable) ? -textStartLoc : textStartLoc));\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var textWidth = textPadding + prevLegend.textSize.width;\n            var previousBound = prevLegend.location.x + ((!this.isRtlEnable) ? textWidth : -textWidth);\n            if (this.isWithinBounds(previousBound, legendOption.textSize.width + textPadding, rect, this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /**\n    * check whether legend group within legend bounds or not.\n    *\n    */\n    AccumulationLegend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.isRtlEnable) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * finding the smart legend place according to positions.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationLegend.prototype.getSmartLegendLocation = function (labelBound, legendBound, margin) {\n        var space;\n        switch (this.position) {\n            case 'Left':\n                space = ((labelBound.x - legendBound.width) - margin.left) / 2;\n                legendBound.x = (labelBound.x - legendBound.width) < margin.left ? legendBound.x :\n                    (labelBound.x - legendBound.width) - space;\n                break;\n            case 'Right':\n                space = ((this.chart.availableSize.width - margin.right) - (labelBound.x + labelBound.width + legendBound.width)) / 2;\n                legendBound.x = (labelBound.x + labelBound.width + legendBound.width) > (this.chart.availableSize.width - margin.right) ?\n                    legendBound.x : (labelBound.x + labelBound.width + space);\n                break;\n            case 'Top':\n                this.getTitleRect(this.chart);\n                space = ((labelBound.y - legendBound.height) - (this.titleRect.y + this.titleRect.height)) / 2;\n                legendBound.y = (labelBound.y - legendBound.height) < margin.top ? legendBound.y :\n                    (labelBound.y - legendBound.height) - space;\n                break;\n            case 'Bottom':\n                space = ((this.chart.availableSize.height - margin.bottom) - (labelBound.y + labelBound.height + legendBound.height)) / 2;\n                legendBound.y = labelBound.y + labelBound.height + legendBound.height > (this.chart.availableSize.height - margin.bottom) ?\n                    legendBound.y : (labelBound.y + labelBound.height) + space;\n                break;\n        }\n    };\n    /**\n     * To get title rect.\n     *\n     * @returns {void} Get a title rect.\n     */\n    AccumulationLegend.prototype.getTitleRect = function (accumulation) {\n        if (!accumulation.title) {\n            return null;\n        }\n        var titleSize = measureText(accumulation.title, accumulation.titleStyle);\n        this.titleRect = new Rect(accumulation.availableSize.width / 2 - titleSize.width / 2, accumulation.margin.top, titleSize.width, titleSize.height);\n    };\n    /**\n     * To get legend by index\n     *\n     * @returns {LegendOptions} Return legend index.\n     */\n    AccumulationLegend.prototype.legendByIndex = function (index, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.pointIndex === index) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    AccumulationLegend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var chart = this.chart;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_', this.legendID + '_shape_marker_'];\n        if (this.chart.accumulationSelectionModule) {\n            var selectedDataIndexes = extend([], this.chart.accumulationSelectionModule.selectedDataIndexes, null, true);\n        }\n        this.chart.animateSeries = false;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n            var id = legendItemsId_1[_i];\n            if (targetId.indexOf(id) > -1) {\n                var pointIndex = parseInt(targetId.split(id)[1], 10);\n                if (this.chart.legendSettings.toggleVisibility && !isNaN(pointIndex)) {\n                    var currentSeries = this.chart.visibleSeries[0];\n                    var point = pointByIndex(pointIndex, currentSeries.points);\n                    var legendOption = this.legendByIndex(pointIndex, this.legendCollections);\n                    point.visible = !point.visible;\n                    legendOption.visible = point.visible;\n                    currentSeries.sumOfPoints += point.visible ? point.y : -point.y;\n                    chart.redraw = chart.enableAnimation;\n                    this.sliceVisibility(pointIndex, point.visible);\n                    chart.removeSvg();\n                    //To remove the blazor templates\n                    blazorTemplatesReset(chart);\n                    this.chart.refreshPoints(currentSeries.points);\n                    this.chart.renderElements();\n                }\n                else if (this.chart.accumulationSelectionModule && !isNaN(pointIndex)) {\n                    this.chart.accumulationSelectionModule.legendSelection(this.chart, 0, pointIndex, event);\n                }\n                else if (this.chart.accumulationHighlightModule && !isNaN(pointIndex)) {\n                    this.chart.accumulationHighlightModule.legendSelection(this.chart, 0, pointIndex, event);\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        chart.redraw = false;\n    };\n    /**\n     * To translate the point elements by index and position\n     */\n    AccumulationLegend.prototype.sliceVisibility = function (index, isVisible) {\n        var sliceId = this.chart.element.id + '_Series_0_Point_';\n        if (this.chart.visibleSeries[0].dataLabel.visible) {\n            sliceId = this.chart.element.id + '_datalabel_Series_0_';\n            this.sliceAnimate(getElement(sliceId + 'g_' + index), isVisible);\n        }\n    };\n    /**\n     * Slice animation\n     *\n     * @param {Element} element slice element.\n     * @param {boolean} isVisible boolean value of slice.\n     * @returns {void} slice animation method.\n     */\n    AccumulationLegend.prototype.sliceAnimate = function (element, isVisible) {\n        if (!element) {\n            return null;\n        }\n        new Animation({}).animate(element, {\n            duration: 300,\n            delay: 0,\n            name: isVisible ? 'FadeIn' : 'FadeOut',\n            end: function (args) {\n                args.element.style.visibility = isVisible ? 'visible' : 'hidden';\n            }\n        });\n    };\n    /**\n     * Get module name\n     *\n     * @returns {string} Return module name.\n     */\n    AccumulationLegend.prototype.getModuleName = function () {\n        return 'AccumulationLegend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    AccumulationLegend.prototype.destroy = function () {\n        /**\n         * Destroy method calling here\n         */\n        this.removeEventListener();\n    };\n    return AccumulationLegend;\n}(BaseLegend));\nexport { AccumulationLegend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}