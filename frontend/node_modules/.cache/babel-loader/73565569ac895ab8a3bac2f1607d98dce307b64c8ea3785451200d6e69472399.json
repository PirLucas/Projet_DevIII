{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { getPoint, withInRange, ChartLocation, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `AreaSeries` module is used to render the area series.\n */\nvar AreaSeries = /** @class */function (_super) {\n  __extends(AreaSeries, _super);\n  function AreaSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render Area series.\n   *\n   * @returns {void}\n   * @private\n   */\n  AreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var startPoint = null;\n    var direction = '';\n    var isPolar = series.chart && series.chart.chartAreaType === 'PolarRadar';\n    var origin = Math.max(series.yAxis.visibleRange.min, 0);\n    if (isPolar) {\n      var connectPoints = this.getFirstLastVisiblePoint(series.points);\n      origin = connectPoints.first.yValue;\n    }\n    var currentXValue;\n    var isDropMode = series.emptyPointSettings && series.emptyPointSettings.mode === 'Drop';\n    var borderWidth = series.border ? series.border.width : 0;\n    var borderColor = series.border ? series.border.color : 'transparent';\n    var getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n    var visiblePoints = this.enableComplexProperty(series);\n    var point;\n    for (var i = 0; i < visiblePoints.length; i++) {\n      point = visiblePoints[i];\n      currentXValue = point.xValue;\n      point.symbolLocations = [];\n      point.regions = [];\n      if (point.visible && withInRange(visiblePoints[i - 1], point, visiblePoints[i + 1], series)) {\n        direction += this.getAreaPathDirection(currentXValue, origin, series, isInverted, getCoordinate, startPoint, 'M');\n        startPoint = startPoint || new ChartLocation(currentXValue, origin);\n        // First Point to draw the area path\n        direction += this.getAreaPathDirection(currentXValue, point.yValue, series, isInverted, getCoordinate, null, 'L');\n        if (visiblePoints[i + 1] && !visiblePoints[i + 1].visible && (!isPolar || isPolar && this.withinYRange(visiblePoints[i + 1], yAxis)) && !isDropMode) {\n          direction += this.getAreaEmptyDirection({\n            'x': currentXValue,\n            'y': origin\n          }, startPoint, series, isInverted, getCoordinate);\n          startPoint = null;\n        }\n        this.storePointLocation(point, series, isInverted, getCoordinate);\n      }\n    }\n    if (isPolar && direction !== '') {\n      var endPoint = '';\n      var chart = this.chart;\n      endPoint += this.getAreaPathDirection(0, origin, series, isInverted, getCoordinate, null, 'L');\n      if (xAxis.isAxisInverse || yAxis.isAxisInverse) {\n        direction += series.type === 'Polar' ? chart.polarSeriesModule.getPolarIsInversedPath(xAxis, endPoint) : chart.radarSeriesModule.getRadarIsInversedPath(xAxis, endPoint);\n      }\n      direction = direction.concat(direction + ' ' + 'Z');\n    }\n    this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, borderWidth, borderColor, series.opacity, series.dashArray, series.points.length > 1 && direction !== '' ? direction + this.getAreaPathDirection(series.points[series.points.length - 1].xValue, series.chart.chartAreaType === 'PolarRadar' ? series.points[series.points.length - 1].yValue : origin, series, isInverted, getCoordinate, null, 'L') : ''), series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * To destroy the area series.\n   *\n   * @returns {void}\n   * @private\n   */\n  AreaSeries.prototype.destroy = function () {\n    /**\n     * Destroy method calling here\n     */\n  };\n  /**\n   * Get module name\n   */\n  AreaSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'AreaSeries';\n  };\n  /**\n   * Animates the series.\n   *\n   * @param  {Series} series - Defines the series to animate.\n   * @returns {void}\n   */\n  AreaSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n  return AreaSeries;\n}(MultiColoredSeries);\nexport { AreaSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getPoint","withInRange","ChartLocation","TransformToVisible","PathOption","MultiColoredSeries","AreaSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","startPoint","direction","isPolar","chart","chartAreaType","origin","Math","max","visibleRange","min","connectPoints","getFirstLastVisiblePoint","points","first","yValue","currentXValue","isDropMode","emptyPointSettings","mode","borderWidth","border","width","borderColor","color","getCoordinate","visiblePoints","enableComplexProperty","point","i","length","xValue","symbolLocations","regions","visible","getAreaPathDirection","withinYRange","getAreaEmptyDirection","storePointLocation","endPoint","isAxisInverse","type","polarSeriesModule","getPolarIsInversedPath","radarSeriesModule","getRadarIsInversedPath","concat","appendLinePath","element","id","index","interior","opacity","dashArray","renderMarker","destroy","getModuleName","doAnimation","option","animation","doLinearAnimation"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-charts/src/chart/series/area-series.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\nimport { getPoint, withInRange, ChartLocation, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `AreaSeries` module is used to render the area series.\n */\nvar AreaSeries = /** @class */ (function (_super) {\n    __extends(AreaSeries, _super);\n    function AreaSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render Area series.\n     *\n     * @returns {void}\n     * @private\n     */\n    AreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var startPoint = null;\n        var direction = '';\n        var isPolar = (series.chart && series.chart.chartAreaType === 'PolarRadar');\n        var origin = Math.max(series.yAxis.visibleRange.min, 0);\n        if (isPolar) {\n            var connectPoints = this.getFirstLastVisiblePoint(series.points);\n            origin = connectPoints.first.yValue;\n        }\n        var currentXValue;\n        var isDropMode = (series.emptyPointSettings && series.emptyPointSettings.mode === 'Drop');\n        var borderWidth = series.border ? series.border.width : 0;\n        var borderColor = series.border ? series.border.color : 'transparent';\n        var getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        var visiblePoints = this.enableComplexProperty(series);\n        var point;\n        for (var i = 0; i < visiblePoints.length; i++) {\n            point = visiblePoints[i];\n            currentXValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[i - 1], point, visiblePoints[i + 1], series)) {\n                direction += this.getAreaPathDirection(currentXValue, origin, series, isInverted, getCoordinate, startPoint, 'M');\n                startPoint = startPoint || new ChartLocation(currentXValue, origin);\n                // First Point to draw the area path\n                direction += this.getAreaPathDirection(currentXValue, point.yValue, series, isInverted, getCoordinate, null, 'L');\n                if (visiblePoints[i + 1] && (!visiblePoints[i + 1].visible &&\n                    (!isPolar || (isPolar && this.withinYRange(visiblePoints[i + 1], yAxis)))) && !isDropMode) {\n                    direction += this.getAreaEmptyDirection({ 'x': currentXValue, 'y': origin }, startPoint, series, isInverted, getCoordinate);\n                    startPoint = null;\n                }\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n        }\n        if (isPolar && direction !== '') {\n            var endPoint = '';\n            var chart = this.chart;\n            endPoint += this.getAreaPathDirection(0, origin, series, isInverted, getCoordinate, null, 'L');\n            if (xAxis.isAxisInverse || yAxis.isAxisInverse) {\n                direction += (series.type === 'Polar' ? chart.polarSeriesModule.getPolarIsInversedPath(xAxis, endPoint) :\n                    chart.radarSeriesModule.getRadarIsInversedPath(xAxis, endPoint));\n            }\n            direction = direction.concat(direction + ' ' + 'Z');\n        }\n        this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, borderWidth, borderColor, series.opacity, series.dashArray, ((series.points.length > 1 && direction !== '') ? (direction + this.getAreaPathDirection(series.points[series.points.length - 1].xValue, series.chart.chartAreaType === 'PolarRadar' ?\n            series.points[series.points.length - 1].yValue : origin, series, isInverted, getCoordinate, null, 'L')) : '')), series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * To destroy the area series.\n     *\n     * @returns {void}\n     * @private\n     */\n    AreaSeries.prototype.destroy = function () {\n        /**\n         * Destroy method calling here\n         */\n    };\n    /**\n     * Get module name\n     */\n    AreaSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'AreaSeries';\n    };\n    /**\n     * Animates the series.\n     *\n     * @param  {Series} series - Defines the series to animate.\n     * @returns {void}\n     */\n    AreaSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    return AreaSeries;\n}(MultiColoredSeries));\nexport { AreaSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}