{"ast":null,"code":"var _jsxFileName = \"D:\\\\USPERSO IMPLEMENTATION\\\\Projet_DevIII\\\\frontend\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport AddEventModal from \"./AddEventModal\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [events, setEvents] = useState([]);\n  const calendarRef = useRef(null);\n  useEffect(() => {\n    handleDatesSet();\n  }, [events]);\n  const onEventAdded = event => {\n    let calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent({\n      clientID: event.extendedProps.clientID,\n      title: event.title,\n      start: moment(event.start).toDate(),\n      end: moment(event.end).toDate()\n    });\n    handleDatesSet();\n  };\n  async function handleEventAdd(data) {\n    try {\n      const eventData = {\n        clientID: data.extendedProps.clientID,\n        // Access clientID from extendedProps\n        title: data.title,\n        start: moment(data.start).format('YYYY-MM-DD HH:mm:ss'),\n        // Format start datetime\n        end: moment(data.end).format('YYYY-MM-DD HH:mm:ss') // Format end datetime\n      };\n\n      const response = await fetch(\"http://localhost:3006/rendezvous/api/calendar/create-event\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(eventData)\n      });\n      console.log(JSON.stringify(eventData));\n      if (!response.ok) {\n        setEvents([...events, eventData]);\n        const error = await response.json();\n        console.error(\"Error adding event:\", error);\n      }\n    } catch (error) {\n      console.error(\"Error in handleEventAdd:\", error);\n    }\n  }\n  async function handleDatesSet(data) {\n    try {\n      const start = moment(data.start).toISOString();\n      const end = moment(data.end).toISOString();\n      const response = await fetch(`http://localhost:3006/rendezvous/api/calendar/get-events?rdvStart=${start}&rdvEnd=${end}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n        }\n      });\n      if (response.ok) {\n        const events = await response.json();\n        const parsedEvents = events.result.map(event => ({\n          clientID: event.clientID,\n          title: event.title,\n          start: moment(event.rdvStart).toDate(),\n          end: moment(event.rdvEnd).toDate()\n        }));\n        setEvents(parsedEvents);\n      } else {\n        console.error(\"Error getting events:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error in handleDatesSet:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"15px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setModalOpen(true),\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        headerToolbar: {\n          end: \"dayGridMonth dayGridWeek dayGridDay today prev next\"\n        },\n        ref: calendarRef,\n        events: events,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        views: [\"dayGridMonth\", \"dayGridWeek\", \"dayGridDay\"],\n        eventAdd: event => handleEventAdd(event.event),\n        datesSet: date => handleDatesSet(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"BdqOeWZ+ooCkLCsrIUx3iHJM4hk=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useRef","useState","useEffect","FullCalendar","dayGridPlugin","AddEventModal","moment","jsxDEV","_jsxDEV","Calendar","_s","modalOpen","setModalOpen","events","setEvents","calendarRef","handleDatesSet","onEventAdded","event","calendarApi","current","getApi","addEvent","clientID","extendedProps","title","start","toDate","end","handleEventAdd","data","eventData","format","response","fetch","method","headers","body","JSON","stringify","console","log","ok","error","json","toISOString","parsedEvents","result","map","rdvStart","rdvEnd","statusText","children","style","margin","onClick","fileName","_jsxFileName","lineNumber","columnNumber","position","zIndex","headerToolbar","ref","plugins","initialView","views","eventAdd","datesSet","date","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/src/components/Calendar.jsx"],"sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport AddEventModal from \"./AddEventModal\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nfunction Calendar() {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [events, setEvents] = useState([])\r\n    const calendarRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        handleDatesSet();\r\n    }, [events]);\r\n\r\n    const onEventAdded = event => {\r\n        let calendarApi = calendarRef.current.getApi();\r\n        calendarApi.addEvent({\r\n            clientID: event.extendedProps.clientID,\r\n            title: event.title,\r\n            start: moment(event.start).toDate(),\r\n            end: moment(event.end).toDate()\r\n            \r\n        });\r\n\r\n        handleDatesSet();\r\n    };\r\n\r\n    async function handleEventAdd(data) {\r\n        try {\r\n            const eventData = {\r\n                clientID: data.extendedProps.clientID, // Access clientID from extendedProps\r\n                title: data.title,\r\n                start: moment(data.start).format('YYYY-MM-DD HH:mm:ss'), // Format start datetime\r\n                end: moment(data.end).format('YYYY-MM-DD HH:mm:ss'), // Format end datetime\r\n              };\r\n            const response = await fetch(\"http://localhost:3006/rendezvous/api/calendar/create-event\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(eventData),\r\n            });\r\n            console.log(JSON.stringify(eventData));\r\n\r\n            if (!response.ok) {\r\n                setEvents([...events, eventData]);\r\n                const error = await response.json();\r\n                console.error(\"Error adding event:\", error);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in handleEventAdd:\", error);\r\n        }\r\n    }\r\n    \r\n    async function handleDatesSet(data) {\r\n        try {\r\n            const start = moment(data.start).toISOString();\r\n            const end = moment(data.end).toISOString();\r\n            const response = await fetch(`http://localhost:3006/rendezvous/api/calendar/get-events?rdvStart=${start}&rdvEnd=${end}`, { \r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\r\n                }\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const events = await response.json();\r\n                const parsedEvents = events.result.map((event) => ({\r\n                    clientID: event.clientID,\r\n                    title: event.title,\r\n                    start: moment(event.rdvStart).toDate(),\r\n                    end: moment(event.rdvEnd).toDate()\r\n                  }));\r\n                setEvents(parsedEvents);\r\n            } else {\r\n                console.error(\"Error getting events:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in handleDatesSet:\", error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section>\r\n            <div style={{margin: \"15px\"}}>\r\n            <button onClick={() => setModalOpen(true)}>Add Event</button>\r\n            </div>\r\n                <div style={{position: \"relative\", zIndex: 0}}>\r\n                    <FullCalendar\r\n                        headerToolbar={{\r\n                            end: \"dayGridMonth dayGridWeek dayGridDay today prev next\",\r\n                        }}\r\n                        ref={calendarRef}\r\n                        events={events}\r\n                        plugins={[ dayGridPlugin ]}\r\n                        initialView=\"dayGridMonth\"\r\n                        views={[\"dayGridMonth\", \"dayGridWeek\", \"dayGridDay\"]}\r\n                        eventAdd={event => handleEventAdd(event.event)}\r\n                        datesSet={(date) => handleDatesSet(date)}\r\n                    />\r\n                </div>\r\n\r\n            <AddEventModal isOpen={modalOpen}\r\n                           onClose={() => setModalOpen(false)}\r\n                           onEventAdded={event => onEventAdded(event)}\r\n            />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}