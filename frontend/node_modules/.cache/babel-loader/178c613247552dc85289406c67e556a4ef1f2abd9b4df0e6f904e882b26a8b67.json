{"ast":null,"code":"import { isNullOrUndefined as isNOU, detach, Browser } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * `EnterKey` module is used to handle enter key press actions.\n */\nvar EnterKeyAction = /** @class */function () {\n  function EnterKeyAction(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  EnterKeyAction.prototype.addEventListener = function () {\n    this.parent.on(events.enterHandler, this.enterHandler, this);\n    this.parent.on(events.destroy, this.destroy, this);\n  };\n  EnterKeyAction.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  EnterKeyAction.prototype.removeEventListener = function () {\n    this.parent.off(events.enterHandler, this.enterHandler);\n    this.parent.off(events.destroy, this.destroy);\n  };\n  EnterKeyAction.prototype.getRangeNode = function () {\n    this.range = this.parent.getRange();\n    this.startNode = this.range.startContainer.nodeName === '#text' ? this.range.startContainer.parentElement : this.range.startContainer;\n    this.endNode = this.range.endContainer.nodeName === '#text' ? this.range.endContainer.parentElement : this.range.endContainer;\n  };\n  EnterKeyAction.prototype.enterHandler = function (e) {\n    var _this = this;\n    this.getRangeNode();\n    var isTableEnter = true;\n    if (!isNOU(this.startNode.closest('TABLE')) && !isNOU(this.endNode.closest('TABLE'))) {\n      isTableEnter = false;\n      var curElement = this.startNode;\n      var blockElement = curElement;\n      while (!this.parent.formatter.editorManager.domNode.isBlockNode(curElement)) {\n        blockElement = curElement;\n        curElement = curElement.parentElement;\n      }\n      isTableEnter = blockElement.tagName === 'TD' ? false : true;\n    }\n    if (e.args.which === 13 && e.args.code === 'Enter') {\n      if (isNOU(this.startNode.closest('LI')) && isNOU(this.endNode.closest('LI')) && isTableEnter && isNOU(this.startNode.closest('PRE')) && isNOU(this.endNode.closest('PRE'))) {\n        var shiftKey_1 = e.args.shiftKey;\n        var actionBeginArgs = {\n          cancel: false,\n          name: events.actionBegin,\n          requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n          originalEvent: e.args\n        };\n        this.parent.trigger(events.actionBegin, actionBeginArgs, function (actionBeginArgs) {\n          if (!actionBeginArgs.cancel) {\n            if (!(_this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.range.endContainer)) {\n              _this.range.deleteContents();\n              if (_this.range.startContainer.nodeName === '#text' && _this.range.startContainer.textContent.length === 0 && _this.range.startContainer.parentElement !== _this.parent.inputElement) {\n                if (_this.parent.enterKey === 'BR') {\n                  _this.range.startContainer.parentElement.innerHTML = '&#8203;';\n                } else {\n                  _this.range.startContainer.parentElement.innerHTML = '<br>';\n                }\n              } else if (_this.range.startContainer === _this.parent.inputElement && _this.range.startContainer.innerHTML === '') {\n                _this.range.startContainer.innerHTML = '<br>';\n                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, 0);\n              } else if (_this.parent.inputElement === _this.range.startContainer) {\n                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                if (focusElem.nodeName === '#text' && focusElem.textContent.length === 0) {\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.previousSibling.textContent.length);\n                } else {\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.textContent.length >= 0 ? 0 : 1);\n                  if (focusElem.previousSibling.textContent.length === 0) {\n                    detach(focusElem.previousSibling);\n                  } else if (focusElem.textContent.length === 0) {\n                    var currentFocusElem = focusElem.previousSibling.lastChild;\n                    while (currentFocusElem.nodeName !== '#text') {\n                      currentFocusElem = currentFocusElem.lastChild;\n                    }\n                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, currentFocusElem.textContent.length);\n                    detach(focusElem);\n                  } else if (_this.parent.enterKey !== 'BR' && focusElem.previousSibling.textContent.length !== 0 && focusElem.textContent.length !== 0) {\n                    e.args.preventDefault();\n                    return;\n                  }\n                }\n                _this.getRangeNode();\n              }\n            }\n            if (_this.range.startContainer === _this.range.endContainer && _this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.parent.inputElement) {\n              _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.range.startContainer.childNodes[_this.range.startOffset], 0);\n              _this.getRangeNode();\n            }\n            if (_this.parent.enterKey === 'P' && !shiftKey_1 || _this.parent.enterKey === 'DIV' && !shiftKey_1 || _this.parent.shiftEnterKey === 'P' && shiftKey_1 || _this.parent.shiftEnterKey === 'DIV' && shiftKey_1) {\n              var nearBlockNode = void 0;\n              if (isTableEnter && _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                nearBlockNode = _this.startNode;\n              } else {\n                nearBlockNode = _this.parent.formatter.editorManager.domNode.blockParentNode(_this.startNode);\n              }\n              var isImageNode = false;\n              var isFocusedFirst = false;\n              if (_this.range.startOffset != 0 && _this.range.endOffset != 0 && _this.range.startContainer === _this.range.endContainer && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                var startNodeText = _this.range.startContainer.textContent;\n                var splitFirstText = startNodeText.substring(0, _this.range.startOffset);\n                if (splitFirstText.charCodeAt(_this.range.startOffset - 1) != 160 && splitFirstText.trim().length === 0) {\n                  isFocusedFirst = true;\n                }\n              } else if (_this.range.startOffset === 0 && _this.range.endOffset === 0) {\n                isFocusedFirst = true;\n              }\n              _this.removeBRElement(nearBlockNode);\n              if ((_this.range.startOffset === 0 && _this.range.endOffset === 0 || isFocusedFirst) && !(!isNOU(_this.range.startContainer.previousSibling) && (_this.range.startContainer.previousSibling.nodeName === 'IMG' || _this.range.startContainer.previousSibling.nodeName === 'BR'))) {\n                var isNearBlockLengthZero = void 0;\n                var newElem = void 0;\n                if (_this.range.startContainer.nodeName === 'IMG') {\n                  newElem = _this.createInsertElement(shiftKey_1);\n                  isImageNode = true;\n                  isNearBlockLengthZero = false;\n                } else {\n                  if (nearBlockNode.textContent.trim().length !== 0) {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                    isNearBlockLengthZero = false;\n                  } else {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true).cloneNode(true);\n                    isNearBlockLengthZero = true;\n                  }\n                }\n                var insertElem = _this.createInsertElement(shiftKey_1);\n                while (newElem.firstChild) {\n                  insertElem.appendChild(newElem.firstChild);\n                }\n                nearBlockNode.parentElement.insertBefore(insertElem, nearBlockNode);\n                if (!isNearBlockLengthZero) {\n                  var currentFocusElem = insertElem;\n                  var finalFocusElem = void 0;\n                  while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                    finalFocusElem = currentFocusElem;\n                    currentFocusElem = currentFocusElem.lastChild;\n                  }\n                  finalFocusElem.innerHTML = '<br>';\n                  if (!isImageNode) {\n                    detach(nearBlockNode);\n                  }\n                }\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem.nextElementSibling, 0);\n              } else if (nearBlockNode.textContent.length === 0 && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                if (!isNOU(nearBlockNode.children[0]) && nearBlockNode.children[0].tagName !== 'BR') {\n                  var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                  _this.parent.formatter.editorManager.domNode.insertAfter(newElem, nearBlockNode);\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, newElem.textContent.length >= 0 ? 0 : 1);\n                } else {\n                  var insertElem = _this.createInsertElement(shiftKey_1);\n                  insertElem.innerHTML = '<br>';\n                  _this.parent.formatter.editorManager.domNode.insertAfter(insertElem, nearBlockNode);\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem, 0);\n                }\n              } else {\n                var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true);\n                if (!isNOU(newElem.childNodes[0]) && newElem.childNodes[0].nodeName === '#text' && newElem.childNodes[0].textContent.length === 0) {\n                  detach(newElem.childNodes[0]);\n                }\n                if (newElem.textContent.trim().length === 0) {\n                  var brElm = _this.parent.createElement('br');\n                  if (_this.startNode.nodeName === 'A') {\n                    var startParentElem = _this.startNode.parentElement;\n                    _this.startNode.parentElement.insertBefore(brElm, _this.startNode);\n                    detach(_this.startNode);\n                    _this.startNode = startParentElem;\n                  } else {\n                    _this.startNode.appendChild(brElm);\n                  }\n                  if (newElem.childNodes[0].textContent === '\\n') {\n                    detach(newElem.childNodes[0]);\n                  }\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.startNode, 0);\n                }\n                if ((_this.parent.enterKey === 'P' || _this.parent.enterKey === 'DIV') && !shiftKey_1 || (_this.parent.shiftEnterKey === 'DIV' || _this.parent.shiftEnterKey === 'P') && shiftKey_1) {\n                  var insertElm = _this.createInsertElement(shiftKey_1);\n                  while (newElem.firstChild) {\n                    insertElm.appendChild(newElem.firstChild);\n                  }\n                  _this.parent.formatter.editorManager.domNode.insertAfter(insertElm, newElem);\n                  detach(newElem);\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode) ? insertElm : _this.startNode, 0);\n                }\n              }\n              e.args.preventDefault();\n            }\n            if (_this.parent.enterKey === 'BR' && !shiftKey_1 || _this.parent.shiftEnterKey === 'BR' && shiftKey_1) {\n              var currentParent = void 0;\n              if (!_this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                var currentNode = _this.startNode;\n                var previousNode = currentNode;\n                while (!_this.parent.formatter.editorManager.domNode.isBlockNode(currentNode)) {\n                  previousNode = currentNode;\n                  currentNode = currentNode.parentElement;\n                }\n                currentParent = currentNode === _this.parent.inputElement ? previousNode : currentNode;\n              } else {\n                currentParent = _this.startNode;\n              }\n              _this.removeBRElement(currentParent);\n              var isEmptyBrInserted = false;\n              var currentParentLastChild = currentParent.lastChild;\n              while (!isNOU(currentParentLastChild) && !(currentParentLastChild.nodeName === '#text' || currentParentLastChild.nodeName === 'BR')) {\n                currentParentLastChild = currentParentLastChild.lastChild;\n              }\n              var isLastNodeLength = _this.range.startContainer === currentParentLastChild ? _this.range.startContainer.textContent.length : currentParent.textContent.length;\n              if (currentParent !== _this.parent.inputElement && _this.parent.formatter.editorManager.domNode.isBlockNode(currentParent) && _this.range.startOffset === _this.range.endOffset && _this.range.startOffset === isLastNodeLength) {\n                var focusBRElem = _this.parent.createElement('br');\n                if (currentParentLastChild.nodeName === 'BR' && currentParent.textContent.length === 0) {\n                  _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, currentParentLastChild);\n                } else {\n                  var lineBreakBRElem = _this.parent.createElement('br');\n                  _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, _this.range.startContainer);\n                  _this.parent.formatter.editorManager.domNode.insertAfter(lineBreakBRElem, _this.range.startContainer);\n                }\n                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusBRElem, 0);\n              } else if (!isNOU(currentParent) && currentParent !== _this.parent.inputElement && currentParent.nodeName !== 'BR') {\n                if (currentParent.textContent.trim().length === 0 || currentParent.textContent.trim().length === 1 && currentParent.textContent.charCodeAt(0) === 8203) {\n                  var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, true).cloneNode(true);\n                  _this.parent.formatter.editorManager.domNode.insertAfter(newElem, currentParent);\n                  var outerBRElem = _this.parent.createElement('br');\n                  newElem.parentElement.insertBefore(outerBRElem, newElem);\n                  _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, 0);\n                } else {\n                  var newElem = void 0;\n                  var outerBRElem = _this.parent.createElement('br');\n                  if (_this.range.startOffset === 0 && _this.range.endOffset === 0 && !isNOU(currentParent.previousSibling) && currentParent.previousSibling.nodeName === 'BR') {\n                    newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, false).cloneNode(true);\n                    _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n                    _this.insertFocusContent();\n                    var currentFocusElem = outerBRElem.nextSibling;\n                    while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                      currentFocusElem = currentFocusElem.lastChild;\n                    }\n                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, 0);\n                    isEmptyBrInserted = true;\n                  } else {\n                    _this.insertBRElement();\n                  }\n                }\n              } else {\n                _this.insertBRElement();\n              }\n              e.args.preventDefault();\n            }\n            _this.parent.trigger(events.actionComplete, {\n              requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n              args: e.args\n            });\n          }\n        });\n      }\n    }\n  };\n  EnterKeyAction.prototype.removeBRElement = function (currentElement) {\n    if (Browser.userAgent.indexOf('Firefox') != -1 && this.range.endOffset === currentElement.textContent.length && currentElement.lastChild.nodeName === 'BR') {\n      detach(currentElement.lastChild);\n    }\n  };\n  EnterKeyAction.prototype.insertBRElement = function () {\n    var isEmptyBrInserted = false;\n    var brElm = this.parent.createElement('br');\n    if (this.startNode.nodeName === 'BR' && this.endNode.nodeName === 'BR' && this.range.startOffset === 0 && this.range.startOffset === this.range.endOffset) {\n      this.parent.formatter.editorManager.domNode.insertAfter(brElm, this.startNode);\n      isEmptyBrInserted = true;\n    } else {\n      if (this.startNode === this.parent.inputElement && !isNOU(this.range.startContainer.previousSibling) && this.range.startContainer.previousSibling.nodeName === 'BR' && this.range.startContainer.textContent.length === 0) {\n        isEmptyBrInserted = true;\n      }\n      this.range.insertNode(brElm);\n    }\n    if (isEmptyBrInserted || !isNOU(brElm.nextElementSibling) && brElm.nextElementSibling.tagName === 'BR' || !isNOU(brElm.nextSibling) && brElm.nextSibling.textContent.length > 0) {\n      this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), !isNOU(brElm.nextSibling) ? brElm.nextSibling : brElm, 0);\n      isEmptyBrInserted = false;\n    } else {\n      var brElm2 = this.parent.createElement('br');\n      this.range.insertNode(brElm2);\n      this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), brElm, 0);\n    }\n  };\n  EnterKeyAction.prototype.insertFocusContent = function () {\n    if (this.range.startContainer.textContent.length === 0) {\n      if (this.range.startContainer.nodeName === '#text') {\n        this.range.startContainer.parentElement.innerHTML = '&#8203;';\n      } else {\n        this.range.startContainer.innerHTML = '&#8203;';\n      }\n    }\n  };\n  EnterKeyAction.prototype.createInsertElement = function (shiftKey) {\n    var insertElem;\n    if (this.parent.enterKey === 'DIV' && !shiftKey || this.parent.shiftEnterKey === 'DIV' && shiftKey) {\n      insertElem = this.parent.createElement('div');\n    } else if (this.parent.enterKey === 'P' && !shiftKey || this.parent.shiftEnterKey === 'P' && shiftKey) {\n      insertElem = this.parent.createElement('p');\n    }\n    return insertElem;\n  };\n  return EnterKeyAction;\n}();\nexport { EnterKeyAction };","map":{"version":3,"names":["isNullOrUndefined","isNOU","detach","Browser","events","EnterKeyAction","parent","addEventListener","prototype","on","enterHandler","destroy","removeEventListener","off","getRangeNode","range","getRange","startNode","startContainer","nodeName","parentElement","endNode","endContainer","e","_this","isTableEnter","closest","curElement","blockElement","formatter","editorManager","domNode","isBlockNode","tagName","args","which","code","shiftKey_1","shiftKey","actionBeginArgs","cancel","name","actionBegin","requestType","originalEvent","trigger","startOffset","endOffset","deleteContents","textContent","length","inputElement","enterKey","innerHTML","focusElem","childNodes","nodeSelection","setCursorPoint","contentModule","getDocument","previousSibling","currentFocusElem","lastChild","preventDefault","shiftEnterKey","nearBlockNode","blockParentNode","isImageNode","isFocusedFirst","startNodeText","splitFirstText","substring","charCodeAt","trim","removeBRElement","isNearBlockLengthZero","newElem","createInsertElement","nodeCutter","SplitNode","cloneNode","insertElem","firstChild","appendChild","insertBefore","finalFocusElem","nextElementSibling","children","insertAfter","brElm","createElement","startParentElem","insertElm","currentParent","currentNode","previousNode","isEmptyBrInserted","currentParentLastChild","isLastNodeLength","focusBRElem","lineBreakBRElem","outerBRElem","insertFocusContent","nextSibling","insertBRElement","actionComplete","currentElement","userAgent","indexOf","insertNode","brElm2"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/enter-key.js"],"sourcesContent":["import { isNullOrUndefined as isNOU, detach, Browser } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\n/**\n * `EnterKey` module is used to handle enter key press actions.\n */\nvar EnterKeyAction = /** @class */ (function () {\n    function EnterKeyAction(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    EnterKeyAction.prototype.addEventListener = function () {\n        this.parent.on(events.enterHandler, this.enterHandler, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    EnterKeyAction.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    EnterKeyAction.prototype.removeEventListener = function () {\n        this.parent.off(events.enterHandler, this.enterHandler);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    EnterKeyAction.prototype.getRangeNode = function () {\n        this.range = this.parent.getRange();\n        this.startNode = this.range.startContainer.nodeName === '#text' ? this.range.startContainer.parentElement :\n            this.range.startContainer;\n        this.endNode = this.range.endContainer.nodeName === '#text' ? this.range.endContainer.parentElement :\n            this.range.endContainer;\n    };\n    EnterKeyAction.prototype.enterHandler = function (e) {\n        var _this = this;\n        this.getRangeNode();\n        var isTableEnter = true;\n        if (!isNOU(this.startNode.closest('TABLE')) && !isNOU(this.endNode.closest('TABLE'))) {\n            isTableEnter = false;\n            var curElement = this.startNode;\n            var blockElement = curElement;\n            while (!this.parent.formatter.editorManager.domNode.isBlockNode(curElement)) {\n                blockElement = curElement;\n                curElement = curElement.parentElement;\n            }\n            isTableEnter = blockElement.tagName === 'TD' ? false : true;\n        }\n        if (e.args.which === 13 && e.args.code === 'Enter') {\n            if (isNOU(this.startNode.closest('LI')) && isNOU(this.endNode.closest('LI')) && isTableEnter &&\n                isNOU(this.startNode.closest('PRE')) && isNOU(this.endNode.closest('PRE'))) {\n                var shiftKey_1 = e.args.shiftKey;\n                var actionBeginArgs = {\n                    cancel: false,\n                    name: events.actionBegin,\n                    requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction',\n                    originalEvent: e.args\n                };\n                this.parent.trigger(events.actionBegin, actionBeginArgs, function (actionBeginArgs) {\n                    if (!actionBeginArgs.cancel) {\n                        if (!(_this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.range.endContainer)) {\n                            _this.range.deleteContents();\n                            if (_this.range.startContainer.nodeName === '#text' && _this.range.startContainer.textContent.length === 0 &&\n                                _this.range.startContainer.parentElement !== _this.parent.inputElement) {\n                                if (_this.parent.enterKey === 'BR') {\n                                    _this.range.startContainer.parentElement.innerHTML = '&#8203;';\n                                }\n                                else {\n                                    _this.range.startContainer.parentElement.innerHTML = '<br>';\n                                }\n                            }\n                            else if (_this.range.startContainer === _this.parent.inputElement && _this.range.startContainer.innerHTML === '') {\n                                _this.range.startContainer.innerHTML = '<br>';\n                                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, 0);\n                            }\n                            else if (_this.parent.inputElement === _this.range.startContainer) {\n                                var focusElem = _this.range.startContainer.childNodes[_this.range.startOffset];\n                                if (focusElem.nodeName === '#text' && focusElem.textContent.length === 0) {\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.previousSibling.textContent.length);\n                                }\n                                else {\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusElem, focusElem.textContent.length >= 0 ? 0 : 1);\n                                    if (focusElem.previousSibling.textContent.length === 0) {\n                                        detach(focusElem.previousSibling);\n                                    }\n                                    else if (focusElem.textContent.length === 0) {\n                                        var currentFocusElem = focusElem.previousSibling.lastChild;\n                                        while (currentFocusElem.nodeName !== '#text') {\n                                            currentFocusElem = currentFocusElem.lastChild;\n                                        }\n                                        _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, currentFocusElem.textContent.length);\n                                        detach(focusElem);\n                                    }\n                                    else if (_this.parent.enterKey !== 'BR' &&\n                                        focusElem.previousSibling.textContent.length !== 0 && focusElem.textContent.length !== 0) {\n                                        e.args.preventDefault();\n                                        return;\n                                    }\n                                }\n                                _this.getRangeNode();\n                            }\n                        }\n                        if (_this.range.startContainer === _this.range.endContainer &&\n                            _this.range.startOffset === _this.range.endOffset && _this.range.startContainer === _this.parent.inputElement) {\n                            _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.range.startContainer.childNodes[_this.range.startOffset], 0);\n                            _this.getRangeNode();\n                        }\n                        if ((_this.parent.enterKey === 'P' && !shiftKey_1) || (_this.parent.enterKey === 'DIV' && !shiftKey_1) ||\n                            (_this.parent.shiftEnterKey === 'P' && shiftKey_1) ||\n                            (_this.parent.shiftEnterKey === 'DIV' && shiftKey_1)) {\n                            var nearBlockNode = void 0;\n                            if (isTableEnter && _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                                nearBlockNode = _this.startNode;\n                            }\n                            else {\n                                nearBlockNode = _this.parent.formatter.editorManager.domNode.blockParentNode(_this.startNode);\n                            }\n                            var isImageNode = false;\n                            var isFocusedFirst = false;\n                            if (_this.range.startOffset != 0 && _this.range.endOffset != 0 && _this.range.startContainer === _this.range.endContainer &&\n                                !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                                var startNodeText = _this.range.startContainer.textContent;\n                                var splitFirstText = startNodeText.substring(0, _this.range.startOffset);\n                                if (splitFirstText.charCodeAt(_this.range.startOffset - 1) != 160 && splitFirstText.trim().length === 0) {\n                                    isFocusedFirst = true;\n                                }\n                            }\n                            else if (_this.range.startOffset === 0 && _this.range.endOffset === 0) {\n                                isFocusedFirst = true;\n                            }\n                            _this.removeBRElement(nearBlockNode);\n                            if (((_this.range.startOffset === 0 && _this.range.endOffset === 0) || isFocusedFirst) &&\n                                !(!isNOU(_this.range.startContainer.previousSibling) &&\n                                    (_this.range.startContainer.previousSibling.nodeName === 'IMG' || _this.range.startContainer.previousSibling.nodeName === 'BR'))) {\n                                var isNearBlockLengthZero = void 0;\n                                var newElem = void 0;\n                                if (_this.range.startContainer.nodeName === 'IMG') {\n                                    newElem = _this.createInsertElement(shiftKey_1);\n                                    isImageNode = true;\n                                    isNearBlockLengthZero = false;\n                                }\n                                else {\n                                    if (nearBlockNode.textContent.trim().length !== 0) {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                                        isNearBlockLengthZero = false;\n                                    }\n                                    else {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true).cloneNode(true);\n                                        isNearBlockLengthZero = true;\n                                    }\n                                }\n                                var insertElem = _this.createInsertElement(shiftKey_1);\n                                while (newElem.firstChild) {\n                                    insertElem.appendChild(newElem.firstChild);\n                                }\n                                nearBlockNode.parentElement.insertBefore(insertElem, nearBlockNode);\n                                if (!isNearBlockLengthZero) {\n                                    var currentFocusElem = insertElem;\n                                    var finalFocusElem = void 0;\n                                    while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                                        finalFocusElem = currentFocusElem;\n                                        currentFocusElem = currentFocusElem.lastChild;\n                                    }\n                                    finalFocusElem.innerHTML = '<br>';\n                                    if (!isImageNode) {\n                                        detach(nearBlockNode);\n                                    }\n                                }\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem.nextElementSibling, 0);\n                            }\n                            else if (nearBlockNode.textContent.length === 0 && !(!isNOU(nearBlockNode.childNodes[0]) && nearBlockNode.childNodes[0].nodeName === 'IMG')) {\n                                if (!isNOU(nearBlockNode.children[0]) && nearBlockNode.children[0].tagName !== 'BR') {\n                                    var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, false).cloneNode(true);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(newElem, nearBlockNode);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, newElem.textContent.length >= 0 ? 0 : 1);\n                                }\n                                else {\n                                    var insertElem = _this.createInsertElement(shiftKey_1);\n                                    insertElem.innerHTML = '<br>';\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(insertElem, nearBlockNode);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), insertElem, 0);\n                                }\n                            }\n                            else {\n                                var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, nearBlockNode, true);\n                                if (!isNOU(newElem.childNodes[0]) && newElem.childNodes[0].nodeName === '#text' &&\n                                    newElem.childNodes[0].textContent.length === 0) {\n                                    detach(newElem.childNodes[0]);\n                                }\n                                if (newElem.textContent.trim().length === 0) {\n                                    var brElm = _this.parent.createElement('br');\n                                    if (_this.startNode.nodeName === 'A') {\n                                        var startParentElem = _this.startNode.parentElement;\n                                        _this.startNode.parentElement.insertBefore(brElm, _this.startNode);\n                                        detach(_this.startNode);\n                                        _this.startNode = startParentElem;\n                                    }\n                                    else {\n                                        _this.startNode.appendChild(brElm);\n                                    }\n                                    if (newElem.childNodes[0].textContent === '\\n') {\n                                        detach(newElem.childNodes[0]);\n                                    }\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.startNode, 0);\n                                }\n                                if (((_this.parent.enterKey === 'P' || _this.parent.enterKey === 'DIV') && !shiftKey_1) || ((_this.parent.shiftEnterKey === 'DIV' ||\n                                    _this.parent.shiftEnterKey === 'P') && shiftKey_1)) {\n                                    var insertElm = _this.createInsertElement(shiftKey_1);\n                                    while (newElem.firstChild) {\n                                        insertElm.appendChild(newElem.firstChild);\n                                    }\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(insertElm, newElem);\n                                    detach(newElem);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), _this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode) ?\n                                        insertElm : _this.startNode, 0);\n                                }\n                            }\n                            e.args.preventDefault();\n                        }\n                        if ((_this.parent.enterKey === 'BR' && !shiftKey_1) || (_this.parent.shiftEnterKey === 'BR' && shiftKey_1)) {\n                            var currentParent = void 0;\n                            if (!_this.parent.formatter.editorManager.domNode.isBlockNode(_this.startNode)) {\n                                var currentNode = _this.startNode;\n                                var previousNode = currentNode;\n                                while (!_this.parent.formatter.editorManager.domNode.isBlockNode(currentNode)) {\n                                    previousNode = currentNode;\n                                    currentNode = currentNode.parentElement;\n                                }\n                                currentParent = currentNode === _this.parent.inputElement ?\n                                    previousNode : currentNode;\n                            }\n                            else {\n                                currentParent = _this.startNode;\n                            }\n                            _this.removeBRElement(currentParent);\n                            var isEmptyBrInserted = false;\n                            var currentParentLastChild = currentParent.lastChild;\n                            while (!isNOU(currentParentLastChild) && !(currentParentLastChild.nodeName === '#text' || currentParentLastChild.nodeName === 'BR')) {\n                                currentParentLastChild = currentParentLastChild.lastChild;\n                            }\n                            var isLastNodeLength = _this.range.startContainer === currentParentLastChild ?\n                                _this.range.startContainer.textContent.length : currentParent.textContent.length;\n                            if (currentParent !== _this.parent.inputElement &&\n                                _this.parent.formatter.editorManager.domNode.isBlockNode(currentParent) &&\n                                _this.range.startOffset === _this.range.endOffset &&\n                                _this.range.startOffset === isLastNodeLength) {\n                                var focusBRElem = _this.parent.createElement('br');\n                                if (currentParentLastChild.nodeName === 'BR' && currentParent.textContent.length === 0) {\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, currentParentLastChild);\n                                }\n                                else {\n                                    var lineBreakBRElem = _this.parent.createElement('br');\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(focusBRElem, _this.range.startContainer);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(lineBreakBRElem, _this.range.startContainer);\n                                }\n                                _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), focusBRElem, 0);\n                            }\n                            else if (!isNOU(currentParent) && currentParent !== _this.parent.inputElement && currentParent.nodeName !== 'BR') {\n                                if (currentParent.textContent.trim().length === 0 || (currentParent.textContent.trim().length === 1 &&\n                                    currentParent.textContent.charCodeAt(0) === 8203)) {\n                                    var newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, true).cloneNode(true);\n                                    _this.parent.formatter.editorManager.domNode.insertAfter(newElem, currentParent);\n                                    var outerBRElem = _this.parent.createElement('br');\n                                    newElem.parentElement.insertBefore(outerBRElem, newElem);\n                                    _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), newElem, 0);\n                                }\n                                else {\n                                    var newElem = void 0;\n                                    var outerBRElem = _this.parent.createElement('br');\n                                    if (_this.range.startOffset === 0 && _this.range.endOffset === 0 &&\n                                        !isNOU(currentParent.previousSibling) && currentParent.previousSibling.nodeName === 'BR') {\n                                        newElem = _this.parent.formatter.editorManager.nodeCutter.SplitNode(_this.range, currentParent, false).cloneNode(true);\n                                        _this.parent.formatter.editorManager.domNode.insertAfter(outerBRElem, currentParent);\n                                        _this.insertFocusContent();\n                                        var currentFocusElem = outerBRElem.nextSibling;\n                                        while (!isNOU(currentFocusElem) && currentFocusElem.nodeName !== '#text') {\n                                            currentFocusElem = currentFocusElem.lastChild;\n                                        }\n                                        _this.parent.formatter.editorManager.nodeSelection.setCursorPoint(_this.parent.contentModule.getDocument(), currentFocusElem, 0);\n                                        isEmptyBrInserted = true;\n                                    }\n                                    else {\n                                        _this.insertBRElement();\n                                    }\n                                }\n                            }\n                            else {\n                                _this.insertBRElement();\n                            }\n                            e.args.preventDefault();\n                        }\n                        _this.parent.trigger(events.actionComplete, { requestType: shiftKey_1 ? 'ShiftEnterAction' : 'EnterAction', args: e.args });\n                    }\n                });\n            }\n        }\n    };\n    EnterKeyAction.prototype.removeBRElement = function (currentElement) {\n        if (Browser.userAgent.indexOf('Firefox') != -1 &&\n            this.range.endOffset === currentElement.textContent.length &&\n            currentElement.lastChild.nodeName === 'BR') {\n            detach(currentElement.lastChild);\n        }\n    };\n    EnterKeyAction.prototype.insertBRElement = function () {\n        var isEmptyBrInserted = false;\n        var brElm = this.parent.createElement('br');\n        if (this.startNode.nodeName === 'BR' && this.endNode.nodeName === 'BR' && this.range.startOffset === 0 && this.range.startOffset === this.range.endOffset) {\n            this.parent.formatter.editorManager.domNode.insertAfter(brElm, this.startNode);\n            isEmptyBrInserted = true;\n        }\n        else {\n            if (this.startNode === this.parent.inputElement && !isNOU(this.range.startContainer.previousSibling) &&\n                this.range.startContainer.previousSibling.nodeName === 'BR' && this.range.startContainer.textContent.length === 0) {\n                isEmptyBrInserted = true;\n            }\n            this.range.insertNode(brElm);\n        }\n        if (isEmptyBrInserted || (!isNOU(brElm.nextElementSibling) && brElm.nextElementSibling.tagName === 'BR') || (!isNOU(brElm.nextSibling) && brElm.nextSibling.textContent.length > 0)) {\n            this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), !isNOU(brElm.nextSibling) ? brElm.nextSibling : brElm, 0);\n            isEmptyBrInserted = false;\n        }\n        else {\n            var brElm2 = this.parent.createElement('br');\n            this.range.insertNode(brElm2);\n            this.parent.formatter.editorManager.nodeSelection.setCursorPoint(this.parent.contentModule.getDocument(), brElm, 0);\n        }\n    };\n    EnterKeyAction.prototype.insertFocusContent = function () {\n        if (this.range.startContainer.textContent.length === 0) {\n            if (this.range.startContainer.nodeName === '#text') {\n                this.range.startContainer.parentElement.innerHTML = '&#8203;';\n            }\n            else {\n                this.range.startContainer.innerHTML = '&#8203;';\n            }\n        }\n    };\n    EnterKeyAction.prototype.createInsertElement = function (shiftKey) {\n        var insertElem;\n        if ((this.parent.enterKey === 'DIV' && !shiftKey) || (this.parent.shiftEnterKey === 'DIV' && shiftKey)) {\n            insertElem = this.parent.createElement('div');\n        }\n        else if ((this.parent.enterKey === 'P' && !shiftKey) || (this.parent.shiftEnterKey === 'P' && shiftKey)) {\n            insertElem = this.parent.createElement('p');\n        }\n        return insertElem;\n    };\n    return EnterKeyAction;\n}());\nexport { EnterKeyAction };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}