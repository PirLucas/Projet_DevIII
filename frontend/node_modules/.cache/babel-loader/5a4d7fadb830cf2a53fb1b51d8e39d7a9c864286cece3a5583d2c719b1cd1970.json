{"ast":null,"code":"import { getEditValue } from '../base/util';\n/**\n * Content module is used to render Rich Text Editor content\n *\n * @hidden\n\n */\nvar ContentRender = /** @class */function () {\n  /**\n   * Constructor for content renderer module\n   *\n   * @param {IRichTextEditor} parent - specifies the parent element.\n   * @param {ServiceLocator} serviceLocator - specifies the service.\n   * @returns {void}\n   */\n  function ContentRender(parent, serviceLocator) {\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n  }\n  /**\n   * The function is used to render Rich Text Editor content div\n   *\n   * @returns {void}\n   * @hidden\n    */\n  ContentRender.prototype.renderPanel = function () {\n    var rteObj = this.parent;\n    var div = this.parent.createElement('div', {\n      className: 'e-rte-content',\n      id: this.parent.getID() + 'rte-view'\n    });\n    var rteContent = getEditValue(rteObj.value, rteObj);\n    this.editableElement = this.parent.createElement('div', {\n      className: 'e-content',\n      id: this.parent.getID() + '_rte-edit-view',\n      attrs: {\n        'contenteditable': 'true'\n      },\n      innerHTML: rteContent\n    });\n    div.appendChild(this.editableElement);\n    this.setPanel(div);\n    rteObj.element.appendChild(div);\n  };\n  /**\n   * Get the content div element of RichTextEditor\n   *\n   * @returns {Element} - specifies the element.\n   * @hidden\n    */\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Get the editable element of RichTextEditor\n   *\n   * @returns {Element} - specifies the return element.\n   * @hidden\n    */\n  ContentRender.prototype.getEditPanel = function () {\n    return this.editableElement;\n  };\n  /**\n   * Returns the text content as string.\n   *\n   * @returns {string} - specifies the string element.\n   */\n  ContentRender.prototype.getText = function () {\n    return this.getEditPanel().innerText;\n  };\n  /**\n   * Set the content div element of RichTextEditor\n   *\n   * @param {Element} panel - specifies the panel element.\n   * @returns {void}\n   * @hidden\n    */\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the document of RichTextEditor\n   *\n   * @returns {Document} - specifies the document.\n   * @hidden\n    */\n  ContentRender.prototype.getDocument = function () {\n    return this.getEditPanel().ownerDocument;\n  };\n  return ContentRender;\n}();\nexport { ContentRender };","map":{"version":3,"names":["getEditValue","ContentRender","parent","serviceLocator","prototype","renderPanel","rteObj","div","createElement","className","id","getID","rteContent","value","editableElement","attrs","innerHTML","appendChild","setPanel","element","getPanel","contentPanel","getEditPanel","getText","innerText","panel","getDocument","ownerDocument"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/renderer/content-renderer.js"],"sourcesContent":["import { getEditValue } from '../base/util';\n/**\n * Content module is used to render Rich Text Editor content\n *\n * @hidden\n\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     *\n     * @param {IRichTextEditor} parent - specifies the parent element.\n     * @param {ServiceLocator} serviceLocator - specifies the service.\n     * @returns {void}\n     */\n    function ContentRender(parent, serviceLocator) {\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n    }\n    /**\n     * The function is used to render Rich Text Editor content div\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var rteObj = this.parent;\n        var div = this.parent.createElement('div', { className: 'e-rte-content', id: this.parent.getID() + 'rte-view' });\n        var rteContent = getEditValue(rteObj.value, rteObj);\n        this.editableElement = this.parent.createElement('div', {\n            className: 'e-content',\n            id: this.parent.getID() + '_rte-edit-view',\n            attrs: {\n                'contenteditable': 'true'\n            },\n            innerHTML: rteContent\n        });\n        div.appendChild(this.editableElement);\n        this.setPanel(div);\n        rteObj.element.appendChild(div);\n    };\n    /**\n     * Get the content div element of RichTextEditor\n     *\n     * @returns {Element} - specifies the element.\n     * @hidden\n\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Get the editable element of RichTextEditor\n     *\n     * @returns {Element} - specifies the return element.\n     * @hidden\n\n     */\n    ContentRender.prototype.getEditPanel = function () {\n        return this.editableElement;\n    };\n    /**\n     * Returns the text content as string.\n     *\n     * @returns {string} - specifies the string element.\n     */\n    ContentRender.prototype.getText = function () {\n        return this.getEditPanel().innerText;\n    };\n    /**\n     * Set the content div element of RichTextEditor\n     *\n     * @param {Element} panel - specifies the panel element.\n     * @returns {void}\n     * @hidden\n\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the document of RichTextEditor\n     *\n     * @returns {Document} - specifies the document.\n     * @hidden\n\n     */\n    ContentRender.prototype.getDocument = function () {\n        return this.getEditPanel().ownerDocument;\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,aAAe,YAAY;EAC3C;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,aAAaA,CAACC,MAAM,EAAEC,cAAc,EAAE;IAC3C,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,cAAc,GAAGA,cAAc;EACxC;EACA;AACJ;AACA;AACA;AACA;AACA;EAEIF,aAAa,CAACG,SAAS,CAACC,WAAW,GAAG,YAAY;IAC9C,IAAIC,MAAM,GAAG,IAAI,CAACJ,MAAM;IACxB,IAAIK,GAAG,GAAG,IAAI,CAACL,MAAM,CAACM,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE,eAAe;MAAEC,EAAE,EAAE,IAAI,CAACR,MAAM,CAACS,KAAK,EAAE,GAAG;IAAW,CAAC,CAAC;IAChH,IAAIC,UAAU,GAAGZ,YAAY,CAACM,MAAM,CAACO,KAAK,EAAEP,MAAM,CAAC;IACnD,IAAI,CAACQ,eAAe,GAAG,IAAI,CAACZ,MAAM,CAACM,aAAa,CAAC,KAAK,EAAE;MACpDC,SAAS,EAAE,WAAW;MACtBC,EAAE,EAAE,IAAI,CAACR,MAAM,CAACS,KAAK,EAAE,GAAG,gBAAgB;MAC1CI,KAAK,EAAE;QACH,iBAAiB,EAAE;MACvB,CAAC;MACDC,SAAS,EAAEJ;IACf,CAAC,CAAC;IACFL,GAAG,CAACU,WAAW,CAAC,IAAI,CAACH,eAAe,CAAC;IACrC,IAAI,CAACI,QAAQ,CAACX,GAAG,CAAC;IAClBD,MAAM,CAACa,OAAO,CAACF,WAAW,CAACV,GAAG,CAAC;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EAEIN,aAAa,CAACG,SAAS,CAACgB,QAAQ,GAAG,YAAY;IAC3C,OAAO,IAAI,CAACC,YAAY;EAC5B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EAEIpB,aAAa,CAACG,SAAS,CAACkB,YAAY,GAAG,YAAY;IAC/C,OAAO,IAAI,CAACR,eAAe;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIb,aAAa,CAACG,SAAS,CAACmB,OAAO,GAAG,YAAY;IAC1C,OAAO,IAAI,CAACD,YAAY,EAAE,CAACE,SAAS;EACxC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EAEIvB,aAAa,CAACG,SAAS,CAACc,QAAQ,GAAG,UAAUO,KAAK,EAAE;IAChD,IAAI,CAACJ,YAAY,GAAGI,KAAK;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EAEIxB,aAAa,CAACG,SAAS,CAACsB,WAAW,GAAG,YAAY;IAC9C,OAAO,IAAI,CAACJ,YAAY,EAAE,CAACK,aAAa;EAC5C,CAAC;EACD,OAAO1B,aAAa;AACxB,CAAC,EAAG;AACJ,SAASA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}