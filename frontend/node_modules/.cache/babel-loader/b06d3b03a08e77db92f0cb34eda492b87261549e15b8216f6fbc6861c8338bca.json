{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */function (_super) {\n  __extends(Panel, _super);\n  function Panel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('')], Panel.prototype, \"id\", void 0);\n  __decorate([Property('')], Panel.prototype, \"cssClass\", void 0);\n  __decorate([Property('')], Panel.prototype, \"header\", void 0);\n  __decorate([Property('')], Panel.prototype, \"content\", void 0);\n  __decorate([Property(true)], Panel.prototype, \"enabled\", void 0);\n  __decorate([Property(0)], Panel.prototype, \"row\", void 0);\n  __decorate([Property(0)], Panel.prototype, \"col\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"sizeX\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"sizeY\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"minSizeY\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"minSizeX\", void 0);\n  __decorate([Property(null)], Panel.prototype, \"maxSizeY\", void 0);\n  __decorate([Property(null)], Panel.prototype, \"maxSizeX\", void 0);\n  __decorate([Property(1000)], Panel.prototype, \"zIndex\", void 0);\n  return Panel;\n}(ChildProperty);\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */function (_super) {\n  __extends(DashboardLayout, _super);\n  function DashboardLayout(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.rows = 1;\n    _this.panelID = 0;\n    _this.movePanelCalled = false;\n    _this.resizeCalled = false;\n    _this.mOffX = 0;\n    _this.mOffY = 0;\n    _this.maxTop = 9999;\n    _this.maxRows = 100;\n    _this.mouseX = 0;\n    _this.mouseY = 0;\n    _this.minTop = 0;\n    _this.minLeft = 0;\n    _this.isInlineRendering = false;\n    _this.removeAllCalled = false;\n    // to check whether removePanel is executed in mobile device\n    _this.isPanelRemoved = false;\n    // to maintain sizeY in mobile device\n    _this.panelsSizeY = 0;\n    _this.resizeHeight = false;\n    setValue('mergePersistData', _this.mergePersistPanelData, _this);\n    return _this;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   */\n  DashboardLayout.prototype.preRender = function () {\n    this.panelCollection = [];\n    this.sortedArray = [];\n    this.gridPanelCollection = [];\n    this.overlapElement = [];\n    this.overlapElementClone = [];\n    this.overlapSubElementClone = [];\n    this.collisionChecker = {};\n    this.dragCollection = [];\n    this.elementRef = {\n      top: '',\n      left: '',\n      height: '',\n      width: ''\n    };\n    this.dimensions = [];\n    this.allItems = [];\n    this.oldRowCol = {};\n    this.availableClasses = [];\n    this.setOldRowCol();\n    this.calculateCellSize();\n    this.contentTemplateChild = [].slice.call(this.element.children);\n  };\n  DashboardLayout.prototype.setOldRowCol = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (!this.panels[i].id) {\n        this.panelPropertyChange(this.panels[i], {\n          id: 'layout_' + this.panelID.toString()\n        });\n        this.panelID = this.panelID + 1;\n      }\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n  };\n  DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n    var ele = this.createElement('div');\n    if (cssClass && cssClass.length > 0) {\n      addClass([ele], cssClass);\n    }\n    if (idValue) {\n      ele.setAttribute('id', idValue);\n    }\n    return ele;\n  };\n  /**\n   * To Initialize the control rendering.\n   *\n   * @returns void\n   * @private\n   */\n  DashboardLayout.prototype.render = function () {\n    this.initialize();\n    this.isRenderComplete = true;\n    if (this.showGridLines && !this.checkMediaQuery()) {\n      this.initGridLines();\n    }\n    this.updateDragArea();\n    this.renderComplete();\n    this.renderReactTemplates();\n  };\n  DashboardLayout.prototype.initGridLines = function () {\n    this.table = document.createElement('table');\n    var tbody = document.createElement('tbody');\n    this.table.classList.add('e-dashboard-gridline-table');\n    for (var i = 0; i < this.maxRow(); i++) {\n      var tr = document.createElement('tr');\n      for (var j = 0; j < this.columns; j++) {\n        var td = document.createElement('td');\n        td.classList.add('e-dashboard-gridline');\n        this.setAttributes({\n          value: {\n            row: i.toString(),\n            col: j.toString(),\n            sizeX: '1',\n            sizeY: '1'\n          }\n        }, td);\n        td.setAttribute('id', '' + j);\n        this.setPanelPosition(td, i, j);\n        this.setHeightAndWidth(td, {\n          row: i,\n          col: j,\n          sizeX: 1,\n          sizeY: 1\n        });\n        tr.appendChild(td);\n      }\n      tbody.appendChild(tr);\n    }\n    this.table.appendChild(tbody);\n    this.element.appendChild(this.table);\n    this.renderReactTemplates();\n  };\n  DashboardLayout.prototype.initialize = function () {\n    this.updateRowHeight();\n    if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n      var panelElements = [];\n      this.setProperties({\n        panels: []\n      }, true);\n      this.isInlineRendering = true;\n      for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n        panelElements.push(this.element.querySelectorAll('.e-panel')[i]);\n      }\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n        if (this.enableRtl) {\n          addClass([panelElement], 'e-rtl');\n        }\n        this.getInlinePanels(panelElement);\n        this.maxCol();\n        this.maxRow();\n      }\n      for (var i = 0; i < this.panels.length; i++) {\n        var panelElement = this.element.querySelector('#' + this.panels[i].id);\n        this.setMinMaxValues(this.panels[i]);\n        if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < this.panels[i].col + this.panels[i].sizeX) {\n          var colValue = this.maxColumnValue - this.panels[i].sizeX;\n          this.panelPropertyChange(this.panels[i], {\n            col: colValue < 0 ? 0 : colValue\n          });\n        }\n        this.setXYAttributes(panelElement, this.panels[i]);\n        var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n        this.panelCollection.push(panel_1);\n        this.setHeightAndWidth(panelElement, this.panels[i]);\n        this.tempObject = this;\n        if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n          this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n          this.mainElement = panelElement;\n          this.updatePanelLayout(panelElement, this.panels[i]);\n          this.mainElement = null;\n        }\n        this.setClasses([panelElement]);\n      }\n      this.updateOldRowColumn();\n      if (this.checkMediaQuery()) {\n        this.checkMediaQuerySizing();\n      }\n    } else {\n      this.renderDashBoardCells(this.panels);\n    }\n    if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n      this.enableDraggingContent(this.panelCollection);\n    }\n    this.sortedPanel();\n    this.bindEvents();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkColumnValue = this.maxColumnValue;\n    if (!this.checkMediaQuery()) {\n      this.panelResponsiveUpdate();\n    }\n    this.setEnableRtl();\n  };\n  DashboardLayout.prototype.checkMediaQuery = function () {\n    return this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches;\n  };\n  DashboardLayout.prototype.calculateCellSize = function () {\n    this.cellSize = [];\n    if (this.checkMediaQuery()) {\n      this.cellSize[1] = this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio;\n    } else {\n      this.cellSize[0] = this.element.parentElement && this.element.parentElement.offsetWidth;\n      this.cellSize[0] = this.element.parentElement && (this.element.parentElement.offsetWidth - (this.maxCol() - 1) * this.cellSpacing[0]) / this.maxCol();\n      this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n    }\n  };\n  DashboardLayout.prototype.maxRow = function (recheck) {\n    var maxRow = 1;\n    if (this.rows > 1 && isNullOrUndefined(recheck)) {\n      maxRow = this.rows;\n      return maxRow;\n    }\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n        maxRow = this.panels[i].sizeY + this.panels[i].row;\n      }\n    }\n    if (this.panels.length === 0) {\n      maxRow = this.columns;\n    }\n    return maxRow;\n  };\n  DashboardLayout.prototype.maxCol = function () {\n    var maxCol = 1;\n    maxCol = this.columns;\n    this.maxColumnValue = maxCol;\n    return maxCol;\n  };\n  DashboardLayout.prototype.updateOldRowColumn = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      var id = this.panels[i].id;\n      if (document.getElementById(id)) {\n        var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n        var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n        this.oldRowCol[this.panels[i].id] = {\n          row: row,\n          col: col\n        };\n      } else {\n        continue;\n      }\n    }\n  };\n  DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n    var element = this.createElement('div');\n    if (className) {\n      addClass([element], [className]);\n    }\n    if (cssClass && cssClass.length > 0) {\n      addClass([element], cssClass);\n    }\n    if (idValue) {\n      element.setAttribute('id', idValue);\n    }\n    return element;\n  };\n  // eslint-disable-next-line\n  DashboardLayout.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (error) {\n        var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n        return compile(this.enableHtmlSanitizer && typeof template === 'string' ? sanitizedValue : template);\n      }\n    }\n    return undefined;\n  };\n  DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n    // eslint-disable-next-line\n    var templateFn = this.templateParser(content);\n    var templateElements = [];\n    if ((content[0] === '.' || content[0] === '#') && document.querySelector(content).tagName !== 'SCRIPT') {\n      var eleVal = document.querySelector(content);\n      if (!isNullOrUndefined(eleVal)) {\n        if (eleVal.style.display === 'none') {\n          eleVal.style.removeProperty('display');\n        }\n        if (eleVal.getAttribute('style') === '') {\n          eleVal.removeAttribute('style');\n        }\n        appendElement.appendChild(eleVal);\n        return;\n      } else {\n        content = content.trim();\n      }\n    } else {\n      // eslint-disable-next-line\n      var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n      if (compilerFn) {\n        for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n          var item = compilerFn_1[_i];\n          templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n      }\n    }\n  };\n  DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n    addClass([cellElement], [panel, panelTransition]);\n    var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n    this.panelContent = cellElement.querySelector('.e-panel-container') ? cellElement.querySelector('.e-panel-container') : this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n    cellElement.appendChild(this.panelContent);\n    if (!panelModel.enabled) {\n      this.disablePanel(cellElement);\n    }\n    if (panelModel.header) {\n      var headerTemplateElement = cellElement.querySelector('.e-panel-header') ? cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n      if (!cellElement.querySelector('.e-panel-header')) {\n        var id = this.element.id + 'HeaderTemplate' + panelId;\n        this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n        this.panelContent.appendChild(headerTemplateElement);\n        this.renderReactTemplates();\n      }\n    }\n    if (panelModel.content) {\n      var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n      this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') : this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyle(this.panelBody, {\n        height: contentHeightValue\n      });\n      if (!cellElement.querySelector('.e-panel-content')) {\n        var id = this.element.id + 'ContentTemplate' + panelId;\n        this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n        this.panelContent.appendChild(this.panelBody);\n        this.renderReactTemplates();\n      }\n    }\n    return cellElement;\n  };\n  DashboardLayout.prototype.disablePanel = function (panelElement) {\n    addClass([panelElement], [disable]);\n  };\n  DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n    var model = {\n      sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n      sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n      minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n      minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n      maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n      maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n      row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n      col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n      id: panelElement.getAttribute('id'),\n      zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n      header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n      content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n    };\n    if (!model.id) {\n      model.id = 'layout_' + this.panelID.toString();\n      panelElement.setAttribute('id', model.id);\n      this.panelID = this.panelID + 1;\n    }\n    if (isUndefined(model.enabled)) {\n      model.enabled = true;\n    }\n    panelElement.style.zIndex = '' + model.zIndex;\n    // eslint-disable-next-line\n    var panelProp = new Panel(this, 'panels', model, true);\n    this.panels.push(panelProp);\n  };\n  DashboardLayout.prototype.resizeEvents = function () {\n    if (this.allowResizing) {\n      var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n      for (var i = 0; i < panelElements.length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n  };\n  DashboardLayout.prototype.bindEvents = function () {\n    this.refreshListener = this.refresh.bind(this);\n    // eslint-disable-next-line\n    EventHandler.add(window, 'resize', this.refreshListener);\n    this.resizeEvents();\n  };\n  DashboardLayout.prototype.downResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.pageX;\n    this.lastMouseY = e.pageY;\n    var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n    var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, upEventName, this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n  DashboardLayout.prototype.downHandler = function (e) {\n    this.resizeCalled = false;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var el = closest(e.currentTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resizeStart', args);\n    this.downTarget = e.currentTarget;\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    addClass([this.element], [preventSelect]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.elementX = parseFloat(el.style.left);\n    this.elementY = parseFloat(el.style.top);\n    this.elementWidth = el.offsetWidth;\n    this.elementHeight = el.offsetHeight;\n    this.originalWidth = this.getCellInstance(el.id).sizeX;\n    this.originalHeight = this.getCellInstance(el.id).sizeY;\n    this.previousRow = this.getCellInstance(el.id).row;\n  };\n  DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.changedTouches[0].pageX;\n    this.lastMouseY = e.changedTouches[0].pageY;\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n  DashboardLayout.prototype.getCellSize = function () {\n    return [this.cellSize[0], this.cellSize[1]];\n  };\n  DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n    this.moveTarget = this.downTarget;\n    var el = closest(this.moveTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resize', args);\n  };\n  DashboardLayout.prototype.updateResizeElement = function (el) {\n    this.maxLeft = this.element.offsetWidth - 1;\n    this.maxTop = this.cellSize[1] * this.maxRows - 1;\n    removeClass([el], 'e-panel-transition');\n    addClass([el], [dragging]);\n    var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n    for (var i = 0; i < this.moveTarget.classList.length; i++) {\n      if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n        this.handleClass = this.moveTarget.classList[i];\n      }\n    }\n  };\n  DashboardLayout.prototype.moveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n    if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n      return;\n    }\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.pageX;\n    this.mouseY = e.pageY;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseY = this.mouseY;\n    this.lastMouseX = this.mouseX;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n  DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n    if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n      return;\n    }\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.changedTouches[0].pageX;\n    this.mouseY = e.changedTouches[0].pageY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseX = this.mouseX;\n    this.lastMouseY = this.mouseY;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n  /* istanbul ignore next */\n  DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n    var oldSizeX = this.getCellInstance(el.id).sizeX;\n    var oldSizeY = this.getCellInstance(el.id).sizeY;\n    var dY = currentY;\n    var dX = currentX;\n    if (this.handleClass.indexOf('north') >= 0) {\n      if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMinHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMaxHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (this.elementY + dY < this.minTop) {\n        currentY = this.minTop - this.elementY;\n        this.mOffY = dY - currentY;\n      }\n      this.elementY += currentY;\n      this.elementHeight -= currentY;\n    }\n    if (this.handleClass.indexOf('south') >= 0) {\n      if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n        currentY = this.getMinHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n        currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      }\n      this.elementHeight += currentY;\n    }\n    if (this.handleClass.indexOf('west') >= 0) {\n      if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMinWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMaxWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (this.elementX + dX < this.minLeft) {\n        currentX = this.minLeft - this.elementX;\n        this.mOffX = dX - currentX;\n      }\n      this.elementX += currentX;\n      this.elementWidth -= currentX;\n    }\n    if (this.handleClass.indexOf('east') >= 0) {\n      if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n        currentX = this.getMinWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n        currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      }\n      this.elementWidth += currentX;\n    }\n    el.style.top = this.elementY + 'px';\n    el.style.left = this.elementX + 'px';\n    el.style.width = this.elementWidth + 'px';\n    el.style.height = this.elementHeight + 'px';\n    var item = this.getResizeRowColumn(panelModel);\n    if (item.col + item.sizeX > this.columns) {\n      this.panelPropertyChange(item, {\n        sizeX: item.sizeX - 1\n      });\n    }\n    this.shadowEle.style.top = item.row * this.getCellSize()[1] + item.row * this.cellSpacing[1] + 'px';\n    this.shadowEle.style.left = item.col * this.getCellSize()[0] + item.col * this.cellSpacing[0] + 'px';\n    this.shadowEle.style.height = item.sizeY * (this.getCellSize()[1] + this.cellSpacing[1]) + 'px';\n    this.shadowEle.style.width = item.sizeX * (this.getCellSize()[0] + this.cellSpacing[0]) + 'px';\n    if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n      oldSizeX = item.sizeX;\n      oldSizeY = item.sizeY;\n      var model = this.getCellInstance(el.id);\n      var value = {\n        attributes: {\n          row: model.row.toString(),\n          col: model.col.toString(),\n          sizeX: model.sizeX.toString(),\n          sizeY: model.sizeY.toString()\n        }\n      };\n      this.setAttributes(value, el);\n      this.mainElement = el;\n      this.updatePanelLayout(el, this.getCellInstance(el.id));\n      this.updateOldRowColumn();\n      this.sortedPanel();\n    }\n  };\n  DashboardLayout.prototype.upResizeHandler = function (e) {\n    if (isNullOrUndefined(this.downTarget)) {\n      return;\n    }\n    this.upTarget = this.downTarget;\n    var el = closest(this.upTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    if (el) {\n      addClass([el], 'e-panel-transition');\n      var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n      var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n      EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n      EventHandler.remove(document, upEventName, this.upResizeHandler);\n      if (Browser.info.name !== 'msie') {\n        EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n        EventHandler.remove(document, 'touchend', this.upResizeHandler);\n      }\n      this.isMouseUpBound = false;\n      this.isMouseMoveBound = false;\n      if (this.shadowEle) {\n        detach(this.shadowEle);\n      }\n      this.shadowEle = null;\n      var panelModel = this.getCellInstance(el.getAttribute('id'));\n      this.setPanelPosition(el, panelModel.row, panelModel.col);\n      this.setHeightAndWidth(el, panelModel);\n    }\n    removeClass([el], [dragging]);\n    this.trigger('resizeStop', args);\n    this.resizeCalled = false;\n    this.lastMouseX = this.lastMouseY = undefined;\n    this.mOffX = this.mOffY = 0;\n    this.mainElement = null;\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(true);\n  };\n  DashboardLayout.prototype.getResizeRowColumn = function (item) {\n    var isChanged = false;\n    var col = item.col;\n    if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n      col = this.pixelsToColumns(this.elementX, false);\n    }\n    var row = item.row;\n    if (['e-north'].indexOf(this.handleClass) !== -1) {\n      row = this.pixelsToRows(this.elementY, false);\n      if (this.previousRow !== row) {\n        this.previousRow = row;\n        isChanged = true;\n      }\n    }\n    var sizeX = item.sizeX;\n    if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n      sizeX = this.pixelsToColumns(this.elementWidth - sizeX * this.cellSpacing[1], true);\n    }\n    var sizeY = item.sizeY;\n    if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n      if (this.handleClass === 'e-north' ? isChanged : true) {\n        sizeY = this.pixelsToRows(this.elementHeight - sizeY * this.cellSpacing[0], true);\n      }\n    }\n    if (item.col + item.sizeX > this.columns) {\n      item.sizeX = item.sizeX - 1;\n    }\n    var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n    if (canOccupy && this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0 || this.allowPushing !== false) {\n      this.panelPropertyChange(item, {\n        row: row,\n        col: col,\n        sizeX: sizeX,\n        sizeY: sizeY\n      });\n    }\n    return item;\n  };\n  DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n    var curColWidth = this.cellSize[0];\n    if (isCeil) {\n      return Math.ceil(pixels / curColWidth);\n    } else {\n      return Math.floor(pixels / curColWidth);\n    }\n  };\n  DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n    if (isCeil) {\n      return Math.round(pixels / this.cellSize[1]);\n    } else {\n      return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n    }\n  };\n  DashboardLayout.prototype.getMinWidth = function (item) {\n    return item.minSizeX * this.getCellSize()[0];\n  };\n  DashboardLayout.prototype.getMaxWidth = function (item) {\n    return item.maxSizeX * this.getCellSize()[0];\n  };\n  DashboardLayout.prototype.getMinHeight = function (item) {\n    return item.minSizeY * this.getCellSize()[1];\n  };\n  DashboardLayout.prototype.getMaxHeight = function (item) {\n    return item.maxSizeY * this.getCellSize()[1];\n  };\n  DashboardLayout.prototype.sortedPanel = function () {\n    this.sortedArray = [];\n    for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n      this.sortItem(this.panelCollection[i]);\n    }\n  };\n  DashboardLayout.prototype.moveItemsUpwards = function () {\n    if (this.allowFloating === false) {\n      return;\n    }\n    for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n      var columns = this.sortedArray[rowIndex];\n      if (!columns) {\n        continue;\n      }\n      for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n        var item = columns[colIndex];\n        if (item) {\n          this.moveItemUpwards(item);\n        }\n      }\n    }\n    this.updateGridLines();\n  };\n  DashboardLayout.prototype.moveItemUpwards = function (item) {\n    if (this.allowFloating === false || item === this.mainElement) {\n      return;\n    }\n    var colIndex = this.getCellInstance(item.id).col;\n    var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n    var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n    var availableRow = null;\n    var availableColumn = null;\n    var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n    while (rowIndex > -1) {\n      var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n      if (items.length !== 0) {\n        break;\n      }\n      availableRow = rowIndex;\n      availableColumn = colIndex;\n      --rowIndex;\n    }\n    if (availableRow !== null) {\n      this.sortItem(item, availableRow, availableColumn);\n    }\n  };\n  DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n    this.overlapElement = [];\n    var column = parseInt(item.getAttribute('data-col'), 10);\n    var row = parseInt(item.getAttribute('data-row'), 10);\n    if (!this.sortedArray[row]) {\n      this.sortedArray[row] = [];\n    }\n    this.sortedArray[row][column] = item;\n    if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n      if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null && typeof this.oldRowCol[item.id].col !== 'undefined') {\n        {\n          var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n          if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n            delete oldRow[this.oldRowCol[item.id].col];\n            this.updateOldRowColumn();\n            this.sortedPanel();\n          }\n        }\n      }\n      this.oldRowCol[item.id].row = rowValue;\n      this.oldRowCol[item.id].row = columnValue;\n      if (!this.sortedArray[row]) {\n        this.sortedArray[row] = [];\n      }\n      this.sortedArray[row][column] = item;\n      if (this.allItems.indexOf(item) === -1) {\n        this.allItems.push(item);\n      }\n      this.panelPropertyChange(this.getCellInstance(item.id), {\n        row: rowValue,\n        col: columnValue\n      });\n      var panelModel = this.getCellInstance(item.id);\n      this.setAttributes({\n        value: {\n          col: panelModel.col.toString(),\n          row: panelModel.row.toString()\n        }\n      }, item);\n      this.updateLayout(item, this.getCellInstance(item.id));\n    }\n  };\n  DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n    this.setPanelPosition(element, panelModel.row, panelModel.col);\n    this.setHeightAndWidth(element, panelModel);\n    this.updateRowHeight();\n    this.sortedPanel();\n  };\n  DashboardLayout.prototype.refresh = function () {\n    this.panelsSizeY = 0;\n    this.updateDragArea();\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    } else {\n      if (this.element.classList.contains(responsive)) {\n        removeClass([this.element], [responsive]);\n        var internalPanels = this.element.querySelectorAll((this.element.id ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n        for (var i = 0; i < internalPanels.length; i++) {\n          var ele = internalPanels[i];\n          var cellInstance = this.getCellInstance(ele.id);\n          var row = parseInt(ele.getAttribute('data-row'), 10);\n          var col = parseInt(ele.getAttribute('data-col'), 10);\n          this.panelPropertyChange(cellInstance, {\n            row: row,\n            col: col\n          });\n          this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n          this.setPanelPosition(ele, row, col);\n          this.updateRowHeight();\n        }\n      }\n      this.panelResponsiveUpdate();\n      this.updateGridLines();\n    }\n    this.removeResizeClasses(this.panelCollection);\n    this.setClasses(this.panelCollection);\n    this.resizeEvents();\n    this.checkDragging(this.dragCollection);\n  };\n  DashboardLayout.prototype.updateGridLines = function () {\n    if (this.element.querySelector('.e-dashboard-gridline-table')) {\n      if (this.table) {\n        detach(this.table);\n      }\n      this.initGridLines();\n    }\n  };\n  DashboardLayout.prototype.checkDragging = function (dragCollection) {\n    if (this.checkMediaQuery() || !this.allowDragging) {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n    } else {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n      this.enableDraggingContent(this.panelCollection);\n    }\n  };\n  DashboardLayout.prototype.sortPanels = function () {\n    var model = [];\n    var _loop_1 = function (row) {\n      var _loop_2 = function (col) {\n        this_1.panels.filter(function (panel) {\n          if (panel.row === row && panel.col === col) {\n            model.push(panel);\n          }\n        });\n      };\n      for (var col = 0; col < this_1.columns; col++) {\n        _loop_2(col);\n      }\n    };\n    var this_1 = this;\n    for (var row = 0; row <= this.rows; row++) {\n      _loop_1(row);\n    }\n    return model;\n  };\n  DashboardLayout.prototype.checkMediaQuerySizing = function () {\n    addClass([this.element], [responsive]);\n    var updatedPanel;\n    if (this.isPanelRemoved && this.panels) {\n      updatedPanel = this.panels;\n    } else {\n      updatedPanel = this.sortPanels();\n    }\n    this.updatedRows = updatedPanel.length;\n    for (var i = 0; i < updatedPanel.length; i++) {\n      var panelElement = document.getElementById(updatedPanel[i].id);\n      // eslint-disable-next-line\n      var updatedHeight = void 0;\n      if (panelElement) {\n        setStyle(panelElement, {\n          'width': '100%'\n        });\n        panelElement.style.height = ' ' + (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + 'px';\n        if (updatedPanel[i].sizeY > 1) {\n          updatedHeight = (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY +\n          // eslint-disable-next-line radix\n          parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n          panelElement.style.height = '' + updatedHeight + 'px';\n        }\n        this.resizeHeight = true;\n        this.panelPropertyChange(updatedPanel[i], {\n          row: i,\n          col: 0\n        });\n        this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n        this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n        this.setClasses(this.panelCollection);\n        this.checkDragging(this.dragCollection);\n        this.removeResizeClasses(this.panelCollection);\n      }\n    }\n    this.updateRowHeight();\n  };\n  DashboardLayout.prototype.panelResponsiveUpdate = function () {\n    this.element.classList.add('e-responsive');\n    this.calculateCellSize();\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n    }\n    for (var i = 0; i < this.panels.length; i++) {\n      this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n    }\n    this.updateRowHeight();\n  };\n  DashboardLayout.prototype.updateRowHeight = function () {\n    this.getRowColumn();\n    this.setHeightWidth();\n  };\n  DashboardLayout.prototype.setHeightWidth = function () {\n    var heightValue;\n    var widthValue;\n    if (this.checkMediaQuery()) {\n      heightValue = this.maxRow() * (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1] + 'px';\n    } else {\n      heightValue = this.maxRow() * (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1] + 'px';\n    }\n    setStyle(this.element, {\n      'height': heightValue\n    });\n    // eslint-disable-next-line prefer-const\n    widthValue = window.getComputedStyle(this.element).width;\n    setStyle(this.element, {\n      'width': widthValue\n    });\n  };\n  DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n    setStyle(panelElement, {\n      'height': formatUnit(this.setXYDimensions(panelModel)[0])\n    });\n    setStyle(panelElement, {\n      'width': formatUnit(this.setXYDimensions(panelModel)[1])\n    });\n  };\n  DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n    var cellElement;\n    this.dimensions = this.setXYDimensions(panel);\n    if (isUndefined(panel.enabled)) {\n      panel.enabled = true;\n    }\n    if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n      cellElement = this.contentTemplateChild[index];\n      if (panel.cssClass) {\n        addClass([cellElement], [panel.cssClass]);\n      }\n      if (panel.id) {\n        cellElement.setAttribute('id', panel.id);\n      }\n    } else {\n      cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n    }\n    cellElement.style.zIndex = '' + panel.zIndex;\n    this.element.appendChild(cellElement);\n    this.renderReactTemplates();\n    var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n    this.panelCollection.push(dashBoardCell);\n    this.setXYAttributes(cellElement, panel);\n    this.setHeightAndWidth(cellElement, panel);\n    return cellElement;\n  };\n  DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n    if (!cellElement) {\n      return;\n    }\n    if (this.checkMediaQuery()) {\n      this.calculateCellSize();\n    }\n    var heightValue = this.getCellSize()[1];\n    var widthValue = this.getCellSize()[0];\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n    if (this.checkMediaQuery()) {\n      top = row === 0 ? 0 : this.panelsSizeY * (heightValue + this.cellSpacing[1]);\n    }\n    setStyle(cellElement, {\n      'left': left + 'px',\n      'top': top + 'px'\n    });\n  };\n  DashboardLayout.prototype.getRowColumn = function () {\n    this.rows = null;\n    if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n      var panelElements = this.element.querySelectorAll('.e-panel');\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n        var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n        var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n        this.rows = Math.max(this.rows, rowValue + xValue);\n      }\n    } else {\n      if (this.updatedRows) {\n        this.rows = this.updatedRows;\n        this.updatedRows = null;\n      }\n      for (var i = 0; i < this.panels.length; i++) {\n        this.rows = Math.max(this.rows, this.panels[i].row);\n      }\n    }\n  };\n  DashboardLayout.prototype.setMinMaxValues = function (panel) {\n    if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.minSizeX\n      });\n    } else if (panel.maxSizeX && panel.sizeX > panel.maxSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.maxSizeX\n      });\n    } else if (panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: this.columns\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX\n      });\n    }\n    if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.minSizeY\n      });\n    } else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.maxSizeY\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.sizeY\n      });\n    }\n  };\n  DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n    if (panel.col + panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX))\n      });\n    }\n  };\n  DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n    // eslint-disable-next-line\n    panel.setProperties(value, true);\n  };\n  DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n    if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n      for (var j = 0; j < cells.length; j++) {\n        this.gridPanelCollection.push(cells[j]);\n        this.setMinMaxValues(cells[j]);\n        if (this.maxColumnValue < cells[j].col || this.maxColumnValue < cells[j].col + cells[j].sizeX) {\n          this.panelPropertyChange(cells[j], {\n            col: this.maxColumnValue - cells[j].sizeX\n          });\n        }\n        var cell = this.renderCell(cells[j], false, j);\n        if (this.enableRtl) {\n          addClass([cell], 'e-rtl');\n        }\n        this.element.appendChild(cell);\n        this.renderReactTemplates();\n        if (this.checkMediaQuery() && j === cells.length - 1) {\n          this.checkMediaQuerySizing();\n        } else {\n          this.setPanelPosition(cell, cells[j].row, cells[j].col);\n          this.mainElement = cell;\n          this.updatePanelLayout(cell, cells[j]);\n          this.mainElement = null;\n        }\n      }\n    }\n    this.setClasses(this.panelCollection);\n  };\n  DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n    var items = [];\n    if (!sizeX || !sizeY) {\n      sizeX = sizeY = 1;\n    }\n    if (ignore && !(ignore instanceof Array)) {\n      ignore = [ignore];\n    }\n    var item;\n    for (var h = 0; h < sizeY; ++h) {\n      for (var w = 0; w < sizeX; ++w) {\n        item = this.getPanel(row + h, col + w, ignore);\n        if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) && items.indexOf(document.getElementById(item.id)) === -1) {\n          items.push(document.getElementById(item.id));\n        }\n      }\n    }\n    return items;\n  };\n  DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n    var columns = [];\n    var spacedColumns = [];\n    rowElements.forEach(function (element) {\n      var columnValue = parseInt(element.getAttribute('data-col'), 10);\n      var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n      if (col < _this.columns && columnValue >= col) {\n        if (sizeXValue > 1) {\n          for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(columnValue);\n        }\n      }\n    });\n    if (columns.length > 0) {\n      for (var i = col + 1; i <= this.columns - 1; i++) {\n        if (columns.indexOf(i) === -1 && i !== col) {\n          if (spacedColumns.indexOf(i) === -1) {\n            spacedColumns.push(i);\n          }\n        }\n      }\n    }\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, previous) {\n      return next - previous;\n    });\n    return spacedColumns;\n  };\n  DashboardLayout.prototype.getOccupiedColumns = function (element) {\n    var occupiedItems = [];\n    var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n    var col = parseInt(element.getAttribute('data-col'), 10);\n    for (var i = col; i < col + sizeX && i <= this.columns; i++) {\n      occupiedItems.push(i);\n    }\n    return occupiedItems;\n  };\n  DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n    var spacedColumns = [];\n    var columns = [];\n    rowElements.forEach(function (element) {\n      var colValue = parseInt(element.getAttribute('data-col'), 10);\n      var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n      if (col <= _this.columns && colValue <= col) {\n        if (xValue > 1) {\n          for (var i = colValue; i < colValue + xValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(colValue);\n        }\n      }\n    });\n    if (columns.length > 0) {\n      for (var j = 0; j <= col; j++) {\n        if (columns.indexOf(j) === -1 && j !== col) {\n          if (spacedColumns.indexOf(j) === -1) {\n            spacedColumns.push(j);\n          }\n        }\n      }\n    }\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, prev) {\n      return next - prev;\n    });\n    spacedColumns = spacedColumns.reverse();\n    return spacedColumns;\n  };\n  DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n    this.leftAdjustable = undefined;\n    this.rightAdjustable = undefined;\n    var isAdjustable = false;\n    var rightSpacing;\n    var rowElement = [];\n    this.topAdjustable = undefined;\n    var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n    var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n    rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n    if (rowElement.indexOf(ele) === -1) {\n      rowElement.push(ele);\n    }\n    var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n    if (leftSpacing.length > 0) {\n      this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n      if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n        this.leftAdjustable = false;\n      }\n      if (this.leftAdjustable) {\n        this.rightAdjustable = false;\n      } else {\n        this.leftAdjustable = false;\n        rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n        this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n        if (this.spacedColumnValue !== eleSizeX + eleCol) {\n          this.rightAdjustable = false;\n        }\n        if (!this.rightAdjustable) {\n          this.rightAdjustable = false;\n        }\n      }\n    } else {\n      rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n      this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n      if (this.spacedColumnValue !== eleSizeX + eleCol) {\n        this.rightAdjustable = false;\n      }\n      if (this.rightAdjustable) {\n        this.leftAdjustable = false;\n      }\n    }\n    if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n      var endRow = this.getCellInstance(ele.id).row;\n      var topCheck = false;\n      if (this.startRow !== endRow) {\n        topCheck = true;\n      }\n      for (var rowValue = row; rowValue >= 0; rowValue--) {\n        var element = this.getCellInstance(ele.id).sizeY > 1 && topCheck ? this.checkingElement : ele;\n        if (rowValue !== endRow && rowValue === endRow - sizeY && this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n          topCheck = false;\n          this.topAdjustable = true;\n          this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n          this.spacedColumnValue = col;\n        }\n      }\n    }\n    if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n      isAdjustable = true;\n      if (isNullOrUndefined(this.spacedRowValue)) {\n        this.spacedRowValue = row;\n      }\n    }\n    return isAdjustable;\n  };\n  DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n    var isSpaceAvailable = false;\n    var subSpacingColumns = [];\n    for (var i = 0; i < spacing.length; i++) {\n      if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n        subSpacingColumns.push(spacing[i]);\n        if (sizeX === 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n        }\n        if (i === spacing.length - 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n          if (subSpacingColumns.length > sizeX) {\n            subSpacingColumns.splice(-1);\n          }\n        }\n        if (subSpacingColumns.length === sizeX) {\n          isSpaceAvailable = true;\n          this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) {\n            return next - previous;\n          })[0];\n          if (this.spacedColumnValue < 0) {\n            this.spacedColumnValue = 1;\n          }\n          return isSpaceAvailable;\n        }\n      } else {\n        subSpacingColumns = [];\n        continue;\n      }\n    }\n    return isSpaceAvailable;\n  };\n  DashboardLayout.prototype.getRowElements = function (base) {\n    var rowElements = [];\n    for (var i = 0; i < base.length; i++) {\n      rowElements.push(base[i]);\n    }\n    return rowElements;\n  };\n  DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n    var isLeftAdjudtable;\n    if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n      this.spacedColumnValue = spaces[0];\n      isLeftAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n        if (spaces.length >= 1) {\n          xAdjust = true;\n        }\n        if (xAdjust) {\n          for (var i = 0; i < spaces.length; i++) {\n            var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n            if (collisionValue.length === 0) {\n              this.spacedColumnValue = spaces[i];\n              isLeftAdjudtable = true;\n              return isLeftAdjudtable;\n            } else {\n              isLeftAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n      }\n    }\n    return isLeftAdjudtable;\n  };\n  DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n    var isRightAdjudtable;\n    if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n      this.spacedColumnValue = spacing[0];\n      isRightAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n        if (spacing.length >= 1) {\n          xAdjust = true;\n        }\n        if (xAdjust) {\n          for (var i = 0; i < spacing.length; i++) {\n            var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n            for (var collision = 0; collision < collisionValue.length; collision++) {\n              if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n              }\n            }\n            if (collisionValue.length === 0) {\n              isRightAdjudtable = true;\n              this.spacedColumnValue = spacing[i];\n              return isRightAdjudtable;\n            } else {\n              isRightAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n      }\n    }\n    return isRightAdjudtable;\n  };\n  DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n    var isRightAdjudtable;\n    var updatedCollision = [];\n    for (var j = 0; j < spacing.length; j++) {\n      var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n      if (xAdjust) {\n        var exclusions = [];\n        exclusions.push(this.checkingElement);\n        exclusions.push(ele);\n        if (updatedCollision.length === 0) {\n          isRightAdjudtable = true;\n          // eslint-disable-next-line no-self-assign\n          this.spacedColumnValue = this.spacedColumnValue;\n          return isRightAdjudtable;\n        } else {\n          isRightAdjudtable = false;\n        }\n      }\n    }\n    return isRightAdjudtable;\n  };\n  DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n    var updatedCollision = [];\n    var rowElements;\n    var _loop_3 = function (row) {\n      rowElements = [];\n      collisionItems.forEach(function (element) {\n        if (element && element.getAttribute('data-row') === row.toString()) {\n          rowElements.push(element);\n        }\n      });\n      var _loop_4 = function (column) {\n        rowElements.forEach(function (item) {\n          if (item && item.getAttribute('data-col') === column.toString()) {\n            updatedCollision.push(item);\n          }\n        });\n      };\n      for (var column = this_2.columns - 1; column >= 0; column--) {\n        _loop_4(column);\n      }\n    };\n    var this_2 = this;\n    for (var row = this.rows - 1; row >= 0; row--) {\n      _loop_3(row);\n    }\n    return updatedCollision;\n  };\n  DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n    var _this = this;\n    var removeableElement = [];\n    if (!this.mainElement) {\n      this.sortedPanel();\n    }\n    collisionItems.forEach(function (element) {\n      _this.checkingElement = element;\n      var model = _this.getCellInstance(element.id);\n      var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n      if (model.sizeX > 1 && adjust) {\n        for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n          var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n          collisions.forEach(function (item) {\n            if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n              removeableElement.push(item);\n            }\n          });\n        }\n      }\n    });\n    removeableElement.forEach(function (item) {\n      if (removeableElement.indexOf(item) >= 0) {\n        collisionItems.splice(collisionItems.indexOf(item), 1);\n      }\n    });\n    return collisionItems;\n  };\n  DashboardLayout.prototype.resetLayout = function (model) {\n    var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n    if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n      return collisions;\n    }\n    if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n      for (var i = 0; i < this.panels.length; i++) {\n        var element = document.getElementById(this.panels[i].id);\n        if (element === this.mainElement) {\n          continue;\n        }\n        var rowValue = this.cloneObject[element.id].row;\n        var colValue = this.cloneObject[element.id].col;\n        this.setPanelPosition(element, rowValue, colValue);\n        this.panelPropertyChange(this.getCellInstance(element.id), {\n          row: rowValue,\n          col: colValue\n        });\n        this.setAttributes({\n          value: {\n            col: colValue.toString(),\n            row: rowValue.toString()\n          }\n        }, element);\n        this.updateOldRowColumn();\n      }\n    }\n    this.sortedArray = this.cloneArray;\n    collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n    this.sortedPanel();\n    this.updateOldRowColumn();\n    if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 && this.cloneObject[this.checkCollision[0].id].row === model.row) {\n      collisions.push(this.checkCollision[0]);\n    }\n    return collisions;\n  };\n  DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n    var available = true;\n    var eleModel = this.getCellInstance(element.id);\n    for (var count = 0; count < collisions.length; count++) {\n      var collideModel = this.getCellInstance(collisions[count].id);\n      for (var i = 1; i < eleModel.sizeY; i++) {\n        var excludeEle = [];\n        excludeEle.push(element);\n        excludeEle.push(collisions[count]);\n        var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n        if (collision.length > 0) {\n          available = false;\n          return false;\n        } else {\n          continue;\n        }\n      }\n    }\n    return available;\n  };\n  DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n    if (!this.mainElement || collisions.length === 0) {\n      return false;\n    }\n    var direction;\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n    if (!this.swapAvailability(collisions, element)) {\n      return false;\n    }\n    var isSwappable = false;\n    for (var count1 = 0; count1 < collisions.length; count1++) {\n      if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n        return false;\n      }\n    }\n    var updatedRow = direction === 0 ? this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY : this.startRow;\n    for (var count = 0; count < collisions.length; count++) {\n      var collideInstance = this.getCellInstance(collisions[count].id);\n      var elementinstance = this.getCellInstance(element.id);\n      var ignore = [];\n      if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      } else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n        if (direction === 1 && elementinstance.row === this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1) {\n          ignore.push(collisions[count]);\n        } else if (direction === 0 && elementinstance.row === this.cloneObject[collideInstance.id].row) {\n          ignore.push(collisions[count]);\n        } else {\n          return false;\n        }\n      }\n      if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      }\n      ignore.push(this.mainElement);\n      var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n      if (swapCollision.length > 0) {\n        isSwappable = false;\n        return isSwappable;\n      } else {\n        if (count === collisions.length - 1) {\n          isSwappable = true;\n        }\n        continue;\n      }\n    }\n    return isSwappable;\n  };\n  DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n    var _this = this;\n    var direction;\n    var swappedElements = [];\n    swappedElements.push(element);\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n    var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n    if (!this.movePanelCalled) {\n      var collisionInstance = this.getCellInstance(collisions[0].id);\n      this.panelPropertyChange(panelModel, {\n        row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY\n      });\n    }\n    for (var count = 0; count < collisions.length; count++) {\n      swappedElements.push(collisions[count]);\n      this.setPanelPosition(collisions[count], collisionItemsRow, this.getCellInstance(collisions[count].id).col);\n      this.panelPropertyChange(this.getCellInstance(collisions[count].id), {\n        row: collisionItemsRow\n      });\n      collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n    }\n    element.setAttribute('data-row', panelModel.row.toString());\n    this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n    for (var i = 0; i < this.panels.length; i++) {\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n    this.startRow = panelModel.row;\n    this.updateOldRowColumn();\n    swappedElements.forEach(function (item) {\n      _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n      var itemModel = _this.getCellInstance(item.id);\n      for (var i = 0; i < _this.sortedArray.length; i++) {\n        if (!_this.sortedArray[i]) {\n          continue;\n        }\n        for (var j = 0; j < _this.sortedArray[i].length; j++) {\n          if (_this.sortedArray[i][j] === item) {\n            _this.sortedArray[i][j] = undefined;\n          }\n        }\n      }\n      if (!_this.sortedArray[itemModel.row]) {\n        _this.sortedArray[itemModel.row] = [];\n      }\n      _this.sortedArray[itemModel.row][itemModel.col] = item;\n      _this.cloneArray = _this.sortedArray;\n    });\n  };\n  DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n    this.collisionChecker = {};\n    var initialModel = [];\n    var checkForAdjustment;\n    var collisionModels = [];\n    var swappingAvailable;\n    if (this.mainElement && this.isRenderComplete) {\n      initialModel = this.resetLayout(panelModel);\n    } else {\n      initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n    }\n    if (initialModel.length > 0) {\n      initialModel = this.sortCollisionItems(initialModel);\n      initialModel = this.updatedModels(initialModel, panelModel, element);\n      swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n      if (swappingAvailable) {\n        this.swapItems(initialModel, element, panelModel);\n      } else {\n        for (var i = 0; i < initialModel.length; i++) {\n          var model = this.getCellInstance(initialModel[i].id);\n          this.checkingElement = initialModel[i];\n          this.spacedRowValue = null;\n          this.spacedColumnValue = null;\n          checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n          if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n            this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n            this.oldRowCol[initialModel[i].id] = {\n              row: this.spacedRowValue,\n              col: this.spacedColumnValue\n            };\n            var value = {\n              attributes: {\n                row: this.spacedRowValue.toString(),\n                col: this.spacedColumnValue.toString()\n              }\n            };\n            this.setAttributes(value, initialModel[i]);\n            this.panelPropertyChange(model, {\n              col: this.spacedColumnValue,\n              row: this.spacedRowValue\n            });\n            // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n            if (this.topAdjustable && this.allowFloating) {\n              this.updatePanels();\n              this.updateCloneArrayObject();\n            }\n            this.spacedRowValue = null;\n            if (i < initialModel.length) {\n              continue;\n            }\n          } else {\n            collisionModels.push(initialModel[i]);\n          }\n        }\n      }\n    }\n    if (collisionModels.length > 0) {\n      // eslint-disable-next-line\n      var proxy_1 = this;\n      collisionModels.forEach(function (item1) {\n        if (proxy_1.overlapElement.indexOf(item1) === -1) {\n          proxy_1.overlapElement.push(item1);\n        }\n      });\n      if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n        this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n      }\n      if (collisionModels.length > 0) {\n        this.updateRowColumn(panelModel.row, this.overlapElement, element);\n        this.checkForCompletePushing();\n      }\n    }\n    if (!this.isSubValue) {\n      this.sortedPanel();\n    }\n    this.updateRowHeight();\n    this.updateGridLines();\n  };\n  DashboardLayout.prototype.checkForCompletePushing = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n        this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n        var key = this.panels[i].id;\n        this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n      }\n    }\n  };\n  DashboardLayout.prototype.updateCollisionChecked = function (item) {\n    for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n      this.collisionChecker[item.id] = null;\n    }\n  };\n  DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n    if (!srcEle) {\n      return;\n    }\n    var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n    var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n    this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n    for (var i = 0; i < this.overlapElementClone.length; i++) {\n      if (this.overlapElementClone.length === 0) {\n        return;\n      }\n      for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n        this.collisionChecker[this.overlapElementClone[i_1].id] = {\n          ele: this.overlapElementClone[i_1],\n          row: row,\n          srcEle: srcEle\n        };\n      }\n      var updatedRow = eleRow + eleSizeY;\n      var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n      var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n      var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n      var colValue = void 0;\n      var collisionModels = void 0;\n      if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n        this.overlapSubElementClone.push(srcEle);\n      }\n      if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n        this.overlapSubElementClone.push(this.overlapElementClone[i]);\n      }\n      if (collisionY > 1 || collisionX > 1) {\n        var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n        colValue = overlapElementModel.col;\n        var ele_1 = document.getElementById(overlapElementModel.id);\n        for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n          this.isSubValue = true;\n          this.panelPropertyChange(overlapElementModel, {\n            row: overlapElementModel.row + 1\n          });\n          ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n          this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n          this.updateCollisionChecked(ele_1);\n          this.oldRowCol[ele_1.id] = {\n            row: overlapElementModel.row,\n            col: colValue\n          };\n          var panelModel = this.getCellInstance(ele_1.id);\n          this.panelPropertyChange(panelModel, {\n            col: colValue,\n            row: overlapElementModel.row\n          });\n          var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n          var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n          var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n          var excludeElements = [];\n          excludeElements.push(ele_1);\n          excludeElements.push(srcEle);\n          collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n          if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n            collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n          }\n          this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n        }\n        this.isSubValue = false;\n      } else {\n        if (this.addPanelCalled) {\n          this.addPanelCalled = false;\n        }\n        this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n        var excludeEle = [];\n        excludeEle.push(this.overlapElementClone[i]);\n        excludeEle.push(srcEle);\n        collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n        if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n          collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n        }\n        colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n        this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n        this.updateCollisionChecked(this.overlapElementClone[i]);\n        this.oldRowCol[this.overlapElementClone[i].id] = {\n          row: updatedRow,\n          col: colValue\n        };\n        var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n        this.panelPropertyChange(panelModel, {\n          col: colValue,\n          row: updatedRow\n        });\n        this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n      }\n    }\n  };\n  DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n    var panelModel = this.getCellInstance(clone.id);\n    this.panelPropertyChange(panelModel, {\n      row: updatedRow,\n      col: colValue\n    });\n    if (collisionModels.length > 0) {\n      // eslint-disable-next-line\n      var proxy_2 = this;\n      this.overlapElement = [];\n      this.shouldRestrict = true;\n      collisionModels.forEach(function (item1) {\n        proxy_2.overlapElement.push(item1);\n      });\n      var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n      for (var m = 0; m < this.overlapElement.length; m++) {\n        this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n      }\n      this.shouldRestrict = false;\n    } else {\n      if (!this.addPanelCalled) {\n        this.sortedPanel();\n      }\n      if (this.overlapSubElementClone.length > 0) {\n        var _loop_5 = function (p) {\n          var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n          var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n          var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n          var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n          if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n            collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n          }\n          // eslint-disable-next-line\n          var proxy = this_3;\n          collisionModels1.forEach(function (item1) {\n            proxy.overlapElement.push(item1);\n          });\n          if (collisionModels1.length > 0) {\n            this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n          }\n        };\n        var this_3 = this;\n        for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n          _loop_5(p);\n        }\n      }\n      this.overlapSubElementClone = [];\n    }\n  };\n  DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n    for (var i = 0; i < panelElements.length; i++) {\n      var element = panelElements[i];\n      var resizerElements = element.querySelectorAll('.e-resize');\n      for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n        detach(resizerElements[i_2]);\n      }\n    }\n  };\n  DashboardLayout.prototype.ensureDrag = function () {\n    this.checkDragging(this.dragCollection);\n    var dragPanels = this.element.querySelectorAll('.' + drag);\n    removeClass(dragPanels, [drag]);\n    this.setClasses(this.panelCollection);\n  };\n  DashboardLayout.prototype.setClasses = function (panelCollection) {\n    for (var i = 0; i < panelCollection.length; i++) {\n      var element = panelCollection[i];\n      var containerEle = panelCollection[i].querySelector('.e-panel-container');\n      if (this.allowDragging) {\n        if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n          addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n        } else {\n          addClass([element], [drag]);\n        }\n      }\n      if (this.allowResizing && this.mediaQuery ? !this.checkMediaQuery() : false) {\n        this.setResizingClass(element, containerEle);\n      }\n    }\n  };\n  DashboardLayout.prototype.setResizingClass = function (ele, container) {\n    this.availableClasses = this.resizableHandles;\n    if (!ele.querySelector(\".e-resize\")) {\n      for (var j = 0; j < this.availableClasses.length; j++) {\n        var spanEle = this.createElement('span');\n        var addClassValue = void 0;\n        container.appendChild(spanEle);\n        if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' || this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n          addClassValue = single;\n        } else {\n          addClassValue = double;\n        }\n        addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n      }\n    }\n  };\n  DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n    var value = {\n      value: {\n        sizeX: panelModel.sizeX.toString(),\n        sizeY: panelModel.sizeY.toString(),\n        minSizeX: panelModel.minSizeX.toString(),\n        minSizeY: panelModel.minSizeY.toString(),\n        maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n        maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n        row: panelModel.row.toString(),\n        col: panelModel.col.toString()\n      }\n    };\n    this.setAttributes(value, element);\n  };\n  DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n    var cellHeight = this.getCellSize()[1];\n    var cellWidth = this.getCellSize()[0];\n    var widthValue;\n    var heigthValue;\n    if (panelModel && typeof cellWidth === 'number' && typeof panelModel.sizeX === 'number' && panelModel.sizeX > 1) {\n      widthValue = panelModel.sizeX * cellWidth + (panelModel.sizeX - 1) * this.cellSpacing[0];\n    } else {\n      widthValue = cellWidth;\n    }\n    if (panelModel && typeof cellHeight === 'number' && panelModel.sizeY > 1 && typeof panelModel.sizeY === 'number') {\n      heigthValue = panelModel.sizeY * cellHeight + (panelModel.sizeY - 1) * this.cellSpacing[1];\n    } else {\n      heigthValue = formatUnit(cellHeight);\n    }\n    return [heigthValue, widthValue];\n  };\n  DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n    var value = [];\n    var elementTop = parseFloat(args.element.style.top);\n    var elementLeft = parseFloat(args.element.style.left);\n    var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n    var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n    value = [row, col];\n    return value;\n  };\n  DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n    var changedPanels = [];\n    if (this.removeAllCalled) {\n      changedPanels = [];\n    } else {\n      for (var i = 0; i < this.panels.length; i++) {\n        if ((!isNullOrUndefined(added) ? this.panels[i].id !== added[0].id : true) && (!isNullOrUndefined(removed) ? this.panels[i].id !== removed[0].id : true) && (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n          changedPanels.push(this.panels[i]);\n        }\n      }\n    }\n    if (changedPanels.length > 0 || this.removeAllCalled) {\n      var changedArgs = {\n        changedPanels: changedPanels,\n        isInteracted: isInteracted,\n        addedPanels: !isNullOrUndefined(added) ? added : [],\n        removedPanels: !isNullOrUndefined(removed) ? removed : []\n      };\n      this.trigger('change', changedArgs);\n    }\n  };\n  DashboardLayout.prototype.enableDraggingContent = function (collections) {\n    var _this = this;\n    for (var i = 0; i < collections.length; i++) {\n      var abortArray = ['.e-resize', '.' + dragRestrict];\n      var cellElement = collections[i];\n      {\n        this.dragobj = new Draggable(cellElement, {\n          preventDefault: false,\n          clone: false,\n          dragArea: this.element,\n          isDragScroll: true,\n          handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n          abort: abortArray,\n          dragStart: this.onDraggingStart.bind(this),\n          dragStop: function (args) {\n            var model = _this.getCellInstance(_this.mainElement.id);\n            if (_this.allowPushing && _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n              _this.setHolderPosition(args);\n              _this.setPanelPosition(_this.mainElement, model.row, model.col);\n              _this.updatePanelLayout(_this.mainElement, model);\n            } else {\n              _this.setPanelPosition(_this.mainElement, model.row, model.col);\n            }\n            _this.mainElement = null;\n            var item = _this.getPanelBase(args);\n            if (_this.shadowEle) {\n              detach(_this.shadowEle);\n            }\n            removeClass([_this.element], [preventSelect]);\n            removeClass([args.element], [dragging]);\n            _this.shadowEle = null;\n            args.element.classList.remove('e-dragging');\n            var row = _this.getRowColumnDragValues(args)[0];\n            var col = _this.getRowColumnDragValues(args)[1];\n            var panelModel = _this.getCellInstance(args.element.id);\n            if (_this.allowPushing && _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n              _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                row: row,\n                col: col\n              });\n              _this.oldRowCol[args.element.id].row = row;\n              _this.oldRowCol[args.element.id].col = col;\n              _this.setAttributes({\n                value: {\n                  col: col.toString(),\n                  row: row.toString()\n                }\n              }, args.element);\n              _this.sortedPanel();\n            } else {\n              _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                row: _this.oldRowCol[args.element.id].row,\n                col: _this.oldRowCol[args.element.id].col\n              });\n              args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n              args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n              _this.sortedPanel();\n            }\n            var panelInstance = _this.getCellInstance(args.element.id);\n            _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n            _this.updatePanels();\n            _this.updateCloneArrayObject();\n            _this.checkForChanges(true);\n            _this.dragStopEventArgs = {\n              event: args.event,\n              element: args.element\n            };\n            _this.trigger('dragStop', args);\n            _this.resizeEvents();\n            _this.rows = _this.maxRow(true);\n            _this.setHeightWidth();\n            _this.updateDragArea();\n          },\n          drag: function (args) {\n            _this.draggedEventArgs = {\n              event: args.event,\n              element: args.element,\n              target: closest(args.target, '.e-panel')\n            };\n            _this.trigger('drag', _this.draggedEventArgs);\n            _this.onDragStart(args);\n          }\n        });\n        if (this.dragCollection.indexOf(this.dragobj) === -1) {\n          this.dragCollection.push(this.dragobj);\n        }\n      }\n    }\n  };\n  DashboardLayout.prototype.updatePanels = function () {\n    this.moveItemsUpwards();\n    this.updateOldRowColumn();\n    this.sortedPanel();\n  };\n  DashboardLayout.prototype.updateDragArea = function () {\n    this.dragCollection.forEach(function (dragobj) {\n      // eslint-disable-next-line\n      dragobj.setDragArea();\n    });\n  };\n  DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n    if (row + sizeY >= this.rows) {\n      this.rows = this.rows + addRows;\n      this.setHeightWidth();\n    }\n  };\n  DashboardLayout.prototype.onDraggingStart = function (args) {\n    var dragArgs = args;\n    this.trigger('dragStart', dragArgs, function (dragArgs) {});\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.mainElement = args.element;\n    this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n    var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n    this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n    var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n    this.updateDragArea();\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    this.shadowEle.classList.add('e-holder-transition');\n    setStyle(this.shadowEle, {\n      'position': 'absolute'\n    });\n    addClass([this.element], [preventSelect]);\n    addClass([args.element], [dragging]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.shadowEle = document.querySelector('.e-holder');\n    this.shadowEle.style.height = this.getCellInstance(args.element.id).sizeY * this.cellSize[1] + 'px';\n    this.shadowEle.style.width = this.getCellInstance(args.element.id).sizeX * this.cellSize[0] + 'px';\n    var panelInstance = this.getCellInstance(args.element.id);\n    this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n  };\n  // eslint-disable-next-line\n  DashboardLayout.prototype.cloneModels = function (source, target) {\n    if (target === undefined) {\n      target = [];\n    }\n    for (var i = 0; i < source.length; i++) {\n      // tslint:disable-next-line\n      if (!target[i]) {\n        target[i] = {};\n      }\n      // eslint-disable-next-line guard-for-in\n      for (var k in source[i]) {\n        target[i][k] = source[i][k];\n      }\n    }\n    return target;\n  };\n  DashboardLayout.prototype.onDragStart = function (args) {\n    var endCol;\n    var endRow;\n    var dragCol;\n    var col = dragCol = this.getRowColumnDragValues(args)[1];\n    var row = this.getRowColumnDragValues(args)[0];\n    if (col < 0 || row < 0) {\n      return;\n    }\n    this.panelPropertyChange(this.getCellInstance(args.element.id), {\n      row: row,\n      col: col\n    });\n    var panelModel = this.getCellInstance(args.element.id);\n    this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n    this.updateDragArea();\n    if (this.allowPushing) {\n      this.setAttributes({\n        value: {\n          col: col.toString(),\n          row: row.toString()\n        }\n      }, args.element);\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      endCol = this.oldRowCol[args.element.id].col;\n      endRow = this.oldRowCol[args.element.id].row;\n      this.oldRowCol[args.element.id] = {\n        row: row,\n        col: col\n      };\n      this.updateOldRowColumn();\n      if (this.startCol !== endCol || this.startRow !== endRow) {\n        this.setHolderPosition(args);\n        if (this.startCol !== endCol) {\n          this.startRow = endRow;\n        }\n        if (this.startRow !== endRow) {\n          this.startCol = endCol;\n        }\n        if (this.allowPushing) {\n          this.mainElement = args.element;\n          var model = panelModel;\n          this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n          if (panelModel.col >= this.checkColumnValue) {\n            this.checkCollision = [];\n          }\n          this.updatePanelLayout(args.element, panelModel);\n          this.moveItemsUpwards();\n        }\n      }\n    }\n    if (this.allowPushing !== false) {\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n    }\n    if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      this.setAttributes({\n        value: {\n          col: col.toString(),\n          row: row.toString()\n        }\n      }, args.element);\n    }\n    if (this.startCol !== dragCol) {\n      this.startCol = endCol;\n      this.moveItemsUpwards();\n    }\n    if (!this.allowPushing) {\n      this.setHolderPosition(args);\n    }\n    this.removeResizeClasses(this.panelCollection);\n    this.setClasses(this.panelCollection);\n    if (this.allowPushing === false) {\n      return;\n    }\n  };\n  DashboardLayout.prototype.getPanelBase = function (args) {\n    var item;\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === (args.element && args.element.id || args)) {\n        item = this.panelCollection[i];\n      }\n    }\n    return item;\n  };\n  DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n    if (excludeItems && !(excludeItems instanceof Array)) {\n      excludeItems = [excludeItems];\n    }\n    var sizeY = 1;\n    while (row > -1) {\n      var sizeX = 1;\n      var col = column;\n      while (col > -1) {\n        var items = this.sortedArray[row];\n        if (items) {\n          var item = items[col];\n          if (item && (!excludeItems || excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n            return item;\n          }\n        }\n        ++sizeX;\n        --col;\n      }\n      --row;\n      ++sizeY;\n    }\n    return null;\n  };\n  DashboardLayout.prototype.setHolderPosition = function (args) {\n    var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    var col = parseInt(args.element.getAttribute('data-col'), 10);\n    var row = parseInt(args.element.getAttribute('data-row'), 10);\n    var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n    var widthValue = this.getCellSize()[0];\n    var heightValue = this.getCellSize()[1];\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var cellSizeOne = this.getCellSize()[1];\n    var cellSizeZero = this.getCellSize()[0];\n    this.elementRef.top = this.shadowEle.style.top = top + 'px';\n    this.elementRef.left = this.shadowEle.style.left = left + 'px';\n    this.elementRef.height = this.shadowEle.style.height = sizeY * cellSizeOne + (sizeY - 1) * this.cellSpacing[1] + 'px';\n    this.elementRef.width = this.shadowEle.style.width = sizeX * cellSizeZero + (sizeX - 1) * this.cellSpacing[0] + 'px';\n  };\n  DashboardLayout.prototype.getCellInstance = function (idValue) {\n    var currentCellInstance;\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].id === idValue) {\n        currentCellInstance = this.panels[i];\n      }\n    }\n    return currentCellInstance;\n  };\n  /**\n   * Allows to add a panel to the Dashboardlayout.\n   *\n   * @param {panel} panel -  Defines the panel element.\n   *\n   * @returns void\n    */\n  DashboardLayout.prototype.addPanel = function (panel) {\n    this.panelsSizeY = 0;\n    this.maxCol();\n    if (!panel.minSizeX) {\n      panel.minSizeX = 1;\n    }\n    if (!panel.minSizeY) {\n      panel.minSizeY = 1;\n    }\n    if (!panel.id) {\n      panel.id = 'layout_' + this.panelID.toString();\n      this.panelID = this.panelID + 1;\n    }\n    // eslint-disable-next-line\n    var panelProp = new Panel(this, 'panels', panel, true);\n    this.panels.push(panelProp);\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.setMinMaxValues(panelProp);\n    if (this.maxColumnValue < panelProp.col || this.maxColumnValue < panelProp.col + panelProp.sizeX) {\n      this.panelPropertyChange(panelProp, {\n        col: this.maxColumnValue - panelProp.sizeX\n      });\n    }\n    var cell = this.renderCell(panelProp, true, null);\n    this.oldRowCol[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.cloneObject[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.updateOldRowColumn();\n    this.element.insertAdjacentElement('afterbegin', cell);\n    this.addPanelCalled = true;\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n      this.removeResizeClasses(this.panelCollection);\n    } else {\n      this.mainElement = cell;\n      if (!this.checkCollision) {\n        this.checkCollision = [];\n      }\n      this.setPanelPosition(cell, panelProp.row, panelProp.col);\n      this.updatePanelLayout(cell, panelProp);\n    }\n    this.addPanelCalled = false;\n    if (this.allowDragging && this.mediaQuery ? !this.checkMediaQuery() : false) {\n      this.enableDraggingContent([document.getElementById(panelProp.id)]);\n    }\n    this.setClasses([cell]);\n    if (this.allowFloating) {\n      this.mainElement = null;\n      this.moveItemsUpwards();\n    }\n    this.updateOldRowColumn();\n    this.sortedPanel();\n    this.updateCloneArrayObject();\n    if (this.allowResizing) {\n      for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n    this.checkForChanges(false, [panelProp]);\n  };\n  /**\n   * Allows to update a panel in the DashboardLayout.\n   *\n   * @param {panel} panel - Defines the panel element.\n   *\n   * @returns void\n    */\n  DashboardLayout.prototype.updatePanel = function (panel) {\n    this.panelsSizeY = 0;\n    if (!panel.id) {\n      return;\n    }\n    var panelInstance = this.getCellInstance(panel.id);\n    if (!panelInstance) {\n      return;\n    }\n    this.maxCol();\n    panel.col = panel.col < 1 ? 0 : panel.col > this.columns ? this.columns - 1 : panel.col;\n    if (isNullOrUndefined(panel.col)) {\n      panel.col = panelInstance.col;\n    }\n    this.panelPropertyChange(panelInstance, panel);\n    this.setMinMaxValues(panelInstance);\n    var cell = document.getElementById(panel.id);\n    this.mainElement = cell;\n    var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n    this.panelContent = cell.querySelector('.e-panel-container') ? cell.querySelector('.e-panel-container') : this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n    cell.appendChild(this.panelContent);\n    if (panelInstance.header) {\n      var headerTemplateElement = cell.querySelector('.e-panel-header') ? cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n      headerTemplateElement.innerHTML = '';\n      var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n      this.panelContent.appendChild(headerTemplateElement);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-header')) {\n        detach(cell.querySelector('.e-panel-header'));\n      }\n    }\n    if (panelInstance.content) {\n      var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n      this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') : this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n      this.panelBody.innerHTML = '';\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyle(this.panelBody, {\n        height: contentHeightValue\n      });\n      var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n      this.panelContent.appendChild(this.panelBody);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-content')) {\n        detach(cell.querySelector('.e-panel-content'));\n      }\n    }\n    this.setXYAttributes(cell, panelInstance);\n    this.setHeightAndWidth(cell, panelInstance);\n    this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n    this.updatePanelLayout(cell, panelInstance);\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    }\n    this.mainElement = null;\n    this.updatePanels();\n    this.updateCloneArrayObject();\n  };\n  DashboardLayout.prototype.updateCloneArrayObject = function () {\n    this.cloneArray = this.sortedArray;\n    this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n  };\n  /**\n   * Returns the panels object of the DashboardLayout.\n   *\n   * @returns [`PanelModel[]`](./panelModel)\n   */\n  DashboardLayout.prototype.serialize = function () {\n    var cloneModel = this.cloneModels(this.panels);\n    var customObject = [];\n    for (var i = 0; i < cloneModel.length; i++) {\n      customObject.push({\n        id: cloneModel[i].id,\n        row: cloneModel[i].row,\n        col: cloneModel[i].col,\n        sizeX: cloneModel[i].sizeX,\n        sizeY: cloneModel[i].sizeY,\n        minSizeX: cloneModel[i].minSizeX,\n        minSizeY: cloneModel[i].minSizeY,\n        maxSizeX: cloneModel[i].maxSizeX,\n        maxSizeY: cloneModel[i].maxSizeY\n      });\n    }\n    return customObject;\n  };\n  /**\n   * Removes all the panels from the DashboardLayout.\n   */\n  DashboardLayout.prototype.removeAll = function () {\n    this.removeAllCalled = true;\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      detach(this.panelCollection[i]);\n      this.clearTemplate();\n    }\n    this.removeAllPanel();\n    this.rows = 0;\n    this.gridPanelCollection = [];\n    this.setHeightWidth();\n    this.sortedPanel();\n    this.sortedArray = [];\n    this.overlapElementClone = [];\n    this.overlapElement = [];\n    this.overlapSubElementClone = [];\n    this.panelCollection = [];\n    this.oldRowCol = {};\n    this.cloneObject = {};\n    var clonedPanels = this.cloneModels(this.panels);\n    this.setProperties({\n      panels: []\n    }, true);\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, clonedPanels);\n    this.removeAllCalled = false;\n  };\n  /**\n   * Removes the panel from the DashboardLayout.\n   *\n   * @param {string} id -  Defines the panel ID.\n   *\n   * @returns void\n   */\n  DashboardLayout.prototype.removePanel = function (id) {\n    var _this = this;\n    this.panelsSizeY = 0;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var removedPanel;\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === id) {\n        detach(this.panelCollection[i]);\n        this.panelCollection.splice(i, 1);\n      }\n      if (this.panels[i].id === id) {\n        removedPanel = this.panels[i];\n        this.panels.splice(i, 1);\n        this.panelsInitialModel.splice(i, 1);\n        this.updateOldRowColumn();\n        this.sortedPanel();\n      }\n    }\n    this.updatePanels();\n    if (this.checkMediaQuery()) {\n      this.isPanelRemoved = true;\n      this.checkMediaQuerySizing();\n      this.isPanelRemoved = false;\n    }\n    this.gridPanelCollection.forEach(function (item) {\n      if (item.id === id) {\n        _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n      }\n    });\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, [removedPanel]);\n  };\n  /**\n   *Moves the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param  {number} row - Defines the row of dashboard layout.\n   *\n   * @param {number} col - Defines the column of dashboard layout.\n   *\n   * @returns void\n   */\n  DashboardLayout.prototype.movePanel = function (id, row, col) {\n    this.movePanelCalled = true;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n    if (isNaN(row) || row === null || isNaN(col) || col === null || !panelInstance) {\n      return;\n    }\n    if (col < 0) {\n      col = 0;\n    } else if (col > this.columns) {\n      col = this.columns - panelInstance.sizeX;\n    }\n    this.panelPropertyChange(panelInstance, {\n      row: row,\n      col: col\n    });\n    var ele = document.getElementById(id);\n    this.mainElement = ele;\n    this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n    this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n    this.setAttributes({\n      value: {\n        col: col.toString(),\n        row: row.toString()\n      }\n    }, ele);\n    this.updateOldRowColumn();\n    this.setPanelPosition(ele, row, col);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updateRowHeight();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.mainElement = null;\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n    this.movePanelCalled = false;\n    this.checkForChanges(false);\n  };\n  DashboardLayout.prototype.setAttributes = function (value, ele) {\n    for (var i = 0; i < Object.keys(value).length; i++) {\n      if (Object.keys(value)) {\n        if (value[Object.keys(value)[i]].col) {\n          ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n        }\n        if (value[Object.keys(value)[i]].row) {\n          ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n        }\n        if (value[Object.keys(value)[i]].sizeX) {\n          ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n        }\n        if (value[Object.keys(value)[i]].sizeY) {\n          ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n        }\n        if (value[Object.keys(value)[i]].minSizeX) {\n          ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n        }\n        if (value[Object.keys(value)[i]].minSizeY) {\n          ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n        }\n        if (value[Object.keys(value)[i]].maxSizeX) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n        }\n        if (value[Object.keys(value)[i]].maxSizeY) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n        }\n      }\n    }\n  };\n  /**\n   * Resize the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param {number} sizeX - Defines the sizeX of dashboard layout.\n   *\n   * @param {number} sizeY - Defines the sizeY of dashboard layout.\n   */\n  DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n    this.resizeCalled = true;\n    var ele = document.getElementById(id);\n    var args = {\n      event: null,\n      element: ele,\n      isInteracted: false\n    };\n    this.trigger('resizeStart', args);\n    this.panelPropertyChange(panelInstance, {\n      sizeX: sizeX,\n      sizeY: sizeY\n    });\n    this.setMinMaxValues(panelInstance);\n    this.checkMinMaxValues(panelInstance);\n    this.mainElement = ele;\n    this.setAttributes({\n      value: {\n        sizeX: panelInstance.sizeX.toString(),\n        sizeY: panelInstance.sizeY.toString()\n      }\n    }, ele);\n    this.setHeightAndWidth(ele, panelInstance);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updatePanels();\n    this.updateRowHeight();\n    this.resizeCalled = false;\n    this.trigger('resizeStop', args);\n    this.checkForChanges(false);\n  };\n  /**\n   * Destroys the DashboardLayout component\n   *\n   * @returns void\n   */\n  DashboardLayout.prototype.destroy = function () {\n    // eslint-disable-next-line\n    EventHandler.remove(window, 'resize', this.refreshListener);\n    removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n    this.element.removeAttribute('style');\n    for (var i = 0; i < this.dragCollection.length; i++) {\n      this.dragCollection[i].destroy();\n    }\n    this.removeAllPanel();\n    _super.prototype.destroy.call(this);\n    this.clearTemplate();\n    this.renderReactTemplates();\n  };\n  DashboardLayout.prototype.removeAllPanel = function () {\n    while (this.element.firstElementChild) {\n      detach(this.element.firstElementChild);\n      this.clearTemplate();\n    }\n  };\n  DashboardLayout.prototype.setEnableRtl = function () {\n    if (this.enableRtl === true) {\n      addClass([this.element], 'e-rtl');\n    } else {\n      removeClass([this.element], 'e-rtl');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * returns void\n   *\n   * @private\n   */\n  DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n    this.panelResponsiveUpdate();\n    this.setHeightWidth();\n    this.getRowColumn();\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n      this.setPanelPosition(ele, panelModel.row, panelModel.col);\n    }\n  };\n  DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n    this.removeAll();\n    this.setProperties({\n      panels: panels\n    }, true);\n    this.setOldRowCol();\n    if (this.table) {\n      this.table.remove();\n    }\n    this.initialize();\n    if (this.checkMediaQuery()) {\n      this.refresh();\n    }\n    if (this.showGridLines) {\n      this.initGridLines();\n    }\n  };\n  DashboardLayout.prototype.checkForIDValues = function (panels) {\n    var _this = this;\n    if (!isNullOrUndefined(panels) && panels.length > 0) {\n      this.panelID = 0;\n      panels.forEach(function (panel) {\n        if (!panel.id) {\n          _this.panelPropertyChange(panel, {\n            id: 'layout_' + _this.panelID.toString()\n          });\n          _this.panelID = _this.panelID + 1;\n        }\n      });\n    } else {\n      this.restrictDynamicUpdate = true;\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * returns void\n   *\n   * @private\n   */\n  // eslint-disable-next-line\n  DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var _this = this;\n    if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n      this.checkForIDValues(newProp.panels);\n    }\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'enableRtl':\n          this.setProperties({\n            enableRtl: newProp.enableRtl\n          }, true);\n          this.setEnableRtl();\n          break;\n        case 'mediaQuery':\n          this.setProperties({\n            mediaQuery: newProp.mediaQuery\n          }, true);\n          if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n          }\n          break;\n        case 'allowDragging':\n          this.setProperties({\n            allowDragging: newProp.allowDragging\n          }, true);\n          this.ensureDrag();\n          break;\n        case 'allowResizing':\n          this.setProperties({\n            allowResizing: newProp.allowResizing\n          }, true);\n          if (this.allowResizing) {\n            this.setClasses(this.panelCollection);\n            this.resizeEvents();\n          } else {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n              var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n              var element = panelElements[i];\n              EventHandler.remove(element, eventName, this.downResizeHandler);\n              if (Browser.info.name !== 'msie') {\n                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n              }\n            }\n            this.removeResizeClasses(this.panelCollection);\n          }\n          break;\n        case 'cellSpacing':\n          this.setProperties({\n            cellSpacing: newProp.cellSpacing\n          }, true);\n          this.updateCellSizeAndSpacing();\n          this.updateGridLines();\n          break;\n        case 'draggableHandle':\n          this.setProperties({\n            draggableHandle: newProp.draggableHandle\n          }, true);\n          this.ensureDrag();\n          break;\n        case 'allowFloating':\n          this.setProperties({\n            allowFloating: newProp.allowFloating\n          }, true);\n          this.moveItemsUpwards();\n          break;\n        case 'showGridLines':\n          if (this.showGridLines) {\n            this.setProperties({\n              showGridLines: newProp.showGridLines\n            }, true);\n            this.initGridLines();\n          } else {\n            if (this.table) {\n              detach(this.table);\n            }\n          }\n          break;\n        case 'allowPushing':\n          this.setProperties({\n            allowPushing: newProp.allowPushing\n          }, true);\n          break;\n        case 'panels':\n          if (!newProp.columns && !this.restrictDynamicUpdate && newProp.panels[0] && newProp.panels.length > 0) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(newProp.panels);\n            this.isRenderComplete = true;\n          } else if (!(newProp.panels[0] && newProp.panels.length)) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(this.panels);\n            this.isRenderComplete = true;\n          } else {\n            this.restrictDynamicUpdate = false;\n          }\n          break;\n        case 'columns':\n          this.isRenderComplete = false;\n          if (newProp.panels) {\n            this.updatePanelsDynamically(newProp.panels);\n          }\n          this.setProperties({\n            columns: newProp.columns\n          }, true);\n          this.panelCollection = [];\n          this.maxColumnValue = this.columns;\n          this.calculateCellSize();\n          this.panels.forEach(function (panel) {\n            _this.setMinMaxValues(panel);\n            if (_this.maxColumnValue < panel.col || _this.maxColumnValue < panel.col + panel.sizeX) {\n              var colValue = _this.maxColumnValue - panel.sizeX;\n              _this.panelPropertyChange(panel, {\n                col: colValue < 0 ? 0 : colValue\n              });\n              _this.setXYAttributes(document.getElementById(panel.id), panel);\n            }\n            _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n            _this.panelCollection.push(document.getElementById(panel.id));\n            _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n            _this.mainElement = document.getElementById(panel.id);\n            _this.updatePanelLayout(document.getElementById(panel.id), panel);\n            _this.mainElement = null;\n          });\n          this.updatePanels();\n          this.updateCloneArrayObject();\n          this.isRenderComplete = true;\n          this.updateGridLines();\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the properties to be maintained upon browser refresh.\n   *\n   * @returns string\n   * @private\n   */\n  DashboardLayout.prototype.getPersistData = function () {\n    var keyEntity = ['panels'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* istanbul ignore next */\n  DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this))) {\n          if (Array.isArray(getValue(key, this)) && key === 'panels') {\n            this.mergePanels(dataObj[key], this[key]);\n          }\n        }\n      }\n      this.isProtectedOnChange = false;\n    }\n  };\n  /* istanbul ignore next */\n  DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n    var storedColumns = sortedPanels;\n    var _loop_6 = function (i) {\n      this_4.checkForIDValues(panels);\n      var localPanel = panels.filter(function (pan) {\n        return pan.id === storedColumns[i].id;\n      })[0];\n      if (!isNullOrUndefined(localPanel)) {\n        storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n      }\n    };\n    var this_4 = this;\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_6(i);\n    }\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns string\n   *\n   * @private\n   */\n  DashboardLayout.prototype.getModuleName = function () {\n    return 'DashboardLayout';\n  };\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowDragging\", void 0);\n  __decorate([Property(false)], DashboardLayout.prototype, \"allowResizing\", void 0);\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowPushing\", void 0);\n  __decorate([Property(true)], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowFloating\", void 0);\n  __decorate([Property(1)], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n  __decorate([Property([5, 5])], DashboardLayout.prototype, \"cellSpacing\", void 0);\n  __decorate([Property(1)], DashboardLayout.prototype, \"columns\", void 0);\n  __decorate([Property(false)], DashboardLayout.prototype, \"showGridLines\", void 0);\n  __decorate([Property(null)], DashboardLayout.prototype, \"draggableHandle\", void 0);\n  __decorate([Property('en-US')], DashboardLayout.prototype, \"locale\", void 0);\n  __decorate([Property('max-width: 600px')], DashboardLayout.prototype, \"mediaQuery\", void 0);\n  __decorate([Collection([], Panel)], DashboardLayout.prototype, \"panels\", void 0);\n  __decorate([Property(['e-south-east'])], DashboardLayout.prototype, \"resizableHandles\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"change\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"dragStart\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"drag\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"dragStop\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"resize\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"created\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"destroyed\", void 0);\n  DashboardLayout = __decorate([NotifyPropertyChanges], DashboardLayout);\n  return DashboardLayout;\n}(Component);\nexport { DashboardLayout };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","NotifyPropertyChanges","isUndefined","Collection","Draggable","isNullOrUndefined","append","setValue","Event","formatUnit","ChildProperty","compile","closest","SanitizeHtmlHelper","getValue","setStyleAttribute","setStyle","addClass","detach","removeClass","EventHandler","Browser","extend","preventSelect","dragging","draggable","dragRestrict","drag","resize","resizeicon","responsive","east","west","north","south","single","double","northEast","southEast","northWest","southWest","panel","panelContent","panelContainer","disable","header","panelTransition","Panel","_super","apply","DashboardLayout","options","element","_this","call","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","mergePersistPanelData","preRender","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","top","left","height","width","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","slice","children","panels","id","panelPropertyChange","toString","row","col","createPanelElement","cssClass","idValue","ele","createElement","setAttribute","render","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","renderComplete","renderReactTemplates","table","document","tbody","classList","add","maxRow","tr","j","columns","td","setAttributes","value","sizeX","sizeY","setPanelPosition","setHeightAndWidth","appendChild","updateRowHeight","childElementCount","querySelectorAll","panelElements","setProperties","push","panelElement","enableRtl","getInlinePanels","maxCol","querySelector","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","parentElement","offsetWidth","cellAspectRatio","cellSpacing","recheck","getElementById","parseInt","getAttribute","createSubElement","className","templateParser","template","innerHTML","trim","error","sanitizedValue","sanitize","enableHtmlSanitizer","undefined","renderTemplate","content","appendElement","type","isStringTemplate","prop","templateFn","templateElements","tagName","eleVal","style","display","removeProperty","removeAttribute","compilerFn","_i","compilerFn_1","item","cellElement","panelModel","panelId","split","enabled","disablePanel","headerTemplateElement","cssClass_1","panelBody","headerHeight","getComputedStyle","contentHeightValue","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","panelProp","resizeEvents","allowResizing","eventName","info","name","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","bind","e","downHandler","lastMouseX","pageX","lastMouseY","pageY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","el","currentTarget","args","event","isInteracted","trigger","downTarget","shadowEle","elementX","parseFloat","elementY","elementWidth","elementHeight","offsetHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","indexOf","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","attributes","upTarget","remove","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","canOccupy","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","Math","ceil","floor","round","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","items","rowValue","columnValue","column","oldRow","updateLayout","contains","internalPanels","cellInstance","removeResizeClasses","checkDragging","destroy","sortPanels","_loop_1","_loop_2","this_1","filter","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","index","dashBoardCell","xValue","max","checkMinMaxValues","cells","cell","ignore","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","forEach","sizeXValue","occupiedValues","getOccupiedColumns","splice","eleOccupiedValues","checkingElement","sort","next","previous","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","isAdjustable","rightSpacing","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","collisionValue","replacable","isRightAdjudtable","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapCollision","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","checkForAdjustment","collisionModels","swappingAvailable","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","keys","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","m","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","cellHeight","cellWidth","heigthValue","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","preventDefault","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","clearTemplate","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","onPropertyChanged","newProp","oldProp","_a","getPersistData","keyEntity","addOnPersist","persistedData","data","localStorage","getItem","getModuleName","dataObj","isProtectedOnChange","keys_1","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-layouts/src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                var internalPanels = this.element.querySelectorAll(((this.element.id) ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n                for (var i = 0; i < internalPanels.length; i++) {\n                    var ele = internalPanels[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}