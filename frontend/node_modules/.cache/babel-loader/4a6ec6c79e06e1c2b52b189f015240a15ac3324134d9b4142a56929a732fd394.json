{"ast":null,"code":"/* eslint-disable jsdoc/require-returns */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { ChartLocation, RectOption, isCollide, isOverlap } from '../../common/utils/helper';\nimport { markerAnimate, appendChildElement, getVisiblePoints } from '../../common/utils/helper';\nimport { getLabelText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\nimport { measureText, TextOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn, withInBounds } from '../../common/utils/helper';\nimport { createElement, getValue, extend } from '@syncfusion/ej2-base';\nimport { getPoint, getRotatedRectangleCoordinates, isRotatedRectIntersect } from '../../common/utils/helper';\n/**\n * `DataLabel` module is used to render data label for the data point.\n */\nvar DataLabel = /** @class */function () {\n  /**\n   * Constructor for the data label module.\n   *\n   * @private\n   */\n  function DataLabel(chart) {\n    this.errorHeight = 0;\n    this.chart = chart;\n  }\n  DataLabel.prototype.initPrivateVariables = function (series, marker) {\n    var transform = '';\n    var clipPath = '';\n    var render = series.chart.renderer;\n    var index = series.index === undefined ? series.category : series.index;\n    if (series.chart.chartAreaType === 'Cartesian') {\n      transform = 'translate(' + series.clipRect.x + ',' + series.clipRect.y + ')';\n      clipPath = 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')';\n    }\n    if (marker.dataLabel.visible) {\n      series.shapeElement = render.createGroup({\n        'id': this.chart.element.id + 'ShapeGroup' + index,\n        'transform': transform,\n        'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')'\n      });\n      series.textElement = render.createGroup({\n        'id': this.chart.element.id + 'TextGroup' + index,\n        'transform': transform,\n        'clip-path': clipPath\n      });\n    }\n    this.markerHeight = series.type === 'Scatter' || marker.visible ? marker.height / 2 : 0;\n    this.commonId = this.chart.element.id + '_Series_' + index + '_Point_';\n    this.calculateErrorHeight(series, series.marker.dataLabel.position);\n    this.chartBackground = this.chart.chartArea.background === 'transparent' ? this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n  };\n  DataLabel.prototype.calculateErrorHeight = function (series, position) {\n    if (!series.errorBar.visible) {\n      return null;\n    } else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n      var direction = series.errorBar.direction;\n      var positiveHeight = this.chart.errorBarModule.positiveHeight;\n      var negativeHeight = this.chart.errorBarModule.negativeHeight;\n      if (this.isRectSeries(series)) {\n        if (position === 'Top' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Minus') {\n            this.errorHeight = negativeHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n        if (position === 'Outer' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Plus') {\n            this.errorHeight = positiveHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n      } else {\n        if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n          if ((direction === 'Both' || direction === 'Plus') && !series.chart.isTransposed) {\n            this.errorHeight = positiveHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n        if (position === 'Bottom' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Minus') {\n            this.errorHeight = negativeHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n      }\n    } else {\n      this.errorHeight = 0;\n    }\n  };\n  DataLabel.prototype.isRectSeries = function (series) {\n    return series.isRectSeries || series.type === 'RangeArea' || series.type === 'SplineRangeArea';\n  };\n  /**\n   * Render the data label for series.\n   *\n   * @returns {void}\n   */\n  DataLabel.prototype.render = function (series, chart, dataLabel) {\n    // initialize the private variable\n    this.initPrivateVariables(series, series.marker);\n    var rect;\n    var labelLocation = {\n      x: 0,\n      y: 0\n    };\n    var rgbValue;\n    var contrast;\n    var argsData;\n    var border;\n    var textSize;\n    var angle;\n    var degree;\n    this.inverted = chart.requireInvertedAxis;\n    this.yAxisInversed = series.yAxis.isAxisInverse;\n    var redraw = chart.redraw;\n    var isDataLabelOverlap = false;\n    var coordinatesAfterRotation = [];\n    var templateId = chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections';\n    var element = createElement('div', {\n      id: templateId\n    });\n    var visiblePoints = getVisiblePoints(series);\n    var point;\n    var rectCenterX;\n    var rectCenterY;\n    // Data label point iteration started\n    for (var i = 0; i < visiblePoints.length; i++) {\n      point = visiblePoints[i];\n      if (!dataLabel.showZero && (point.y !== 0 || point.y === 0 && series.emptyPointSettings.mode === 'Zero')) {\n        return null;\n      }\n      this.margin = dataLabel.margin;\n      var labelText = [];\n      var labelLength = void 0;\n      var xPos = void 0;\n      var yPos = void 0;\n      var xValue = void 0;\n      var yValue = void 0;\n      var isRender = true;\n      var clip = series.clipRect;\n      var shapeRect = void 0;\n      isDataLabelOverlap = false;\n      angle = degree = dataLabel.angle;\n      border = {\n        width: dataLabel.border.width,\n        color: dataLabel.border.color\n      };\n      var argsFont = extend({}, getValue('properties', dataLabel.font), null, true);\n      if (point.symbolLocations.length && point.symbolLocations[0] || series.type === 'BoxAndWhisker' && point.regions.length) {\n        labelText = getLabelText(point, series, chart);\n        labelLength = labelText.length;\n        for (var i_1 = 0; i_1 < labelLength; i_1++) {\n          argsData = {\n            cancel: false,\n            name: textRender,\n            series: series,\n            point: point,\n            text: labelText[i_1],\n            border: border,\n            color: dataLabel.fill,\n            template: dataLabel.template,\n            font: argsFont,\n            location: labelLocation,\n            textSize: measureText(labelText[i_1], dataLabel.font)\n          };\n          chart.trigger(textRender, argsData);\n          if (!argsData.cancel) {\n            this.fontBackground = argsData.color;\n            this.isDataLabelShape(argsData);\n            this.markerHeight = series.type === 'Bubble' ? point.regions[0].height / 2 : this.markerHeight;\n            if (argsData.template !== null) {\n              this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i_1, redraw);\n            } else {\n              if (this.chart.useGroupingSeparator && Number(argsData.text)) {\n                argsData.text = this.chart.intl.formatNumber(+argsData.text, {\n                  useGrouping: this.chart.useGroupingSeparator\n                });\n              }\n              textSize = measureText(argsData.text, dataLabel.font);\n              rect = this.calculateTextPosition(point, series, textSize, dataLabel, i_1);\n              // To check whether the polar radar chart datalabel intersects the axis label or not\n              if (chart.chartAreaType === 'PolarRadar') {\n                for (var _i = 0, _a = chart.chartAxisLayoutPanel.visibleAxisLabelRect; _i < _a.length; _i++) {\n                  var rectRegion = _a[_i];\n                  if (isOverlap(new Rect(rect.x, rect.y, rect.width, rect.height), rectRegion)) {\n                    isRender = false;\n                    break;\n                  }\n                }\n              }\n              var actualRect = new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height);\n              //let notOverlapping: boolean;\n              if (dataLabel.enableRotation) {\n                var rectCoordinates = this.getRectanglePoints(rect);\n                rectCenterX = rect.x + rect.width / 2;\n                rectCenterY = rect.y + rect.height / 2;\n                coordinatesAfterRotation = getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle);\n                isDataLabelOverlap = this.isDataLabelOverlapWithChartBound(coordinatesAfterRotation, chart, clip);\n                if (!isDataLabelOverlap) {\n                  this.chart.rotatedDataLabelCollections.push(coordinatesAfterRotation);\n                  var currentPointIndex = this.chart.rotatedDataLabelCollections.length - 1;\n                  for (var index = currentPointIndex; index >= 0; index--) {\n                    if (this.chart.rotatedDataLabelCollections[currentPointIndex] && this.chart.rotatedDataLabelCollections[index - 1] && isRotatedRectIntersect(this.chart.rotatedDataLabelCollections[currentPointIndex], this.chart.rotatedDataLabelCollections[index - 1])) {\n                      isDataLabelOverlap = true;\n                      this.chart.rotatedDataLabelCollections[currentPointIndex] = null;\n                      break;\n                    }\n                  }\n                }\n              } else {\n                isDataLabelOverlap = isCollide(rect, chart.dataLabelCollections, clip);\n              }\n              if ((!isDataLabelOverlap || dataLabel.labelIntersectAction === 'None') && isRender) {\n                chart.dataLabelCollections.push(actualRect);\n                if (this.isShape) {\n                  shapeRect = chart.renderer.drawRectangle(new RectOption(this.commonId + point.index + '_TextShape_' + i_1, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry), new Int32Array([clip.x, clip.y]));\n                  if (series.shapeElement) {\n                    series.shapeElement.appendChild(shapeRect);\n                  }\n                }\n                // Checking the font color\n                rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n                contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n                xPos = rect.x + this.margin.left + textSize.width / 2 + labelLocation.x;\n                yPos = rect.y + this.margin.top + textSize.height * 3 / 4 + labelLocation.y;\n                labelLocation = {\n                  x: 0,\n                  y: 0\n                };\n                if (angle !== 0 && dataLabel.enableRotation) {\n                  // xValue = xPos - (dataLabel.margin.left) / 2 + (dataLabel.margin.right / 2);\n                  xValue = rectCenterX;\n                  //yValue = yPos - (dataLabel.margin.top) / 2 - (textSize.height / dataLabel.margin.top) +\n                  // (dataLabel.margin.bottom) / 2;\n                  yValue = rectCenterY;\n                  degree = angle > 360 ? angle - 360 : angle < -360 ? angle + 360 : angle;\n                } else {\n                  degree = 0;\n                  xValue = rect.x;\n                  yValue = rect.y;\n                }\n                textElement(chart.renderer, new TextOption(this.commonId + point.index + '_Text_' + i_1, xPos, yPos, 'middle', argsData.text, 'rotate(' + degree + ',' + xValue + ',' + yValue + ')', 'auto', degree), argsData.font, argsData.font.color || (contrast >= 128 || series.type === 'Hilo' ? 'black' : 'white'), series.textElement, false, redraw, true, false, series.chart.duration, series.clipRect, null, null, chart.enableCanvas);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (element.childElementCount) {\n      if (!chart.enableCanvas) {\n        appendChildElement(chart.enableCanvas, getElement(chart.element.id + '_Secondary_Element'), element, chart.redraw,\n        // eslint-disable-next-line @typescript-eslint/indent\n        false, 'x', 'y', null, '', false, false, null, chart.duration);\n      } else {\n        getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n      }\n    }\n  };\n  /**\n   * Get rect coordinates\n   */\n  DataLabel.prototype.getRectanglePoints = function (rect) {\n    var loc1 = new ChartLocation(rect.x, rect.y);\n    var loc2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var loc3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var loc4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [loc1, loc2, loc3, loc4];\n  };\n  DataLabel.prototype.isDataLabelOverlapWithChartBound = function (rectCoordinates, chart, clip) {\n    for (var index = 0; index < rectCoordinates.length; index++) {\n      if (!withInBounds(rectCoordinates[index].x + clip.x, rectCoordinates[index].y + clip.y, chart.initialClipRect)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Render the data label template.\n   *\n   * @returns {void}\n   * @private\n   */\n  DataLabel.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw) {\n    this.margin = {\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    };\n    var clip = series.clipRect;\n    var childElement = createTemplate(createElement('div', {\n      id: this.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabel_' + point.index + (labelIndex ? '_' + labelIndex : ''),\n      styles: 'position: absolute;background-color:' + data.color + ';' + getFontStyle(dataLabel.font) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n    }), point.index, data.template, this.chart, point, series, this.chart.element.id + '_DataLabel', labelIndex);\n    this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw);\n  };\n  DataLabel.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw, isReactCallback) {\n    var elementRect = measureElementRect(childElement, redraw, isReactCallback);\n    var rect = this.calculateTextPosition(point, series, {\n      width: elementRect.width,\n      height: elementRect.height\n    }, dataLabel, labelIndex);\n    var clipWidth = 0;\n    var clipHeight = 0;\n    var isOverlap = false;\n    if (isReactCallback) {\n      isOverlap = elementRect.width === 0 || elementRect.height === 0; // To check the data label already overlap before react callback call\n      // clipWidth = ((series.clipRect.x + rect.x) + elementRect.width) > parentElement.clientWidth ?\n      //     (parentElement.clientWidth - (series.clipRect.x + rect.x)) : 0;\n      // clipHeight = (series.points.length - 1 === point.index) ? elementRect.height / 2 : 0;\n    }\n\n    childElement.style.left = (this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x - clipWidth + 'px';\n    childElement.style.top = (this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y + clipHeight + 'px';\n    var rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n    var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n    var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n    childElement.style.color = dataLabel.font.color || (Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000) >= 128 ? 'black' : 'white');\n    if (childElement.childElementCount && !isOverlap && (!isCollide(rect, this.chart.dataLabelCollections, clip) || dataLabel.labelIntersectAction === 'None') && (series.seriesType !== 'XY' || point.yValue === undefined || withIn(point.yValue, series.yAxis.visibleRange) || series.type.indexOf('Stacking') > -1 || series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange)) && withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y && parseFloat(childElement.style.left) >= hAxis.rect.x && parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height && parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n      this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n      appendChildElement(this.chart.enableCanvas, parentElement, childElement, redraw, true, 'left', 'top');\n      if (series.animation.enable && this.chart.animateSeries && !this.chart.enableCanvas) {\n        this.doDataLabelAnimation(series, childElement);\n      } else if (this.chart.enableCanvas) {\n        parentElement.appendChild(childElement);\n      }\n    }\n  };\n  DataLabel.prototype.calculateTextPosition = function (point, series, textSize, dataLabel, labelIndex) {\n    var labelRegion = labelIndex > 1 ? series.type === 'Candle' ? point.regions[1] : point.regions[0] : point.regions[0];\n    if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n      labelRegion = labelIndex === 2 ? point.regions[1] : point.regions[2];\n    }\n    var location;\n    location = this.getLabelLocation(point, series, textSize, labelIndex);\n    var padding = 5;\n    var clipRect = series.clipRect;\n    // calculating alignment\n    if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n      this.locationX = location.x;\n      var alignmentValue = textSize.height + this.borderWidth * 2 + this.markerHeight + this.margin.bottom + this.margin.top + padding;\n      location.y = dataLabel.position === 'Auto' ? location.y : this.calculateAlignment(alignmentValue, location.y, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\n      // calculating position\n      location.y = !this.isRectSeries(series) || series.type === 'BoxAndWhisker' ? this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) : this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n      if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n        location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex, dataLabel.alignment, alignmentValue);\n      }\n    } else {\n      this.locationY = location.y;\n      var alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n      location.x = dataLabel.position === 'Auto' ? location.x : this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n      location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n    }\n    var rect = calculateRect(location, textSize, this.margin);\n    // Checking the condition whether data Label has been exist the clip rect\n    if (!(dataLabel.enableRotation === true && dataLabel.angle !== 0) && !(rect.y > clipRect.y + clipRect.height || rect.x > clipRect.x + clipRect.width || rect.x + rect.width < 0 || rect.y + rect.height < 0)) {\n      rect.x = rect.x < 0 ? padding : rect.x;\n      rect.y = rect.y < 0 && !(dataLabel.labelIntersectAction === 'None') ? padding : rect.y;\n      rect.x -= rect.x + rect.width > clipRect.x + clipRect.width ? rect.x + rect.width - (clipRect.x + clipRect.width) + padding : 0;\n      rect.y -= rect.y + rect.height > clipRect.y + clipRect.height ? rect.y + rect.height - (clipRect.y + clipRect.height) + padding : 0;\n      this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    }\n    return rect;\n  };\n  // Calculation label location for polar column draw types\n  DataLabel.prototype.calculatePolarRectPosition = function (location, position, series, point, size, labelIndex, alignment, alignmentValue) {\n    var padding = 5;\n    var columnRadius;\n    var chartWidth = this.chart.availableSize.width;\n    var alignmentSign = alignment === 'Center' ? 0 : alignment === 'Far' ? 1 : -1;\n    var angle = point.regionData.startAngle - 0.5 * Math.PI + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n    if (labelIndex === 0) {\n      columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius : point.regionData.radius;\n    } else {\n      columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius : point.regionData.radius;\n    }\n    this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    if (series.drawType.indexOf('Stacking') > -1) {\n      position = position === 'Outer' ? 'Top' : position;\n    } else if (series.drawType.indexOf('Range') > -1) {\n      position = position === 'Outer' || position === 'Top' ? position : 'Auto';\n    }\n    if (position === 'Outer') {\n      columnRadius = labelIndex === 0 ? columnRadius + 2 * padding + this.markerHeight : columnRadius - 2 * padding - this.markerHeight;\n    } else if (position === 'Middle') {\n      columnRadius = columnRadius / 2 + padding;\n      if (series.drawType === 'StackingColumn') {\n        columnRadius = point.regionData.innerRadius + (point.regionData.radius - point.regionData.innerRadius) / 2 + padding - size.height / 2;\n      }\n    } else if (position === 'Top') {\n      columnRadius = labelIndex === 0 ? columnRadius - 2 * padding - this.markerHeight : columnRadius + 2 * padding + this.markerHeight;\n    } else if (position === 'Bottom') {\n      columnRadius = 2 * padding;\n      columnRadius += series.drawType === 'StackingColumn' ? point.regionData.innerRadius + this.markerHeight : 0;\n    } else {\n      if (labelIndex === 0) {\n        columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding : series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n      } else {\n        columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n      }\n    }\n    columnRadius += alignmentValue * alignmentSign;\n    location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\n    // To change x location based on text anchor for column and stackingcolumn chart\n    if (series.drawType === 'StackingColumn') {\n      location.x = location.x < chartWidth / 2 ? location.x + size.width / 2 : location.x > chartWidth / 2 ? location.x - size.width / 2 : location.x;\n    } else if (series.drawType === 'Column') {\n      location.x = location.x < chartWidth / 2 ? location.x - size.width / 2 : location.x > chartWidth / 2 ? location.x + size.width / 2 : location.x;\n    }\n    location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n    return location;\n  };\n  /**\n   * Get the label location\n   */\n  DataLabel.prototype.getLabelLocation = function (point, series, textSize, labelIndex) {\n    var location = new ChartLocation(0, 0);\n    var labelRegion = series.type === 'Candle' && labelIndex > 1 ? point.regions[1] : point.regions[0];\n    if (series.type === 'HiloOpenClose') {\n      labelRegion = labelIndex === 2 ? point.regions[1] : point.regions[2];\n    }\n    var xAxis = series.xAxis;\n    var yAxis = series.yAxis;\n    var isInverted = series.chart.requireInvertedAxis;\n    if (series.type === 'BoxAndWhisker') {\n      this.markerHeight = 0;\n      switch (labelIndex) {\n        case 0:\n          location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n          break;\n        case 1:\n          location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n          break;\n        case 2:\n          location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n          break;\n        case 3:\n          location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n          break;\n        case 4:\n          location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n          break;\n        default:\n          {\n            location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n            this.markerHeight = series.marker.height / 2;\n            break;\n          }\n      }\n      if (isInverted) {\n        location.y = point.regions[0].y + point.regions[0].height / 2;\n      } else {\n        location.x = point.regions[0].x + point.regions[0].width / 2;\n      }\n    } else if (labelIndex === 0 || labelIndex === 1) {\n      location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n    } else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n      location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n    } else if (isInverted) {\n      location = {\n        x: labelRegion.x + labelRegion.width / 2,\n        y: labelRegion.y\n      };\n    } else {\n      location = {\n        x: labelRegion.x + labelRegion.width,\n        y: labelRegion.y + labelRegion.height / 2\n      };\n    }\n    //Aligning the label at the beginning of the tick, when tick size is less than text size\n    if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n      if (series.chart.requireInvertedAxis) {\n        var height = labelRegion.height;\n        location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n      } else {\n        var width = labelRegion.width;\n        location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n      }\n    }\n    return location;\n  };\n  DataLabel.prototype.calculateRectPosition = function (labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n    if (series.chart.chartAreaType === 'PolarRadar') {\n      return null;\n    }\n    var padding = 5;\n    var margin = this.margin;\n    var textLength = !this.inverted ? textSize.height : textSize.width;\n    var extraSpace = this.borderWidth + textLength / 2 + (position !== 'Outer' && series.type.indexOf('Column') > -1 && Math.abs(rect.height - textSize.height) < padding ? 0 : padding);\n    if (series.type === 'StackingColumn100' || series.type === 'StackingBar100') {\n      position = position === 'Outer' ? 'Top' : position;\n    } else if (series.type.indexOf('Range') > -1) {\n      position = position === 'Outer' || position === 'Top' ? position : 'Auto';\n    } else if (series.type === 'Waterfall') {\n      position = position === 'Auto' ? 'Middle' : position;\n    }\n    switch (position) {\n      case 'Bottom':\n        labelLocation = !this.inverted ? isMinus ? labelLocation - rect.height + extraSpace + margin.top : labelLocation + rect.height - extraSpace - margin.bottom : isMinus ? labelLocation + rect.width - extraSpace - margin.left : labelLocation - rect.width + extraSpace + margin.right;\n        break;\n      case 'Middle':\n        labelLocation = labelLocation = !this.inverted ? isMinus ? labelLocation - rect.height / 2 : labelLocation + rect.height / 2 : isMinus ? labelLocation + rect.width / 2 : labelLocation - rect.width / 2;\n        break;\n      case 'Auto':\n        labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n        break;\n      default:\n        extraSpace += this.errorHeight;\n        labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, extraSpace, isMinus);\n        break;\n    }\n    var check = !this.inverted ? labelLocation < rect.y || labelLocation > rect.y + rect.height : labelLocation < rect.x || labelLocation > rect.x + rect.width;\n    this.fontBackground = check ? this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground : this.fontBackground === 'transparent' ? point.color || series.interior : this.fontBackground;\n    var seriesLength = series.chart.series.length;\n    if (position === 'Outer' && series.type.indexOf('Stacking') > -1 && seriesLength - 1 > series.index) {\n      var nextSeries = void 0;\n      var nextSeriesPoint = void 0;\n      for (var i = series.index + 1; i < seriesLength; i++) {\n        nextSeries = series.chart.series[i];\n        nextSeriesPoint = nextSeries.points[point.index];\n        if (nextSeries.type.indexOf('Stacking') > -1 && nextSeries.type.indexOf('100') === -1) {\n          this.fontBackground = nextSeriesPoint && (nextSeriesPoint.yValue < 0 && point.yValue < 0 || nextSeriesPoint.yValue > 0 && point.yValue > 0) ? nextSeriesPoint ? nextSeriesPoint.color : nextSeries.interior : this.fontBackground;\n          break;\n        }\n      }\n    }\n    return labelLocation;\n  };\n  DataLabel.prototype.calculatePathPosition = function (labelLocation, position, series, point, size, labelIndex) {\n    var padding = 5;\n    if (series.type.indexOf('Area') > -1 && series.type !== 'RangeArea' && series.type !== 'SplineRangeArea' && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n      position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n    }\n    this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    switch (position) {\n      case 'Top':\n      case 'Outer':\n        labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding - this.errorHeight;\n        break;\n      case 'Bottom':\n        labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding + this.errorHeight;\n        break;\n      case 'Auto':\n        labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n        break;\n    }\n    return labelLocation;\n  };\n  DataLabel.prototype.isDataLabelShape = function (style) {\n    this.isShape = style.color !== 'transparent' || style.border.width > 0;\n    this.borderWidth = style.border.width;\n    if (!this.isShape) {\n      this.margin = {\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0\n      };\n    }\n  };\n  DataLabel.prototype.calculateRectActualPosition = function (labelLocation, rect, isMinus, series, size, labelIndex, point) {\n    var location;\n    var labelRect;\n    var isOverLap = true;\n    var position = 0;\n    var collection = this.chart.dataLabelCollections;\n    var finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n    while (isOverLap && position < finalPosition) {\n      var actualPosition = this.getPosition(position);\n      if (series.type.indexOf('Stacking') > -1 && actualPosition === 'Outer') {\n        actualPosition = 'Top';\n        position++;\n      }\n      location = this.calculateRectPosition(labelLocation, rect, isMinus, actualPosition, series, size, labelIndex, point);\n      if (!this.inverted) {\n        labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n        isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n      } else {\n        labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n        isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.x + labelRect.width > series.clipRect.width;\n      }\n      position++;\n    }\n    return location;\n  };\n  // alignment calculation assigned here\n  DataLabel.prototype.calculateAlignment = function (value, labelLocation, alignment, isMinus) {\n    switch (alignment) {\n      case 'Far':\n        labelLocation = !this.inverted ? isMinus ? labelLocation + value : labelLocation - value : isMinus ? labelLocation - value : labelLocation + value;\n        break;\n      case 'Near':\n        labelLocation = !this.inverted ? isMinus ? labelLocation - value : labelLocation + value : isMinus ? labelLocation + value : labelLocation - value;\n        break;\n      // eslint-disable-next-line no-self-assign\n      case 'Center':\n        labelLocation = labelLocation;\n        break;\n    }\n    return labelLocation;\n  };\n  //calculation for top and outer position of datalabel for rect series\n  DataLabel.prototype.calculateTopAndOuterPosition = function (location, rect, position, series, index, extraSpace, isMinus) {\n    var margin = this.margin;\n    var top;\n    switch (series.type) {\n      case 'RangeColumn':\n      case 'RangeArea':\n      case 'SplineRangeArea':\n      case 'Hilo':\n        top = index === 0 && !this.yAxisInversed || index === 1 && this.yAxisInversed;\n        location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n        break;\n      case 'Candle':\n        top = (index === 0 || index === 2) && !this.yAxisInversed || (index === 1 || index === 3) && this.yAxisInversed;\n        location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n        break;\n      case 'HiloOpenClose':\n        if (index <= 1) {\n          top = index === 0 && !this.yAxisInversed || index === 1 && this.yAxisInversed;\n          location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n        } else {\n          if (this.yAxisInversed) {\n            location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n          } else {\n            location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n          }\n        }\n        break;\n      default:\n        if (isMinus && position === 'Top' || !isMinus && position === 'Outer') {\n          location = !this.inverted ? location - extraSpace - margin.bottom - this.markerHeight : location + extraSpace + margin.left + this.markerHeight;\n        } else {\n          location = !this.inverted ? location + extraSpace + margin.top + this.markerHeight : location - extraSpace - margin.right - this.markerHeight;\n        }\n        break;\n    }\n    return location;\n  };\n  /**\n   * Updates the label location\n   */\n  DataLabel.prototype.updateLabelLocation = function (position, location, extraSpace, margin, rect, top, inside) {\n    if (inside === void 0) {\n      inside = false;\n    }\n    if (!this.inverted) {\n      if (top) {\n        location = position === 'Outer' && !inside ? location - extraSpace - margin.bottom - this.markerHeight : location + extraSpace + margin.top + this.markerHeight;\n      } else {\n        location = position === 'Outer' && !inside ? location + rect.height + extraSpace + margin.top + this.markerHeight : location + rect.height - extraSpace - margin.bottom - this.markerHeight;\n      }\n    } else {\n      if (top) {\n        location = position === 'Outer' && !inside ? location + extraSpace + margin.left + this.markerHeight : location - extraSpace - margin.right - this.markerHeight;\n      } else {\n        location = position === 'Outer' && !inside ? location - rect.width - extraSpace - margin.right - this.markerHeight : location - rect.width + extraSpace + margin.left + this.markerHeight;\n      }\n    }\n    return location;\n  };\n  DataLabel.prototype.calculatePathActualPosition = function (y, markerSize, series, point, size, labelIndex) {\n    var points = series.points;\n    var index = point.index;\n    var yValue = points[index].yValue;\n    var position;\n    var nextPoint = points.length - 1 > index ? points[index + 1] : null;\n    var previousPoint = index > 0 ? points[index - 1] : null;\n    var yLocation;\n    var isOverLap = true;\n    var labelRect;\n    var isBottom;\n    var positionIndex;\n    var collection = this.chart.dataLabelCollections;\n    if (series.type === 'Bubble') {\n      position = 'Top';\n    } else if (series.type.indexOf('Step') > -1) {\n      position = 'Top';\n      if (index) {\n        position = !previousPoint || !previousPoint.visible || yValue > previousPoint.yValue !== this.yAxisInversed || yValue === previousPoint.yValue ? 'Top' : 'Bottom';\n      }\n    } else if (series.type === 'BoxAndWhisker') {\n      if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n        position = series.yAxis.isAxisInverse ? 'Bottom' : 'Top';\n      } else if (labelIndex === 2 || labelIndex === 4) {\n        position = series.yAxis.isAxisInverse ? 'Top' : 'Bottom';\n      } else {\n        isOverLap = false;\n        position = 'Middle';\n        yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n      }\n    } else {\n      if (index === 0) {\n        position = !nextPoint || !nextPoint.visible || yValue > nextPoint.yValue || yValue < nextPoint.yValue && this.yAxisInversed ? 'Top' : 'Bottom';\n      } else if (index === points.length - 1) {\n        position = !previousPoint || !previousPoint.visible || yValue > previousPoint.yValue || yValue < previousPoint.yValue && this.yAxisInversed ? 'Top' : 'Bottom';\n      } else {\n        if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n          position = 'Top';\n        } else if (!nextPoint.visible || !previousPoint) {\n          position = nextPoint.yValue > yValue || previousPoint && previousPoint.yValue > yValue ? 'Bottom' : 'Top';\n        } else {\n          var slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n          var intersectY = slope * index + (nextPoint.yValue - slope * (index + 1));\n          position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' : intersectY < yValue ? 'Bottom' : 'Top';\n        }\n      }\n    }\n    isBottom = position === 'Bottom';\n    positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n    while (isOverLap && positionIndex < 4) {\n      yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n      labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n      isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y + labelRect.height > series.clipRect.height;\n      positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n      isBottom = false;\n    }\n    return yLocation;\n  };\n  /**\n   * Animates the data label.\n   *\n   * @param  {Series} series - Data label of the series gets animated.\n   * @returns {void}\n   */\n  DataLabel.prototype.doDataLabelAnimation = function (series, element) {\n    var shapeElements = series.shapeElement.childNodes;\n    var textNode = series.textElement.childNodes;\n    var delay = series.animation.delay + series.animation.duration;\n    var duration = series.chart.animated ? series.chart.duration : 200;\n    var location;\n    var length = element ? 1 : textNode.length;\n    var tempElement;\n    for (var i = 0; i < length; i++) {\n      tempElement = textNode[i];\n      if (element) {\n        element.style.visibility = 'hidden';\n        templateAnimate(element, delay, duration, 'ZoomIn');\n      } else {\n        location = new ChartLocation(+tempElement.getAttribute('x') + +tempElement.getAttribute('width') / 2, +tempElement.getAttribute('y') + +tempElement.getAttribute('height') / 2);\n        markerAnimate(tempElement, delay, duration, series, null, location, true);\n        if (shapeElements[i]) {\n          tempElement = shapeElements[i];\n          location = new ChartLocation(+tempElement.getAttribute('x') + +tempElement.getAttribute('width') / 2, +tempElement.getAttribute('y') + +tempElement.getAttribute('height') / 2);\n          markerAnimate(tempElement, delay, duration, series, null, location, true);\n        }\n      }\n    }\n  };\n  DataLabel.prototype.getPosition = function (index) {\n    return ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index];\n  };\n  /**\n   * Get module name.\n   */\n  DataLabel.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'DataLabel';\n  };\n  /**\n   * To destroy the dataLabel for series.\n   *\n   * @returns {void}\n   * @private\n   */\n  DataLabel.prototype.destroy = function () {\n    // Destroy method performed here\n  };\n  return DataLabel;\n}();\nexport { DataLabel };","map":{"version":3,"names":["ChartLocation","RectOption","isCollide","isOverlap","markerAnimate","appendChildElement","getVisiblePoints","getLabelText","convertHexToColor","calculateRect","textElement","colorNameToHex","measureText","TextOption","Rect","textRender","createTemplate","getFontStyle","getElement","measureElementRect","templateAnimate","withIn","withInBounds","createElement","getValue","extend","getPoint","getRotatedRectangleCoordinates","isRotatedRectIntersect","DataLabel","chart","errorHeight","prototype","initPrivateVariables","series","marker","transform","clipPath","render","renderer","index","undefined","category","chartAreaType","clipRect","x","y","element","id","dataLabel","visible","shapeElement","createGroup","markerHeight","type","height","commonId","calculateErrorHeight","position","chartBackground","chartArea","background","themeStyle","errorBar","direction","positiveHeight","errorBarModule","negativeHeight","isRectSeries","isTransposed","rect","labelLocation","rgbValue","contrast","argsData","border","textSize","angle","degree","inverted","requireInvertedAxis","yAxisInversed","yAxis","isAxisInverse","redraw","isDataLabelOverlap","coordinatesAfterRotation","templateId","visiblePoints","point","rectCenterX","rectCenterY","i","length","showZero","emptyPointSettings","mode","margin","labelText","labelLength","xPos","yPos","xValue","yValue","isRender","clip","shapeRect","width","color","argsFont","font","symbolLocations","regions","i_1","cancel","name","text","fill","template","location","trigger","fontBackground","isDataLabelShape","createDataLabelTemplate","useGroupingSeparator","Number","intl","formatNumber","useGrouping","calculateTextPosition","_i","_a","chartAxisLayoutPanel","visibleAxisLabelRect","rectRegion","actualRect","enableRotation","rectCoordinates","getRectanglePoints","isDataLabelOverlapWithChartBound","rotatedDataLabelCollections","push","currentPointIndex","dataLabelCollections","labelIntersectAction","isShape","drawRectangle","opacity","rx","ry","Int32Array","appendChild","Math","round","r","g","b","left","top","duration","enableCanvas","childElementCount","loc1","loc2","loc3","loc4","initialClipRect","parentElement","data","labelIndex","right","bottom","childElement","styles","calculateTemplateLabelSize","isReactCallback","elementRect","clipWidth","clipHeight","style","vAxis","xAxis","hAxis","seriesType","visibleRange","indexOf","stackedValues","endValues","parseFloat","animation","enable","animateSeries","doDataLabelAnimation","labelRegion","getLabelLocation","padding","locationX","alignmentValue","borderWidth","calculateAlignment","alignment","calculatePathPosition","calculateRectPosition","calculatePolarRectPosition","locationY","size","columnRadius","chartWidth","availableSize","alignmentSign","regionData","startAngle","PI","endAngle","radius","innerRadius","drawType","cos","sin","isInverted","median","maximum","minimum","upperQuartile","lowerQuartile","outliers","isMinus","textLength","extraSpace","abs","calculateRectActualPosition","calculateTopAndOuterPosition","check","interior","seriesLength","nextSeries","nextSeriesPoint","points","calculatePathActualPosition","labelRect","isOverLap","collection","finalPosition","actualPosition","getPosition","value","updateLabelLocation","inside","markerSize","nextPoint","previousPoint","yLocation","isBottom","positionIndex","slope","intersectY","shapeElements","childNodes","textNode","delay","animated","tempElement","visibility","getAttribute","getModuleName","destroy"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-charts/src/chart/series/data-label.js"],"sourcesContent":["/* eslint-disable jsdoc/require-returns */\n/* eslint-disable valid-jsdoc */\n/* eslint-disable jsdoc/require-param */\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { ChartLocation, RectOption, isCollide, isOverlap } from '../../common/utils/helper';\nimport { markerAnimate, appendChildElement, getVisiblePoints } from '../../common/utils/helper';\nimport { getLabelText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\nimport { measureText, TextOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn, withInBounds } from '../../common/utils/helper';\nimport { createElement, getValue, extend } from '@syncfusion/ej2-base';\nimport { getPoint, getRotatedRectangleCoordinates, isRotatedRectIntersect } from '../../common/utils/helper';\n/**\n * `DataLabel` module is used to render data label for the data point.\n */\nvar DataLabel = /** @class */ (function () {\n    /**\n     * Constructor for the data label module.\n     *\n     * @private\n     */\n    function DataLabel(chart) {\n        this.errorHeight = 0;\n        this.chart = chart;\n    }\n    DataLabel.prototype.initPrivateVariables = function (series, marker) {\n        var transform = '';\n        var clipPath = '';\n        var render = series.chart.renderer;\n        var index = (series.index === undefined) ? series.category : series.index;\n        if (series.chart.chartAreaType === 'Cartesian') {\n            transform = 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')';\n            clipPath = 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')';\n        }\n        if (marker.dataLabel.visible) {\n            series.shapeElement = render.createGroup({\n                'id': this.chart.element.id + 'ShapeGroup' + index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')'\n            });\n            series.textElement = render.createGroup({\n                'id': this.chart.element.id + 'TextGroup' + index,\n                'transform': transform,\n                'clip-path': clipPath\n            });\n        }\n        this.markerHeight = ((series.type === 'Scatter' || marker.visible)) ? (marker.height / 2) : 0;\n        this.commonId = this.chart.element.id + '_Series_' + index + '_Point_';\n        this.calculateErrorHeight(series, series.marker.dataLabel.position);\n        this.chartBackground = this.chart.chartArea.background === 'transparent' ?\n            this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n    };\n    DataLabel.prototype.calculateErrorHeight = function (series, position) {\n        if (!series.errorBar.visible) {\n            return null;\n        }\n        else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n            var direction = series.errorBar.direction;\n            var positiveHeight = this.chart.errorBarModule.positiveHeight;\n            var negativeHeight = this.chart.errorBarModule.negativeHeight;\n            if (this.isRectSeries(series)) {\n                if (position === 'Top' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Outer' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Plus') {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n            else {\n                if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n                    if ((direction === 'Both' || direction === 'Plus') && (!series.chart.isTransposed)) {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Bottom' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n        }\n        else {\n            this.errorHeight = 0;\n        }\n    };\n    DataLabel.prototype.isRectSeries = function (series) {\n        return series.isRectSeries || series.type === 'RangeArea' || series.type === 'SplineRangeArea';\n    };\n    /**\n     * Render the data label for series.\n     *\n     * @returns {void}\n     */\n    DataLabel.prototype.render = function (series, chart, dataLabel) {\n        // initialize the private variable\n        this.initPrivateVariables(series, series.marker);\n        var rect;\n        var labelLocation = { x: 0, y: 0 };\n        var rgbValue;\n        var contrast;\n        var argsData;\n        var border;\n        var textSize;\n        var angle;\n        var degree;\n        this.inverted = chart.requireInvertedAxis;\n        this.yAxisInversed = series.yAxis.isAxisInverse;\n        var redraw = chart.redraw;\n        var isDataLabelOverlap = false;\n        var coordinatesAfterRotation = [];\n        var templateId = chart.element.id + '_Series_' +\n            (series.index === undefined ? series.category : series.index) + '_DataLabelCollections';\n        var element = createElement('div', {\n            id: templateId\n        });\n        var visiblePoints = getVisiblePoints(series);\n        var point;\n        var rectCenterX;\n        var rectCenterY;\n        // Data label point iteration started\n        for (var i = 0; i < visiblePoints.length; i++) {\n            point = visiblePoints[i];\n            if (!dataLabel.showZero && ((point.y !== 0) || (point.y === 0 && series.emptyPointSettings.mode === 'Zero'))) {\n                return null;\n            }\n            this.margin = dataLabel.margin;\n            var labelText = [];\n            var labelLength = void 0;\n            var xPos = void 0;\n            var yPos = void 0;\n            var xValue = void 0;\n            var yValue = void 0;\n            var isRender = true;\n            var clip = series.clipRect;\n            var shapeRect = void 0;\n            isDataLabelOverlap = false;\n            angle = degree = dataLabel.angle;\n            border = { width: dataLabel.border.width, color: dataLabel.border.color };\n            var argsFont = (extend({}, getValue('properties', dataLabel.font), null, true));\n            if ((point.symbolLocations.length && point.symbolLocations[0]) ||\n                (series.type === 'BoxAndWhisker' && point.regions.length)) {\n                labelText = getLabelText(point, series, chart);\n                labelLength = labelText.length;\n                for (var i_1 = 0; i_1 < labelLength; i_1++) {\n                    argsData = {\n                        cancel: false, name: textRender, series: series,\n                        point: point, text: labelText[i_1], border: border,\n                        color: dataLabel.fill, template: dataLabel.template, font: argsFont, location: labelLocation,\n                        textSize: measureText(labelText[i_1], dataLabel.font)\n                    };\n                    chart.trigger(textRender, argsData);\n                    if (!argsData.cancel) {\n                        this.fontBackground = argsData.color;\n                        this.isDataLabelShape(argsData);\n                        this.markerHeight = series.type === 'Bubble' ? (point.regions[0].height / 2) : this.markerHeight;\n                        if (argsData.template !== null) {\n                            this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i_1, redraw);\n                        }\n                        else {\n                            if (this.chart.useGroupingSeparator && Number(argsData.text)) {\n                                argsData.text = this.chart.intl.formatNumber(+argsData.text, {\n                                    useGrouping: this.chart.useGroupingSeparator\n                                });\n                            }\n                            textSize = measureText(argsData.text, dataLabel.font);\n                            rect = this.calculateTextPosition(point, series, textSize, dataLabel, i_1);\n                            // To check whether the polar radar chart datalabel intersects the axis label or not\n                            if (chart.chartAreaType === 'PolarRadar') {\n                                for (var _i = 0, _a = chart.chartAxisLayoutPanel.visibleAxisLabelRect; _i < _a.length; _i++) {\n                                    var rectRegion = _a[_i];\n                                    if (isOverlap(new Rect(rect.x, rect.y, rect.width, rect.height), rectRegion)) {\n                                        isRender = false;\n                                        break;\n                                    }\n                                }\n                            }\n                            var actualRect = new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height);\n                            //let notOverlapping: boolean;\n                            if (dataLabel.enableRotation) {\n                                var rectCoordinates = this.getRectanglePoints(rect);\n                                rectCenterX = rect.x + (rect.width / 2);\n                                rectCenterY = (rect.y + (rect.height / 2));\n                                coordinatesAfterRotation = getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle);\n                                isDataLabelOverlap = this.isDataLabelOverlapWithChartBound(coordinatesAfterRotation, chart, clip);\n                                if (!isDataLabelOverlap) {\n                                    this.chart.rotatedDataLabelCollections.push(coordinatesAfterRotation);\n                                    var currentPointIndex = this.chart.rotatedDataLabelCollections.length - 1;\n                                    for (var index = currentPointIndex; index >= 0; index--) {\n                                        if (this.chart.rotatedDataLabelCollections[currentPointIndex] &&\n                                            this.chart.rotatedDataLabelCollections[index - 1] &&\n                                            isRotatedRectIntersect(this.chart.rotatedDataLabelCollections[currentPointIndex], this.chart.rotatedDataLabelCollections[index - 1])) {\n                                            isDataLabelOverlap = true;\n                                            this.chart.rotatedDataLabelCollections[currentPointIndex] = null;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                isDataLabelOverlap = isCollide(rect, chart.dataLabelCollections, clip);\n                            }\n                            if ((!isDataLabelOverlap || dataLabel.labelIntersectAction === 'None') && isRender) {\n                                chart.dataLabelCollections.push(actualRect);\n                                if (this.isShape) {\n                                    shapeRect = chart.renderer.drawRectangle(new RectOption(this.commonId + point.index + '_TextShape_' + i_1, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry), new Int32Array([clip.x, clip.y]));\n                                    if (series.shapeElement) {\n                                        series.shapeElement.appendChild(shapeRect);\n                                    }\n                                }\n                                // Checking the font color\n                                rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n                                contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n                                xPos = (rect.x + this.margin.left + textSize.width / 2) + labelLocation.x;\n                                yPos = (rect.y + this.margin.top + textSize.height * 3 / 4) + labelLocation.y;\n                                labelLocation = { x: 0, y: 0 };\n                                if (angle !== 0 && dataLabel.enableRotation) {\n                                    // xValue = xPos - (dataLabel.margin.left) / 2 + (dataLabel.margin.right / 2);\n                                    xValue = rectCenterX;\n                                    //yValue = yPos - (dataLabel.margin.top) / 2 - (textSize.height / dataLabel.margin.top) +\n                                    // (dataLabel.margin.bottom) / 2;\n                                    yValue = rectCenterY;\n                                    degree = (angle > 360) ? angle - 360 : (angle < -360) ? angle + 360 : angle;\n                                }\n                                else {\n                                    degree = 0;\n                                    xValue = rect.x;\n                                    yValue = rect.y;\n                                }\n                                textElement(chart.renderer, new TextOption(this.commonId + point.index + '_Text_' + i_1, xPos, yPos, 'middle', argsData.text, 'rotate(' + degree + ',' + (xValue) + ',' + (yValue) + ')', 'auto', degree), argsData.font, argsData.font.color ||\n                                    ((contrast >= 128 || series.type === 'Hilo') ? 'black' : 'white'), series.textElement, false, redraw, true, false, series.chart.duration, series.clipRect, null, null, chart.enableCanvas);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (element.childElementCount) {\n            if (!chart.enableCanvas) {\n                appendChildElement(chart.enableCanvas, getElement(chart.element.id + '_Secondary_Element'), element, chart.redraw, \n                // eslint-disable-next-line @typescript-eslint/indent\n                false, 'x', 'y', null, '', false, false, null, chart.duration);\n            }\n            else {\n                getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Get rect coordinates\n     */\n    DataLabel.prototype.getRectanglePoints = function (rect) {\n        var loc1 = new ChartLocation(rect.x, rect.y);\n        var loc2 = new ChartLocation(rect.x + rect.width, rect.y);\n        var loc3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n        var loc4 = new ChartLocation(rect.x, rect.y + rect.height);\n        return [loc1, loc2, loc3, loc4];\n    };\n    DataLabel.prototype.isDataLabelOverlapWithChartBound = function (rectCoordinates, chart, clip) {\n        for (var index = 0; index < rectCoordinates.length; index++) {\n            if (!withInBounds(rectCoordinates[index].x + clip.x, rectCoordinates[index].y + clip.y, chart.initialClipRect)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Render the data label template.\n     *\n     * @returns {void}\n     * @private\n     */\n    DataLabel.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw) {\n        this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        var clip = series.clipRect;\n        var childElement = createTemplate(createElement('div', {\n            id: this.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabel_'\n                + point.index + (labelIndex ? ('_' + labelIndex) : ''),\n            styles: 'position: absolute;background-color:' + data.color + ';' +\n                getFontStyle(dataLabel.font) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n        }), point.index, data.template, this.chart, point, series, this.chart.element.id + '_DataLabel', labelIndex);\n        this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw);\n    };\n    DataLabel.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw, isReactCallback) {\n        var elementRect = measureElementRect(childElement, redraw, isReactCallback);\n        var rect = this.calculateTextPosition(point, series, { width: elementRect.width, height: elementRect.height }, dataLabel, labelIndex);\n        var clipWidth = 0;\n        var clipHeight = 0;\n        var isOverlap = false;\n        if (isReactCallback) {\n            isOverlap = (elementRect.width === 0 || elementRect.height === 0); // To check the data label already overlap before react callback call\n            // clipWidth = ((series.clipRect.x + rect.x) + elementRect.width) > parentElement.clientWidth ?\n            //     (parentElement.clientWidth - (series.clipRect.x + rect.x)) : 0;\n            // clipHeight = (series.points.length - 1 === point.index) ? elementRect.height / 2 : 0;\n        }\n        childElement.style.left = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x - clipWidth) + 'px';\n        childElement.style.top = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y + clipHeight) + 'px';\n        var rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n        var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n        var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n        childElement.style.color = dataLabel.font.color ||\n            ((Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000)) >= 128 ? 'black' : 'white');\n        if (childElement.childElementCount && !isOverlap && (!isCollide(rect, this.chart.dataLabelCollections, clip) ||\n            dataLabel.labelIntersectAction === 'None') && (series.seriesType !== 'XY' || point.yValue === undefined ||\n            withIn(point.yValue, series.yAxis.visibleRange) || (series.type.indexOf('Stacking') > -1) ||\n            (series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange))) &&\n            withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y &&\n            parseFloat(childElement.style.left) >= hAxis.rect.x &&\n            parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height &&\n            parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n            this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n            appendChildElement(this.chart.enableCanvas, parentElement, childElement, redraw, true, 'left', 'top');\n            if (series.animation.enable && this.chart.animateSeries && !this.chart.enableCanvas) {\n                this.doDataLabelAnimation(series, childElement);\n            }\n            else if (this.chart.enableCanvas) {\n                parentElement.appendChild(childElement);\n            }\n        }\n    };\n    DataLabel.prototype.calculateTextPosition = function (point, series, textSize, dataLabel, labelIndex) {\n        var labelRegion = labelIndex > 1 ? (series.type === 'Candle') ? point.regions[1] : point.regions[0] : point.regions[0];\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        var location;\n        location = this.getLabelLocation(point, series, textSize, labelIndex);\n        var padding = 5;\n        var clipRect = series.clipRect;\n        // calculating alignment\n        if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n            this.locationX = location.x;\n            var alignmentValue = textSize.height + (this.borderWidth * 2) + this.markerHeight +\n                this.margin.bottom + this.margin.top + padding;\n            location.y = (dataLabel.position === 'Auto') ? location.y :\n                this.calculateAlignment(alignmentValue, location.y, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\n            // calculating position\n            location.y = (!this.isRectSeries(series) || series.type === 'BoxAndWhisker') ?\n                this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) :\n                this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n            if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n                location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex, dataLabel.alignment, alignmentValue);\n            }\n        }\n        else {\n            this.locationY = location.y;\n            var alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n            location.x = dataLabel.position === 'Auto' ? location.x :\n                this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n            location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n        }\n        var rect = calculateRect(location, textSize, this.margin);\n        // Checking the condition whether data Label has been exist the clip rect\n        if (!(dataLabel.enableRotation === true && dataLabel.angle !== 0) &&\n            !((rect.y > (clipRect.y + clipRect.height)) || (rect.x > (clipRect.x + clipRect.width)) ||\n                (rect.x + rect.width < 0) || (rect.y + rect.height < 0))) {\n            rect.x = rect.x < 0 ? padding : rect.x;\n            rect.y = (rect.y < 0) && !(dataLabel.labelIntersectAction === 'None') ? padding : rect.y;\n            rect.x -= (rect.x + rect.width) > (clipRect.x + clipRect.width) ? (rect.x + rect.width)\n                - (clipRect.x + clipRect.width) + padding : 0;\n            rect.y -= (rect.y + rect.height) > (clipRect.y + clipRect.height) ? (rect.y + rect.height)\n                - (clipRect.y + clipRect.height) + padding : 0;\n            this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        }\n        return rect;\n    };\n    // Calculation label location for polar column draw types\n    DataLabel.prototype.calculatePolarRectPosition = function (location, position, series, point, size, labelIndex, alignment, alignmentValue) {\n        var padding = 5;\n        var columnRadius;\n        var chartWidth = this.chart.availableSize.width;\n        var alignmentSign = (alignment === 'Center') ? 0 : (alignment === 'Far' ? 1 : -1);\n        var angle = (point.regionData.startAngle - 0.5 * Math.PI) + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n        if (labelIndex === 0) {\n            columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        else {\n            columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        if (series.drawType.indexOf('Stacking') > -1) {\n            position = position === 'Outer' ? 'Top' : position;\n        }\n        else if (series.drawType.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        if (position === 'Outer') {\n            columnRadius = labelIndex === 0 ? columnRadius + 2 * padding + this.markerHeight :\n                columnRadius - 2 * padding - this.markerHeight;\n        }\n        else if (position === 'Middle') {\n            columnRadius = columnRadius / 2 + padding;\n            if (series.drawType === 'StackingColumn') {\n                columnRadius = point.regionData.innerRadius + ((point.regionData.radius - point.regionData.innerRadius) / 2)\n                    + padding - (size.height / 2);\n            }\n        }\n        else if (position === 'Top') {\n            columnRadius = labelIndex === 0 ? columnRadius - 2 * padding - this.markerHeight :\n                columnRadius + 2 * padding + this.markerHeight;\n        }\n        else if (position === 'Bottom') {\n            columnRadius = 2 * padding;\n            columnRadius += (series.drawType === 'StackingColumn') ? (point.regionData.innerRadius + this.markerHeight) : 0;\n        }\n        else {\n            if (labelIndex === 0) {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding :\n                    series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n            }\n            else {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n            }\n        }\n        columnRadius += (alignmentValue * alignmentSign);\n        location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\n        // To change x location based on text anchor for column and stackingcolumn chart\n        if (series.drawType === 'StackingColumn') {\n            location.x = location.x < chartWidth / 2 ? location.x + size.width / 2 :\n                (location.x > chartWidth / 2 ? location.x - size.width / 2 : location.x);\n        }\n        else if (series.drawType === 'Column') {\n            location.x = location.x < chartWidth / 2 ? location.x - size.width / 2 :\n                (location.x > chartWidth / 2 ? location.x + size.width / 2 : location.x);\n        }\n        location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n        return location;\n    };\n    /**\n     * Get the label location\n     */\n    DataLabel.prototype.getLabelLocation = function (point, series, textSize, labelIndex) {\n        var location = new ChartLocation(0, 0);\n        var labelRegion = (series.type === 'Candle' && labelIndex > 1) ? point.regions[1] : point.regions[0];\n        if (series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        var xAxis = series.xAxis;\n        var yAxis = series.yAxis;\n        var isInverted = series.chart.requireInvertedAxis;\n        if (series.type === 'BoxAndWhisker') {\n            this.markerHeight = 0;\n            switch (labelIndex) {\n                case 0:\n                    location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n                    break;\n                case 1:\n                    location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n                    break;\n                case 2:\n                    location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n                    break;\n                case 3:\n                    location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n                    break;\n                case 4:\n                    location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n                    break;\n                default: {\n                    location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n                    this.markerHeight = series.marker.height / 2;\n                    break;\n                }\n            }\n            if (isInverted) {\n                location.y = point.regions[0].y + (point.regions[0].height / 2);\n            }\n            else {\n                location.x = point.regions[0].x + (point.regions[0].width / 2);\n            }\n        }\n        else if (labelIndex === 0 || labelIndex === 1) {\n            location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n        }\n        else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n            location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n        }\n        else if (isInverted) {\n            location = { x: labelRegion.x + (labelRegion.width) / 2, y: labelRegion.y };\n        }\n        else {\n            location = { x: labelRegion.x + labelRegion.width, y: labelRegion.y + (labelRegion.height) / 2 };\n        }\n        //Aligning the label at the beginning of the tick, when tick size is less than text size\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            if (series.chart.requireInvertedAxis) {\n                var height = labelRegion.height;\n                location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n            else {\n                var width = labelRegion.width;\n                location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n        }\n        return location;\n    };\n    DataLabel.prototype.calculateRectPosition = function (labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n        if (series.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        var padding = 5;\n        var margin = this.margin;\n        var textLength = !this.inverted ? textSize.height : textSize.width;\n        var extraSpace = this.borderWidth + textLength / 2 + (position !== 'Outer' && series.type.indexOf('Column') > -1 &&\n            (Math.abs(rect.height - textSize.height) < padding) ? 0 : padding);\n        if (series.type === 'StackingColumn100' || series.type === 'StackingBar100') {\n            position = (position === 'Outer') ? 'Top' : position;\n        }\n        else if (series.type.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        else if (series.type === 'Waterfall') {\n            position = position === 'Auto' ? 'Middle' : position;\n        }\n        switch (position) {\n            case 'Bottom':\n                labelLocation = !this.inverted ?\n                    isMinus ? (labelLocation - rect.height + extraSpace + margin.top) :\n                        (labelLocation + rect.height - extraSpace - margin.bottom) :\n                    isMinus ? (labelLocation + rect.width - extraSpace - margin.left) :\n                        (labelLocation - rect.width + extraSpace + margin.right);\n                break;\n            case 'Middle':\n                labelLocation = labelLocation = !this.inverted ?\n                    (isMinus ? labelLocation - (rect.height / 2) : labelLocation + (rect.height / 2)) :\n                    (isMinus ? labelLocation + (rect.width / 2) : labelLocation - (rect.width / 2));\n                break;\n            case 'Auto':\n                labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n                break;\n            default:\n                extraSpace += this.errorHeight;\n                labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, extraSpace, isMinus);\n                break;\n        }\n        var check = !this.inverted ? (labelLocation < rect.y || labelLocation > rect.y + rect.height) :\n            (labelLocation < rect.x || labelLocation > rect.x + rect.width);\n        this.fontBackground = check ?\n            (this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground)\n            : this.fontBackground === 'transparent' ? (point.color || series.interior) : this.fontBackground;\n        var seriesLength = series.chart.series.length;\n        if (position === 'Outer' && (series.type.indexOf('Stacking') > -1) && ((seriesLength - 1) > series.index)) {\n            var nextSeries = void 0;\n            var nextSeriesPoint = void 0;\n            for (var i = series.index + 1; i < seriesLength; i++) {\n                nextSeries = series.chart.series[i];\n                nextSeriesPoint = nextSeries.points[point.index];\n                if ((nextSeries.type.indexOf('Stacking') > -1) && (nextSeries.type.indexOf('100') === -1)) {\n                    this.fontBackground = (nextSeriesPoint && ((nextSeriesPoint.yValue < 0 && point.yValue < 0) ||\n                        (nextSeriesPoint.yValue > 0 && point.yValue > 0))) ? (nextSeriesPoint ? nextSeriesPoint.color :\n                        nextSeries.interior) : this.fontBackground;\n                    break;\n                }\n            }\n        }\n        return labelLocation;\n    };\n    DataLabel.prototype.calculatePathPosition = function (labelLocation, position, series, point, size, labelIndex) {\n        var padding = 5;\n        if ((series.type.indexOf('Area') > -1 && series.type !== 'RangeArea' && series.type !== 'SplineRangeArea')\n            && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n            position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        switch (position) {\n            case 'Top':\n            case 'Outer':\n                labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding -\n                    this.errorHeight;\n                break;\n            case 'Bottom':\n                labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding +\n                    this.errorHeight;\n                break;\n            case 'Auto':\n                labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n                break;\n        }\n        return labelLocation;\n    };\n    DataLabel.prototype.isDataLabelShape = function (style) {\n        this.isShape = (style.color !== 'transparent' || style.border.width > 0);\n        this.borderWidth = style.border.width;\n        if (!this.isShape) {\n            this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        }\n    };\n    DataLabel.prototype.calculateRectActualPosition = function (labelLocation, rect, isMinus, series, size, labelIndex, point) {\n        var location;\n        var labelRect;\n        var isOverLap = true;\n        var position = 0;\n        var collection = this.chart.dataLabelCollections;\n        var finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n        while (isOverLap && position < finalPosition) {\n            var actualPosition = this.getPosition(position);\n            if (series.type.indexOf('Stacking') > -1 && actualPosition === 'Outer') {\n                actualPosition = 'Top';\n                position++;\n            }\n            location = this.calculateRectPosition(labelLocation, rect, isMinus, actualPosition, series, size, labelIndex, point);\n            if (!this.inverted) {\n                labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n                isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n            }\n            else {\n                labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n                isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) ||\n                    labelRect.x + labelRect.width > series.clipRect.width;\n            }\n            position++;\n        }\n        return location;\n    };\n    // alignment calculation assigned here\n    DataLabel.prototype.calculateAlignment = function (value, labelLocation, alignment, isMinus) {\n        switch (alignment) {\n            case 'Far':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation + value : labelLocation - value) :\n                    (isMinus ? labelLocation - value : labelLocation + value);\n                break;\n            case 'Near':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation - value : labelLocation + value) :\n                    (isMinus ? labelLocation + value : labelLocation - value);\n                break;\n            // eslint-disable-next-line no-self-assign\n            case 'Center':\n                labelLocation = labelLocation;\n                break;\n        }\n        return labelLocation;\n    };\n    //calculation for top and outer position of datalabel for rect series\n    DataLabel.prototype.calculateTopAndOuterPosition = function (location, rect, position, series, index, extraSpace, isMinus) {\n        var margin = this.margin;\n        var top;\n        switch (series.type) {\n            case 'RangeColumn':\n            case 'RangeArea':\n            case 'SplineRangeArea':\n            case 'Hilo':\n                top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                break;\n            case 'Candle':\n                top = (index === 0 || index === 2) && !this.yAxisInversed\n                    || (index === 1 || index === 3) && this.yAxisInversed;\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n                break;\n            case 'HiloOpenClose':\n                if (index <= 1) {\n                    top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                    location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                }\n                else {\n                    if (this.yAxisInversed) {\n                        location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n                    }\n                    else {\n                        location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n                    }\n                }\n                break;\n            default:\n                if ((isMinus && position === 'Top') || (!isMinus && position === 'Outer')) {\n                    location = !this.inverted ? location - extraSpace - margin.bottom - this.markerHeight :\n                        location + extraSpace + margin.left + this.markerHeight;\n                }\n                else {\n                    location = !this.inverted ? location + extraSpace + margin.top + this.markerHeight :\n                        location - extraSpace - margin.right - this.markerHeight;\n                }\n                break;\n        }\n        return location;\n    };\n    /**\n     * Updates the label location\n     */\n    DataLabel.prototype.updateLabelLocation = function (position, location, extraSpace, margin, rect, top, inside) {\n        if (inside === void 0) { inside = false; }\n        if (!this.inverted) {\n            if (top) {\n                location = (position === 'Outer' && !inside) ? location - extraSpace - margin.bottom - this.markerHeight :\n                    location + extraSpace + margin.top + this.markerHeight;\n            }\n            else {\n                location = (position === 'Outer' && !inside) ? location + rect.height + extraSpace + margin.top + this.markerHeight :\n                    location + rect.height - extraSpace - margin.bottom - this.markerHeight;\n            }\n        }\n        else {\n            if (top) {\n                location = (position === 'Outer' && !inside) ? location + extraSpace + margin.left + this.markerHeight :\n                    location - extraSpace - margin.right - this.markerHeight;\n            }\n            else {\n                location = (position === 'Outer' && !inside) ? location - rect.width - extraSpace - margin.right - this.markerHeight :\n                    location - rect.width + extraSpace + margin.left + this.markerHeight;\n            }\n        }\n        return location;\n    };\n    DataLabel.prototype.calculatePathActualPosition = function (y, markerSize, series, point, size, labelIndex) {\n        var points = series.points;\n        var index = point.index;\n        var yValue = points[index].yValue;\n        var position;\n        var nextPoint = points.length - 1 > index ? points[index + 1] : null;\n        var previousPoint = index > 0 ? points[index - 1] : null;\n        var yLocation;\n        var isOverLap = true;\n        var labelRect;\n        var isBottom;\n        var positionIndex;\n        var collection = this.chart.dataLabelCollections;\n        if (series.type === 'Bubble') {\n            position = 'Top';\n        }\n        else if (series.type.indexOf('Step') > -1) {\n            position = 'Top';\n            if (index) {\n                position = (!previousPoint || !previousPoint.visible || (yValue > previousPoint.yValue !== this.yAxisInversed)\n                    || yValue === previousPoint.yValue) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (series.type === 'BoxAndWhisker') {\n            if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n                position = series.yAxis.isAxisInverse ? 'Bottom' : 'Top';\n            }\n            else if (labelIndex === 2 || labelIndex === 4) {\n                position = series.yAxis.isAxisInverse ? 'Top' : 'Bottom';\n            }\n            else {\n                isOverLap = false;\n                position = 'Middle';\n                yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n            }\n        }\n        else {\n            if (index === 0) {\n                position = (!nextPoint || !nextPoint.visible || yValue > nextPoint.yValue ||\n                    (yValue < nextPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else if (index === points.length - 1) {\n                position = (!previousPoint || !previousPoint.visible || yValue > previousPoint.yValue ||\n                    (yValue < previousPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else {\n                if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n                    position = 'Top';\n                }\n                else if (!nextPoint.visible || !previousPoint) {\n                    position = (nextPoint.yValue > yValue || (previousPoint && previousPoint.yValue > yValue)) ?\n                        'Bottom' : 'Top';\n                }\n                else {\n                    var slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n                    var intersectY = (slope * index) + (nextPoint.yValue - (slope * (index + 1)));\n                    position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' :\n                        intersectY < yValue ? 'Bottom' : 'Top';\n                }\n            }\n        }\n        isBottom = position === 'Bottom';\n        positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n        while (isOverLap && positionIndex < 4) {\n            yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n            labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n            isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect)\n                || (labelRect.y + labelRect.height) > series.clipRect.height;\n            positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n            isBottom = false;\n        }\n        return yLocation;\n    };\n    /**\n     * Animates the data label.\n     *\n     * @param  {Series} series - Data label of the series gets animated.\n     * @returns {void}\n     */\n    DataLabel.prototype.doDataLabelAnimation = function (series, element) {\n        var shapeElements = series.shapeElement.childNodes;\n        var textNode = series.textElement.childNodes;\n        var delay = series.animation.delay + series.animation.duration;\n        var duration = series.chart.animated ? series.chart.duration : 200;\n        var location;\n        var length = element ? 1 : textNode.length;\n        var tempElement;\n        for (var i = 0; i < length; i++) {\n            tempElement = textNode[i];\n            if (element) {\n                element.style.visibility = 'hidden';\n                templateAnimate(element, delay, duration, 'ZoomIn');\n            }\n            else {\n                location = new ChartLocation((+tempElement.getAttribute('x')) + ((+tempElement.getAttribute('width')) / 2), (+tempElement.getAttribute('y')) + ((+tempElement.getAttribute('height')) / 2));\n                markerAnimate(tempElement, delay, duration, series, null, location, true);\n                if (shapeElements[i]) {\n                    tempElement = shapeElements[i];\n                    location = new ChartLocation((+tempElement.getAttribute('x')) + ((+tempElement.getAttribute('width')) / 2), (+tempElement.getAttribute('y')) + ((+tempElement.getAttribute('height')) / 2));\n                    markerAnimate(tempElement, delay, duration, series, null, location, true);\n                }\n            }\n        }\n    };\n    DataLabel.prototype.getPosition = function (index) {\n        return (['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index]);\n    };\n    /**\n     * Get module name.\n     */\n    DataLabel.prototype.getModuleName = function () {\n        // Returns the module name\n        return 'DataLabel';\n    };\n    /**\n     * To destroy the dataLabel for series.\n     *\n     * @returns {void}\n     * @private\n     */\n    DataLabel.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return DataLabel;\n}());\nexport { DataLabel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}