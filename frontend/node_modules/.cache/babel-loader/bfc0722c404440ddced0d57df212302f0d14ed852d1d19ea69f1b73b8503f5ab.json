{"ast":null,"code":"import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element\n   * @hidden\n    */\n  function TableCommand(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  TableCommand.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n    this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n    this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n    this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n    this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n    this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n    this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n    this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n    this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n  };\n  TableCommand.prototype.createTable = function (e) {\n    var table = createElement('table', {\n      className: 'e-rte-table'\n    });\n    var tblBody = createElement('tbody');\n    if (!isNOU(e.item.width.width)) {\n      table.style.width = this.calculateStyleValue(e.item.width.width);\n    }\n    if (!isNOU(e.item.width.minWidth)) {\n      table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n    }\n    if (!isNOU(e.item.width.maxWidth)) {\n      table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n    }\n    var tdWid = parseInt(e.item.width.width, 10) > 100 ? 100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n    for (var i = 0; i < e.item.rows; i++) {\n      var row = createElement('tr');\n      for (var j = 0; j < e.item.columns; j++) {\n        var cell = createElement('td');\n        cell.appendChild(createElement('br'));\n        cell.style.width = tdWid + '%';\n        row.appendChild(cell);\n      }\n      tblBody.appendChild(row);\n    }\n    table.appendChild(tblBody);\n    e.item.selection.restore();\n    InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n    this.removeEmptyNode();\n    e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n    if (table.nextElementSibling === null) {\n      var insertElem = void 0;\n      if (e.enterAction === 'DIV') {\n        insertElem = createElement('div');\n        insertElem.appendChild(createElement('br'));\n      } else if (e.enterAction === 'BR') {\n        insertElem = createElement('br');\n      } else {\n        insertElem = createElement('p');\n        insertElem.appendChild(createElement('br'));\n      }\n      this.insertAfter(insertElem, table);\n    }\n    table.querySelector('td').classList.add('e-cell-select');\n    if (e.callBack) {\n      e.callBack({\n        requestType: 'Table',\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: [table]\n      });\n    }\n    return table;\n  };\n  TableCommand.prototype.calculateStyleValue = function (value) {\n    var styleValue;\n    if (typeof value === 'string') {\n      if (value.indexOf('px') || value.indexOf('%') || value.indexOf('auto')) {\n        styleValue = value;\n      } else {\n        styleValue = value + 'px';\n      }\n    } else {\n      styleValue = value + 'px';\n    }\n    return styleValue;\n  };\n  TableCommand.prototype.removeEmptyNode = function () {\n    var emptyUl = this.parent.editableElement.querySelectorAll('ul:empty, ol:empty');\n    for (var i = 0; i < emptyUl.length; i++) {\n      detach(emptyUl[i]);\n    }\n    var emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n    for (var i = 0; i < emptyLiChild.length; i++) {\n      detach(emptyLiChild[i]);\n      if (emptyLiChild.length === i + 1) {\n        emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n        i = -1;\n      }\n    }\n    var emptyLi = this.parent.editableElement.querySelectorAll('li:empty');\n    for (var i = 0; i < emptyLi.length; i++) {\n      detach(emptyLi[i]);\n    }\n  };\n  TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var a = 0;\n    var minI = e.length;\n    var maxI = 0;\n    var minJ = e[0].length;\n    var maxJ = 0;\n    //eslint-disable-next-line\n    for (var i = 0; a < selectedCells.length; a++) {\n      var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n      var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n      //eslint-disable-next-line\n      minI = Math.min(selectedCellIndex[0], minI), maxI = Math.max(minMaxIndex[0], maxI), minJ = Math.min(selectedCellIndex[1], minJ), maxJ = Math.max(minMaxIndex[1], maxJ);\n    }\n    return {\n      startRow: minI,\n      endRow: maxI,\n      startColumn: minJ,\n      endColumn: maxJ\n    };\n  };\n  TableCommand.prototype.insertRow = function (e) {\n    var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n    var selectedCell = e.item.selection.range.startContainer;\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n      return;\n    }\n    this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n      var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n      var cloneRow = lastRow.cloneNode(true);\n      cloneRow.removeAttribute('rowspan');\n      this.insertAfter(cloneRow, lastRow);\n    } else {\n      var allCells = this.getCorrespondingColumns();\n      var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n      var newRow = createElement('tr');\n      var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n      for (var i = 0; i < allCells[minVal].length; i++) {\n        if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] || !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n          if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n            allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n          }\n        } else {\n          var tdElement = createElement('td');\n          tdElement.appendChild(createElement('br'));\n          newRow.appendChild(tdElement);\n          tdElement.setAttribute('style', allCells[isHeaderSelect && isBelow ? minVal + 1 : minVal][i].getAttribute('style'));\n        }\n      }\n      // eslint-disable-next-line\n      var selectedRow = void 0;\n      if (isHeaderSelect && isBelow) {\n        selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n      } else {\n        selectedRow = this.curTable.rows[minVal];\n      }\n      // eslint-disable-next-line\n      e.item.subCommand === 'InsertRowBefore' ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : this.insertAfter(newRow, selectedRow);\n    }\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.insertColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var curRow = closest(selectedCell, 'tr');\n    var curCell;\n    var allRows = closest(curRow, 'table').rows;\n    var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n    var previousWidth = parseInt(e.item.width, 10) / curRow.querySelectorAll(':scope > td, :scope > th').length;\n    var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n    var currentTabElm = closest(curRow, 'table');\n    var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].dataset.oldWidth = thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100 + '%';\n    }\n    for (var i = 0; i < allRows.length; i++) {\n      curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n      var colTemplate = curCell.cloneNode(true);\n      colTemplate.innerHTML = '';\n      colTemplate.appendChild(createElement('br'));\n      colTemplate.removeAttribute('class');\n      colTemplate.removeAttribute('colspan');\n      colTemplate.removeAttribute('rowspan');\n      // eslint-disable-next-line\n      e.item.subCommand === 'InsertColumnLeft' ? curCell.parentElement.insertBefore(colTemplate, curCell) : this.insertAfter(colTemplate, curCell);\n      colTemplate.style.width = currentWidth.toFixed(4) + '%';\n      delete colTemplate.dataset.oldWidth;\n    }\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n      delete thTdElm[i].dataset.oldWidth;\n    }\n    e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.deleteColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n    var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n    this.curTable = closest(selectedCell, 'table');\n    var curRow = closest(selectedCell, 'tr');\n    if (curRow.querySelectorAll('th,td').length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      var deleteIndex = void 0;\n      var allCells = this.getCorrespondingColumns();\n      //eslint-disable-next-line\n      var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minCol = selectedMinMaxIndex.startColumn;\n      var maxCol = selectedMinMaxIndex.endColumn;\n      for (var i = 0; i < allCells.length; i++) {\n        var currentRow = allCells[i];\n        for (var j = 0; j < currentRow.length; j++) {\n          var currentCell = currentRow[j];\n          //eslint-disable-next-line\n          var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n          var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n          if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n            if (colSpanVal > 1) {\n              currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n            } else {\n              detach(currentCell);\n              deleteIndex = j;\n              if (Browser.isIE) {\n                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n              }\n            }\n          }\n        }\n      }\n      if (deleteIndex > -1) {\n        var rowHeadEle = tBodyHeadEle.children[rowIndex];\n        var nextFocusCell = rowHeadEle && rowHeadEle.children[deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1];\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        }\n      }\n    }\n    if (e.callBack) {\n      var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n      if (sContainer.nodeName !== 'TD') {\n        var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n        var focusNode = sContainer.children[startChildLength];\n        if (focusNode) {\n          this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n        }\n      }\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.deleteRow = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n    this.curTable = closest(selectedCell, 'table');\n    var currentRow;\n    var allCells = this.getCorrespondingColumns();\n    var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n    var maxI;\n    var j;\n    if (this.curTable.rows.length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n        currentRow = this.curTable.rows[maxI];\n        for (j = 0; j < allCells[maxI].length; j++) {\n          if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n            if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n              var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n              //eslint-disable-next-line\n              1 === rowSpanVal ? allCells[maxI][j].removeAttribute('rowspan') : allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n            }\n          }\n          if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI || allCells[maxI][j] !== allCells[maxI - 1][j])) {\n            var element = allCells[maxI][j];\n            var index = void 0;\n            for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n              if (index === 0) {\n                this.curTable.rows[maxI + 1].prepend(element);\n              } else {\n                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n              }\n            }\n          }\n        }\n        var deleteIndex = currentRow.rowIndex;\n        this.curTable.deleteRow(deleteIndex);\n        var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex] : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n        var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        } else {\n          e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n          this.curTable.querySelector('td, th').classList.add('e-cell-select');\n        }\n      }\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.removeTable = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var selectedTable = closest(selectedCell.parentElement, 'table');\n    if (selectedTable) {\n      e.item.selection.restore();\n      detach(selectedTable);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.tableHeader = function (e) {\n    var headerExit = false;\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var table = closest(selectedCell.parentElement, 'table');\n    [].slice.call(table.childNodes).forEach(function (el) {\n      if (el.nodeName === 'THEAD') {\n        headerExit = true;\n      }\n    });\n    if (table && !headerExit) {\n      var cellCount = table.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n      var header = table.createTHead();\n      var row = header.insertRow(0);\n      for (var j = 0; j < colSpanCount; j++) {\n        var th = createElement('th');\n        th.appendChild(createElement('br'));\n        row.appendChild(th);\n      }\n    } else {\n      table.deleteTHead();\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.tableVerticalAlign = function (e) {\n    if (e.item.subCommand === 'AlignTop') {\n      e.item.tableCell.style.verticalAlign = 'top';\n    } else if (e.item.subCommand === 'AlignMiddle') {\n      e.item.tableCell.style.verticalAlign = 'middle';\n    } else {\n      e.item.tableCell.style.verticalAlign = 'bottom';\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.cellMerge = function (e) {\n    if (isNOU(this.curTable)) {\n      this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    }\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    if (selectedCells.length < 2) {\n      return;\n    }\n    this.mergeCellContent();\n    var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n    var firstCell = selectedCells[0];\n    var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n    if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n      firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n    }\n    if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n      firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n    }\n    var totalWidth = 0;\n    for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n      totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n    }\n    firstCell.style.width = totalWidth + '%';\n    for (var i = 1; i <= selectedCells.length - 1; i++) {\n      detach(selectedCells[i]);\n    }\n    for (var i = 0; i < this.curTable.rows.length; i++) {\n      if (this.curTable.rows[i].innerHTML === '') {\n        detach(this.curTable.rows[i]);\n      }\n    }\n    this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n    this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n    if (this.parent.nodeSelection.range) {\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument,\n      // eslint-disable-next-line\n      this.parent.nodeSelection.range.endContainer, 0);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n    var colValue;\n    var colIndex;\n    var colMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = elements;\n    //eslint-disable-next-line\n    if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n      for (colIndex === min; colIndex <= max; colIndex++) {\n        // eslint-disable-next-line\n        if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < (index = Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1)) && eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n          for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n            if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n              /* eslint-disable */\n              for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                if (1 < (attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1) && eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                  colMin += count = Math.min(count, attrValue - 1);\n                } else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n                /* eslint-enable */\n              }\n            }\n\n            if (!count) {\n              break;\n            }\n          }\n        }\n      }\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n      }\n    }\n  };\n  TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n    var rowValue;\n    var colIndex;\n    var rowMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = ele;\n    // eslint-disable-next-line\n    if (min < (max = Math.min(max, eleArray.length - 1))) {\n      for (rowValue = min; rowValue <= max; rowValue++) {\n        // eslint-disable-next-line\n        if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0]) && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) || 1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n          for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n            if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n              for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                // eslint-disable-next-line\n                if (1 < (attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1) && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                  rowMin += count = Math.min(count, attrValue - 1);\n                }\n                // eslint-disable-next-line\n                else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n              }\n              if (!count) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n      }\n    }\n  };\n  TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n    var rowIndex;\n    var colIndex;\n    var spanCount;\n    for (rowIndex = min; rowIndex <= max; rowIndex++) {\n      for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n        // eslint-disable-next-line\n        min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] || firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] || 1 < (spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1) && (1 < spanCount - index ? elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString()) : elements[rowIndex][colIndex].removeAttribute(attr));\n      }\n    }\n  };\n  TableCommand.prototype.mergeCellContent = function () {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var innerHtml = selectedCells[0].innerHTML;\n    for (var i = 1; i < selectedCells.length - 1; i++) {\n      if ('<br>' !== selectedCells[i].innerHTML) {\n        innerHtml = innerHtml + selectedCells[i].innerHTML;\n      }\n    }\n    selectedCells[0].innerHTML = innerHtml;\n  };\n  TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    if (0 < selectedCells.length) {\n      var minRow = correspondingCells.length;\n      var maxRow = 0;\n      var minCol = correspondingCells[0].length;\n      var maxCol = 0;\n      for (var i = 0; i < selectedCells.length; i++) {\n        var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n        var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n        minRow = Math.min(currentRowCol[0], minRow);\n        maxRow = Math.max(targetRowCol[0], maxRow);\n        minCol = Math.min(currentRowCol[1], minCol);\n        maxCol = Math.max(targetRowCol[1], maxCol);\n      }\n      return {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      };\n    }\n    return null;\n  };\n  TableCommand.prototype.HorizontalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n    if (activeCellRowSpan > 1) {\n      var avgCount = Math.ceil(activeCellRowSpan / 2);\n      // eslint-disable-next-line\n      1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) : this.activeCell.removeAttribute('rowspan');\n      // eslint-disable-next-line\n      1 < activeCellRowSpan - avgCount ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n      var avgRowIndex = void 0;\n      var colIndex = void 0;\n      for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2), colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1] : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] === correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex] === correspondingCells[avgRowIndex - 1][colIndex]);) {\n        colIndex--;\n      }\n      if (colIndex === -1) {\n        // eslint-disable-next-line\n        this.curTable.rows[avgRowIndex].firstChild ? this.curTable.rows[avgRowIndex].prepend(newCell) : this.curTable.appendChild(newCell);\n      } else {\n        correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n      }\n    } else {\n      var newTrEle = createElement('tr');\n      newTrEle.appendChild(newCell);\n      var selectedRow = correspondingCells[activeCellIndex[0]];\n      for (var j = 0; j <= selectedRow.length - 1; j++) {\n        if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n          selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ? parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n        }\n      }\n      this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.VerticalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var allRows = this.curTable.rows;\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n    if (this.activeCell.tagName === 'TH' && isNaN(avgWidth)) {\n      var cellCount = this.curTable.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(this.curTable.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n      avgWidth = parseFloat((this.activeCell.offsetWidth / 2 / this.curTable.offsetWidth * 100).toFixed(1));\n    }\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingColumns = this.getCorrespondingColumns();\n    var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10);\n    if (activeCellcolSpan > 1) {\n      // eslint-disable-next-line\n      1 < Math.ceil(activeCellcolSpan / 2) ? this.activeCell.setAttribute('colspan', (activeCellcolSpan / 2).toString()) : this.activeCell.removeAttribute('colspan');\n      // eslint-disable-next-line\n      1 < activeCellcolSpan - activeCellcolSpan / 2 ? newCell.setAttribute('colspan',\n      // eslint-disable-next-line\n      (activeCellcolSpan - activeCellcolSpan / 2).toString()) : newCell.removeAttribute('colspan');\n    } else {\n      for (var i = 0; i <= allRows.length - 1; i++) {\n        if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n          var currentCell = correspondingColumns[i][activeCellIndex[1]];\n          if (currentCell !== this.activeCell) {\n            currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ? parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n          }\n        }\n      }\n    }\n    this.activeCell.style.width = avgWidth + '%';\n    newCell.style.width = avgWidth + '%';\n    this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.getCorrespondingColumns = function () {\n    var elementArray = [];\n    // eslint-disable-next-line\n    var _this = this;\n    var colspan = 0;\n    var allRows = _this.curTable.rows;\n    for (var i = 0; i <= allRows.length - 1; i++) {\n      var ele = allRows[i];\n      var index = 0;\n      for (var j = 0; j <= ele.children.length - 1; j++) {\n        /* eslint-disable */\n        var colEle = ele.children[j];\n        for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n          for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n            elementArray[rowIndex] || (elementArray[rowIndex] = []);\n            elementArray[rowIndex][colIndex] ? index++ : elementArray[rowIndex][colIndex] = colEle;\n          }\n        }\n        index += colspan;\n      }\n      /* eslint-enable */\n    }\n\n    return elementArray;\n  };\n  // eslint-disable-next-line\n  TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n    var nextIndex;\n    var nextCol;\n    for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n      if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n        nextIndex--;\n        break;\n      }\n      nextIndex++;\n    }\n    for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n      if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n        nextCol--;\n        break;\n      }\n      nextCol++;\n    }\n    return nextCol === cells[rowIndex].length && nextCol--, [nextIndex, nextCol];\n  };\n  TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n    //let value: RowCol = new RowCol();\n    for (var i = 0; i < allCells.length; i++) {\n      for (var j = 0; j < allCells[i].length; j++) {\n        if (allCells[i][j] === cell) {\n          return [i, j];\n        }\n      }\n    }\n    return [];\n  };\n  TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n    var j;\n    var k;\n    var startCell;\n    var endCell;\n    var minRowIndex = minRow;\n    var maxRowIndex = maxRow;\n    var minColIndex = minCol;\n    var maxColIndex = maxCol;\n    var minMaxValues = new MinMax();\n    for (j = minRowIndex; j <= maxRowIndex; j++) {\n      /* eslint-disable */\n      if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray))[0], startCell[1], eleArray))) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      } else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray))[0], startCell[1], eleArray))) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      }\n      for (k = minColIndex; k <= maxColIndex; k++) {\n        if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        } else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) && (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        }\n      }\n      minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n    }\n    return minMaxValues;\n    /* eslint-enable */\n  };\n\n  TableCommand.prototype.tableMove = function (e) {\n    this.activeCell = e.selectNode[0];\n    var target = e.event.target;\n    var activeCellTag = this.activeCell.tagName;\n    var targetCellTag = target.tagName;\n    this.curTable = closest(target, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      this.parent.nodeSelection.Clear(this.parent.currentDocument);\n    }\n    if (target.tagName !== 'TD' && target.tagName !== 'TH' && activeCellTag !== targetCellTag) {\n      return;\n    }\n    var activeRowIndex = Array.prototype.slice.call(this.activeCell.parentElement.parentElement.children).indexOf(this.activeCell.parentElement);\n    var activeColumnIndex = Array.prototype.slice.call(this.activeCell.parentElement.children).indexOf(this.activeCell);\n    var targetRowIndex = Array.prototype.slice.call(target.parentElement.parentElement.children).indexOf(target.parentElement);\n    var targetColumnIndex = Array.prototype.slice.call(target.parentElement.children).indexOf(target);\n    var activeCellList = this.curTable.querySelectorAll('.e-cell-select');\n    for (var i = activeCellList.length - 1; i >= 0; i--) {\n      if (this.activeCell !== activeCellList[i]) {\n        activeCellList[i].classList.remove('e-cell-select');\n      }\n    }\n    if (activeRowIndex === targetRowIndex && activeColumnIndex === targetColumnIndex) {\n      return;\n    }\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n    var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n    var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], /* eslint-disable */\n    targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n    for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n      for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n        correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n      }\n    }\n    if (this.parent.nodeSelection.range) {\n      this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, this.parent.nodeSelection.range.endContainer, 0, 0);\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, 0);\n    }\n  };\n  ;\n  return TableCommand;\n}();\nexport { TableCommand };\nvar MinMax = /** @class */function () {\n  function MinMax() {}\n  return MinMax;\n}();","map":{"version":3,"names":["createElement","closest","detach","Browser","isNullOrUndefined","isNOU","CONSTANT","InsertHtml","TableCommand","parent","addEventListener","prototype","observer","on","TABLE","createTable","INSERT_ROW","insertRow","INSERT_COLUMN","insertColumn","DELETEROW","deleteRow","DELETECOLUMN","deleteColumn","REMOVETABLE","removeTable","TABLEHEADER","tableHeader","TABLE_VERTICAL_ALIGN","tableVerticalAlign","TABLE_MERGE","cellMerge","TABLE_HORIZONTAL_SPLIT","HorizontalSplit","TABLE_VERTICAL_SPLIT","VerticalSplit","TABLE_MOVE","tableMove","e","table","className","tblBody","item","width","style","calculateStyleValue","minWidth","maxWidth","tdWid","parseInt","columns","i","rows","row","j","cell","appendChild","selection","restore","Insert","currentDocument","editableElement","removeEmptyNode","setSelectionText","querySelector","nextElementSibling","insertElem","enterAction","insertAfter","classList","add","callBack","requestType","editorMode","event","range","nodeSelection","getRange","elements","value","styleValue","indexOf","emptyUl","querySelectorAll","length","emptyLiChild","emptyLi","newNode","referenceNode","parentNode","insertBefore","nextSibling","getSelectedCellMinMaxIndex","selectedCells","curTable","a","minI","maxI","minJ","maxJ","selectedCellIndex","getCorrespondingIndex","minMaxIndex","FindIndex","Math","min","max","startRow","endRow","startColumn","endColumn","isBelow","subCommand","selectedCell","startContainer","nodeName","parentElement","toLowerCase","lastRow","cloneRow","cloneNode","removeAttribute","allCells","getCorrespondingColumns","minVal","newRow","isHeaderSelect","setAttribute","getAttribute","toString","tdElement","selectedRow","childNodes","getSelectedNodes","curRow","curCell","allRows","colIndex","Array","slice","call","previousWidth","currentWidth","currentTabElm","thTdElm","dataset","oldWidth","offsetWidth","colTemplate","innerHTML","toFixed","Number","split","nodeType","tBodyHeadEle","tagName","rowIndex","deleteIndex","selectedMinMaxIndex","minCol","maxCol","currentRow","currentCell","currentCellIndex","colSpanVal","isIE","rowHeadEle","children","nextFocusCell","sContainer","startChildLength","startOffset","focusNode","setCursorPoint","rowSpanVal","element","index","prepend","insertAdjacentElement","focusTrEle","selectedTable","headerExit","forEach","el","cellCount","childElementCount","colSpanCount","header","createTHead","th","deleteTHead","tableCell","verticalAlign","mergeCellContent","minMaxIndexes","getSelectedMinMaxIndexes","firstCell","rowSelectedCells","totalWidth","parseFloat","updateRowSpanStyle","updateColSpanStyle","endContainer","colValue","colMin","attrValue","count","eleArray","updateCellAttribute","ele","rowValue","rowMin","attr","firstIndex","spanCount","innerHtml","correspondingCells","minRow","maxRow","currentRowCol","targetRowCol","activeCell","newCell","activeCellIndex","activeCellRowSpan","avgCount","ceil","avgRowIndex","firstChild","newTrEle","avgWidth","isNaN","correspondingColumns","activeCellcolSpan","elementArray","_this","colspan","colEle","ele_1","colspan_1","rowSpan","columnIndex","cells","nextIndex","nextCol","highlightCells","k","startCell","endCell","minRowIndex","maxRowIndex","minColIndex","maxColIndex","minMaxValues","MinMax","selectNode","target","activeCellTag","targetCellTag","Clear","activeRowIndex","activeColumnIndex","targetRowIndex","targetColumnIndex","activeCellList","remove","activeIndexes","targetIndexes"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/table.js"],"sourcesContent":["import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element\n     * @hidden\n\n     */\n    function TableCommand(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    TableCommand.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n        this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n        this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n        this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n        this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n        this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n        this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n        this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n        this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n    };\n    TableCommand.prototype.createTable = function (e) {\n        var table = createElement('table', { className: 'e-rte-table' });\n        var tblBody = createElement('tbody');\n        if (!isNOU(e.item.width.width)) {\n            table.style.width = this.calculateStyleValue(e.item.width.width);\n        }\n        if (!isNOU(e.item.width.minWidth)) {\n            table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n        }\n        if (!isNOU(e.item.width.maxWidth)) {\n            table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n        }\n        var tdWid = parseInt(e.item.width.width, 10) > 100 ?\n            100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n        for (var i = 0; i < e.item.rows; i++) {\n            var row = createElement('tr');\n            for (var j = 0; j < e.item.columns; j++) {\n                var cell = createElement('td');\n                cell.appendChild(createElement('br'));\n                cell.style.width = tdWid + '%';\n                row.appendChild(cell);\n            }\n            tblBody.appendChild(row);\n        }\n        table.appendChild(tblBody);\n        e.item.selection.restore();\n        InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n        this.removeEmptyNode();\n        e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n        if (table.nextElementSibling === null) {\n            var insertElem = void 0;\n            if (e.enterAction === 'DIV') {\n                insertElem = createElement('div');\n                insertElem.appendChild(createElement('br'));\n            }\n            else if (e.enterAction === 'BR') {\n                insertElem = createElement('br');\n            }\n            else {\n                insertElem = createElement('p');\n                insertElem.appendChild(createElement('br'));\n            }\n            this.insertAfter(insertElem, table);\n        }\n        table.querySelector('td').classList.add('e-cell-select');\n        if (e.callBack) {\n            e.callBack({\n                requestType: 'Table',\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: [table]\n            });\n        }\n        return table;\n    };\n    TableCommand.prototype.calculateStyleValue = function (value) {\n        var styleValue;\n        if (typeof (value) === 'string') {\n            if (value.indexOf('px') || value.indexOf('%') || value.indexOf('auto')) {\n                styleValue = value;\n            }\n            else {\n                styleValue = value + 'px';\n            }\n        }\n        else {\n            styleValue = value + 'px';\n        }\n        return styleValue;\n    };\n    TableCommand.prototype.removeEmptyNode = function () {\n        var emptyUl = this.parent.editableElement.querySelectorAll('ul:empty, ol:empty');\n        for (var i = 0; i < emptyUl.length; i++) {\n            detach(emptyUl[i]);\n        }\n        var emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n        for (var i = 0; i < emptyLiChild.length; i++) {\n            detach(emptyLiChild[i]);\n            if (emptyLiChild.length === i + 1) {\n                emptyLiChild = this.parent.editableElement.querySelectorAll('li *:empty');\n                i = -1;\n            }\n        }\n        var emptyLi = this.parent.editableElement.querySelectorAll('li:empty');\n        for (var i = 0; i < emptyLi.length; i++) {\n            detach(emptyLi[i]);\n        }\n    };\n    TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var a = 0;\n        var minI = e.length;\n        var maxI = 0;\n        var minJ = e[0].length;\n        var maxJ = 0;\n        //eslint-disable-next-line\n        for (var i = 0; a < selectedCells.length; a++) {\n            var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n            var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n            //eslint-disable-next-line\n            minI = Math.min(selectedCellIndex[0], minI),\n                maxI = Math.max(minMaxIndex[0], maxI),\n                minJ = Math.min(selectedCellIndex[1], minJ),\n                maxJ = Math.max(minMaxIndex[1], maxJ);\n        }\n        return {\n            startRow: minI,\n            endRow: maxI,\n            startColumn: minJ,\n            endColumn: maxJ\n        };\n    };\n    TableCommand.prototype.insertRow = function (e) {\n        var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n            return;\n        }\n        this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n            var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n            var cloneRow = lastRow.cloneNode(true);\n            cloneRow.removeAttribute('rowspan');\n            this.insertAfter(cloneRow, lastRow);\n        }\n        else {\n            var allCells = this.getCorrespondingColumns();\n            var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n            var newRow = createElement('tr');\n            var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n            for (var i = 0; i < allCells[minVal].length; i++) {\n                if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] ||\n                    !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n                    if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n                        allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n                    }\n                }\n                else {\n                    var tdElement = createElement('td');\n                    tdElement.appendChild(createElement('br'));\n                    newRow.appendChild(tdElement);\n                    tdElement.setAttribute('style', allCells[(isHeaderSelect && isBelow) ? (minVal + 1) : minVal][i].getAttribute('style'));\n                }\n            }\n            // eslint-disable-next-line\n            var selectedRow = void 0;\n            if (isHeaderSelect && isBelow) {\n                selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n            }\n            else {\n                selectedRow = this.curTable.rows[minVal];\n            }\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertRowBefore') ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                (isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                    this.insertAfter(newRow, selectedRow));\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.insertColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var curRow = closest(selectedCell, 'tr');\n        var curCell;\n        var allRows = closest((curRow), 'table').rows;\n        var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n        var previousWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length);\n        var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n        var currentTabElm = closest(curRow, 'table');\n        var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].dataset.oldWidth = (thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100) + '%';\n        }\n        for (var i = 0; i < allRows.length; i++) {\n            curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n            var colTemplate = curCell.cloneNode(true);\n            colTemplate.innerHTML = '';\n            colTemplate.appendChild(createElement('br'));\n            colTemplate.removeAttribute('class');\n            colTemplate.removeAttribute('colspan');\n            colTemplate.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertColumnLeft') ? curCell.parentElement.insertBefore(colTemplate, curCell) :\n                this.insertAfter(colTemplate, curCell);\n            colTemplate.style.width = currentWidth.toFixed(4) + '%';\n            delete colTemplate.dataset.oldWidth;\n        }\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n            delete thTdElm[i].dataset.oldWidth;\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n        var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n        this.curTable = closest(selectedCell, 'table');\n        var curRow = closest(selectedCell, 'tr');\n        if (curRow.querySelectorAll('th,td').length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            var deleteIndex = void 0;\n            var allCells = this.getCorrespondingColumns();\n            //eslint-disable-next-line\n            var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minCol = selectedMinMaxIndex.startColumn;\n            var maxCol = selectedMinMaxIndex.endColumn;\n            for (var i = 0; i < allCells.length; i++) {\n                var currentRow = allCells[i];\n                for (var j = 0; j < currentRow.length; j++) {\n                    var currentCell = currentRow[j];\n                    //eslint-disable-next-line\n                    var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n                    var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n                    if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n                        if (colSpanVal > 1) {\n                            currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n                        }\n                        else {\n                            detach(currentCell);\n                            deleteIndex = j;\n                            if (Browser.isIE) {\n                                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                            }\n                        }\n                    }\n                }\n            }\n            if (deleteIndex > -1) {\n                var rowHeadEle = tBodyHeadEle.children[rowIndex];\n                var nextFocusCell = rowHeadEle &&\n                    rowHeadEle.children[(deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1)];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n            if (sContainer.nodeName !== 'TD') {\n                var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n                var focusNode = sContainer.children[startChildLength];\n                if (focusNode) {\n                    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n                }\n            }\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteRow = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n        this.curTable = closest(selectedCell, 'table');\n        var currentRow;\n        var allCells = this.getCorrespondingColumns();\n        var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n        var maxI;\n        var j;\n        if (this.curTable.rows.length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n                currentRow = this.curTable.rows[maxI];\n                for (j = 0; j < allCells[maxI].length; j++) {\n                    if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n                        if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n                            var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n                            //eslint-disable-next-line\n                            1 === rowSpanVal ? allCells[maxI][j].removeAttribute('rowspan') : allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n                        }\n                    }\n                    if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI ||\n                        allCells[maxI][j] !== allCells[maxI - 1][j])) {\n                        var element = allCells[maxI][j];\n                        var index = void 0;\n                        for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n                            if (index === 0) {\n                                this.curTable.rows[maxI + 1].prepend(element);\n                            }\n                            else {\n                                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n                            }\n                        }\n                    }\n                }\n                var deleteIndex = currentRow.rowIndex;\n                this.curTable.deleteRow(deleteIndex);\n                var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex]\n                    : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n                var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n                else {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                    this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.removeTable = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var selectedTable = closest(selectedCell.parentElement, 'table');\n        if (selectedTable) {\n            e.item.selection.restore();\n            detach(selectedTable);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableHeader = function (e) {\n        var headerExit = false;\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var table = closest(selectedCell.parentElement, 'table');\n        [].slice.call(table.childNodes).forEach(function (el) {\n            if (el.nodeName === 'THEAD') {\n                headerExit = true;\n            }\n        });\n        if (table && !headerExit) {\n            var cellCount = table.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            var header = table.createTHead();\n            var row = header.insertRow(0);\n            for (var j = 0; j < colSpanCount; j++) {\n                var th = createElement('th');\n                th.appendChild(createElement('br'));\n                row.appendChild(th);\n            }\n        }\n        else {\n            table.deleteTHead();\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableVerticalAlign = function (e) {\n        if (e.item.subCommand === 'AlignTop') {\n            e.item.tableCell.style.verticalAlign = 'top';\n        }\n        else if (e.item.subCommand === 'AlignMiddle') {\n            e.item.tableCell.style.verticalAlign = 'middle';\n        }\n        else {\n            e.item.tableCell.style.verticalAlign = 'bottom';\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.cellMerge = function (e) {\n        if (isNOU(this.curTable)) {\n            this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        }\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (selectedCells.length < 2) {\n            return;\n        }\n        this.mergeCellContent();\n        var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n        var firstCell = selectedCells[0];\n        var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n        if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n            firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n        }\n        if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n            firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n        }\n        var totalWidth = 0;\n        for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n            totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n        }\n        firstCell.style.width = totalWidth + '%';\n        for (var i = 1; i <= selectedCells.length - 1; i++) {\n            detach(selectedCells[i]);\n        }\n        for (var i = 0; i < this.curTable.rows.length; i++) {\n            if (this.curTable.rows[i].innerHTML === '') {\n                detach(this.curTable.rows[i]);\n            }\n        }\n        this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n        this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (this.parent.nodeSelection.range) {\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, \n            // eslint-disable-next-line\n            this.parent.nodeSelection.range.endContainer, 0);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n        var colValue;\n        var colIndex;\n        var colMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = elements;\n        //eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n            for (colIndex === min; colIndex <= max; colIndex++) {\n                // eslint-disable-next-line\n                if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < (index =\n                    Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1)) &&\n                    eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n                    for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n                        if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n                            /* eslint-disable */\n                            for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                                if (1 < (attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1) &&\n                                    eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                                    colMin += count = Math.min(count, attrValue - 1);\n                                }\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                                /* eslint-enable */\n                            }\n                        }\n                        if (!count) {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n            }\n        }\n    };\n    TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n        var rowValue;\n        var colIndex;\n        var rowMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = ele;\n        // eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray.length - 1))) {\n            for (rowValue = min; rowValue <= max; rowValue++) {\n                // eslint-disable-next-line\n                if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0]) && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) || 1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n                    for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n                        if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n                            for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                                // eslint-disable-next-line\n                                if (1 < (attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1) && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                                    rowMin += count = Math.min(count, attrValue - 1);\n                                }\n                                // eslint-disable-next-line\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                            }\n                            if (!count) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n            }\n        }\n    };\n    TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n        var rowIndex;\n        var colIndex;\n        var spanCount;\n        for (rowIndex = min; rowIndex <= max; rowIndex++) {\n            for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n                // eslint-disable-next-line\n                min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] ||\n                    firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] ||\n                    1 < (spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1) &&\n                        (1 < spanCount - index ? elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString()) :\n                            elements[rowIndex][colIndex].removeAttribute(attr));\n            }\n        }\n    };\n    TableCommand.prototype.mergeCellContent = function () {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var innerHtml = selectedCells[0].innerHTML;\n        for (var i = 1; i < selectedCells.length - 1; i++) {\n            if ('<br>' !== selectedCells[i].innerHTML) {\n                innerHtml = innerHtml + selectedCells[i].innerHTML;\n            }\n        }\n        selectedCells[0].innerHTML = innerHtml;\n    };\n    TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (0 < selectedCells.length) {\n            var minRow = correspondingCells.length;\n            var maxRow = 0;\n            var minCol = correspondingCells[0].length;\n            var maxCol = 0;\n            for (var i = 0; i < selectedCells.length; i++) {\n                var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n                var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n                minRow = Math.min(currentRowCol[0], minRow);\n                maxRow = Math.max(targetRowCol[0], maxRow);\n                minCol = Math.min(currentRowCol[1], minCol);\n                maxCol = Math.max(targetRowCol[1], maxCol);\n            }\n            return {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            };\n        }\n        return null;\n    };\n    TableCommand.prototype.HorizontalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n        if (activeCellRowSpan > 1) {\n            var avgCount = Math.ceil(activeCellRowSpan / 2);\n            // eslint-disable-next-line\n            1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) :\n                this.activeCell.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            1 < (activeCellRowSpan - avgCount) ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n            var avgRowIndex = void 0;\n            var colIndex = void 0;\n            for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2),\n                colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1]\n                    : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] ===\n                correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex]\n                === correspondingCells[avgRowIndex - 1][colIndex]);) {\n                colIndex--;\n            }\n            if (colIndex === -1) {\n                // eslint-disable-next-line\n                this.curTable.rows[avgRowIndex].firstChild ? this.curTable.rows[avgRowIndex].prepend(newCell) : this.curTable.appendChild(newCell);\n            }\n            else {\n                correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n            }\n        }\n        else {\n            var newTrEle = createElement('tr');\n            newTrEle.appendChild(newCell);\n            var selectedRow = correspondingCells[activeCellIndex[0]];\n            for (var j = 0; j <= selectedRow.length - 1; j++) {\n                if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n                    selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ?\n                        parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n                }\n            }\n            this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.VerticalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var allRows = this.curTable.rows;\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n        if (this.activeCell.tagName === 'TH' && isNaN(avgWidth)) {\n            var cellCount = this.curTable.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(this.curTable.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            avgWidth = parseFloat((((this.activeCell.offsetWidth / 2) / this.curTable.offsetWidth) * 100).toFixed(1));\n        }\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingColumns = this.getCorrespondingColumns();\n        var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10);\n        if (activeCellcolSpan > 1) {\n            // eslint-disable-next-line\n            1 < Math.ceil(activeCellcolSpan / 2) ? this.activeCell.setAttribute('colspan', (activeCellcolSpan / 2).toString())\n                : this.activeCell.removeAttribute('colspan');\n            // eslint-disable-next-line\n            1 < (activeCellcolSpan - activeCellcolSpan / 2) ? newCell.setAttribute('colspan', \n            // eslint-disable-next-line\n            (activeCellcolSpan - activeCellcolSpan / 2).toString()) : newCell.removeAttribute('colspan');\n        }\n        else {\n            for (var i = 0; i <= allRows.length - 1; i++) {\n                if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n                    var currentCell = correspondingColumns[i][activeCellIndex[1]];\n                    if (currentCell !== this.activeCell) {\n                        currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ?\n                            parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n                    }\n                }\n            }\n        }\n        this.activeCell.style.width = avgWidth + '%';\n        newCell.style.width = avgWidth + '%';\n        this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.getCorrespondingColumns = function () {\n        var elementArray = [];\n        // eslint-disable-next-line\n        var _this = this;\n        var colspan = 0;\n        var allRows = _this.curTable.rows;\n        for (var i = 0; i <= allRows.length - 1; i++) {\n            var ele = allRows[i];\n            var index = 0;\n            for (var j = 0; j <= ele.children.length - 1; j++) {\n                /* eslint-disable */\n                var colEle = ele.children[j];\n                for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n                    for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n                        elementArray[rowIndex] || (elementArray[rowIndex] = []);\n                        elementArray[rowIndex][colIndex] ? index++ : elementArray[rowIndex][colIndex] = colEle;\n                    }\n                }\n                index += colspan;\n            }\n            /* eslint-enable */\n        }\n        return elementArray;\n    };\n    // eslint-disable-next-line\n    TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n        var nextIndex;\n        var nextCol;\n        for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n            if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n                nextIndex--;\n                break;\n            }\n            nextIndex++;\n        }\n        for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n            if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n                nextCol--;\n                break;\n            }\n            nextCol++;\n        }\n        return nextCol === cells[rowIndex].length && nextCol--,\n            [\n                nextIndex,\n                nextCol\n            ];\n    };\n    TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n        //let value: RowCol = new RowCol();\n        for (var i = 0; i < allCells.length; i++) {\n            for (var j = 0; j < allCells[i].length; j++) {\n                if (allCells[i][j] === cell) {\n                    return [i, j];\n                }\n            }\n        }\n        return [];\n    };\n    TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n        var j;\n        var k;\n        var startCell;\n        var endCell;\n        var minRowIndex = minRow;\n        var maxRowIndex = maxRow;\n        var minColIndex = minCol;\n        var maxColIndex = maxCol;\n        var minMaxValues = new MinMax();\n        for (j = minRowIndex; j <= maxRowIndex; j++) {\n            /* eslint-disable */\n            if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) &&\n                (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray))[0], startCell[1], eleArray))) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) &&\n                (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray))[0], startCell[1], eleArray))) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            for (k = minColIndex; k <= maxColIndex; k++) {\n                if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n                else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    (endCell = this.FindIndex((startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray))[0], startCell[1], eleArray))) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n            }\n            minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n        }\n        return minMaxValues;\n        /* eslint-enable */\n    };\n    TableCommand.prototype.tableMove = function (e) {\n        this.activeCell = e.selectNode[0];\n        var target = e.event.target;\n        var activeCellTag = this.activeCell.tagName;\n        var targetCellTag = target.tagName;\n        this.curTable = closest(target, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            this.parent.nodeSelection.Clear(this.parent.currentDocument);\n        }\n        if ((target.tagName !== 'TD' && target.tagName !== 'TH') && activeCellTag !== targetCellTag) {\n            return;\n        }\n        var activeRowIndex = Array.prototype.slice.call((this.activeCell).parentElement.parentElement.children)\n            .indexOf((this.activeCell).parentElement);\n        var activeColumnIndex = Array.prototype.slice.call((this.activeCell).parentElement.children).indexOf(this.activeCell);\n        var targetRowIndex = Array.prototype.slice.call(target.parentElement.parentElement.children)\n            .indexOf(target.parentElement);\n        var targetColumnIndex = Array.prototype.slice.call(target.parentElement.children).indexOf(target);\n        var activeCellList = this.curTable.querySelectorAll('.e-cell-select');\n        for (var i = activeCellList.length - 1; i >= 0; i--) {\n            if (this.activeCell !== activeCellList[i]) {\n                activeCellList[i].classList.remove('e-cell-select');\n            }\n        }\n        if (activeRowIndex === targetRowIndex && activeColumnIndex === targetColumnIndex) {\n            return;\n        }\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n        var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n        var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], \n        /* eslint-disable */\n        targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n        for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n            for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n                correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n            }\n        }\n        if (this.parent.nodeSelection.range) {\n            this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, this.parent.nodeSelection.range.endContainer, 0, 0);\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, this.parent.nodeSelection.range.endContainer, 0);\n        }\n    };\n    ;\n    return TableCommand;\n}());\nexport { TableCommand };\nvar MinMax = /** @class */ (function () {\n    function MinMax() {\n    }\n    return MinMax;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}