{"ast":null,"code":"import * as EVENTS from './../../common/constant';\nimport { isNullOrUndefined as isNOU, detach, createElement, closest } from '@syncfusion/ej2-base';\nimport { isIDevice, setEditFrameFocus } from '../../common/util';\nimport { markerClassName } from './dom-node';\nimport { NodeCutter } from './nodecutter';\n/**\n * Formats internal component\n *\n * @hidden\n\n */\nvar Formats = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element.\n   * @hidden\n    */\n  function Formats(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  Formats.prototype.addEventListener = function () {\n    this.parent.observer.on(EVENTS.FORMAT_TYPE, this.applyFormats, this);\n    this.parent.observer.on(EVENTS.KEY_UP_HANDLER, this.onKeyUp, this);\n    this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown, this);\n  };\n  Formats.prototype.getParentNode = function (node) {\n    for (; node.parentNode && node.parentNode !== this.parent.editableElement; null) {\n      node = node.parentNode;\n    }\n    return node;\n  };\n  Formats.prototype.onKeyUp = function (e) {\n    var range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n    var endCon = range.endContainer;\n    var lastChild = endCon.lastChild;\n    if (e.event.which === 13 && range.startContainer === endCon && endCon.nodeType !== 3) {\n      var pTag = createElement('p');\n      pTag.innerHTML = '<br>';\n      if (!isNOU(lastChild) && lastChild && lastChild.nodeName === 'BR' && lastChild.previousSibling && lastChild.previousSibling.nodeName === 'TABLE') {\n        endCon.replaceChild(pTag, lastChild);\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, pTag, 0);\n      } else {\n        var brNode = this.parent.nodeSelection.getSelectionNodeCollectionBr(range)[0];\n        if (!isNOU(brNode) && brNode.nodeName === 'BR' && brNode.previousSibling && brNode.previousSibling.nodeName === 'TABLE') {\n          endCon.replaceChild(pTag, brNode);\n          this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, pTag, 0);\n        }\n      }\n    }\n  };\n  Formats.prototype.onKeyDown = function (e) {\n    if (e.event.which === 13) {\n      var range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n      var startCon = range.startContainer.textContent.length === 0 || range.startContainer.nodeName === 'PRE' ? range.startContainer : range.startContainer.parentElement;\n      var endCon = range.endContainer.textContent.length === 0 || range.endContainer.nodeName === 'PRE' ? range.endContainer : range.endContainer.parentElement;\n      var preElem = closest(startCon, 'pre');\n      var endPreElem = closest(endCon, 'pre');\n      var liParent = !isNOU(preElem) && !isNOU(preElem.parentElement) && preElem.parentElement.tagName === 'LI';\n      if (liParent) {\n        return;\n      }\n      if (isNOU(preElem) && !isNOU(endPreElem) || !isNOU(preElem) && isNOU(endPreElem)) {\n        e.event.preventDefault();\n        this.deleteContent(range);\n        this.removeCodeContent(range);\n        range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, endCon, 0);\n      }\n      if (e.event.which === 13 && !isNOU(preElem) && !isNOU(endPreElem)) {\n        e.event.preventDefault();\n        this.deleteContent(range);\n        this.removeCodeContent(range);\n        range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n        var lastEmpty = range.startContainer.childNodes[range.endOffset];\n        var lastBeforeBr = range.startContainer.childNodes[range.endOffset - 1];\n        var startParent = range.startContainer;\n        if (!isNOU(lastEmpty) && !isNOU(lastBeforeBr) && isNOU(lastEmpty.nextSibling) && lastEmpty.nodeName === 'BR' && lastBeforeBr.nodeName === 'BR') {\n          this.paraFocus(range.startContainer, e.enterAction);\n        } else if (startParent.textContent.charCodeAt(0) === 8203 && startParent.textContent.length === 1 || startParent.textContent.length === 0) {\n          //Double enter with any parent tag for the node\n          while (startParent.parentElement.nodeName !== 'PRE' && (startParent.textContent.length === 1 || startParent.textContent.length === 0)) {\n            startParent = startParent.parentElement;\n          }\n          if (!isNOU(startParent.previousSibling) && startParent.previousSibling.nodeName === 'BR' && isNOU(startParent.nextSibling)) {\n            this.paraFocus(startParent.parentElement);\n          } else {\n            this.isNotEndCursor(preElem, range);\n          }\n        } else {\n          //Cursor at start and middle\n          this.isNotEndCursor(preElem, range);\n        }\n      }\n    }\n  };\n  Formats.prototype.removeCodeContent = function (range) {\n    var regEx = new RegExp(String.fromCharCode(65279), 'g');\n    if (!isNOU(range.endContainer.textContent.match(regEx))) {\n      var pointer = range.endContainer.textContent.charCodeAt(range.endOffset - 1) === 65279 ? range.endOffset - 2 : range.endOffset;\n      range.endContainer.textContent = range.endContainer.textContent.replace(regEx, '');\n      if (range.endContainer.textContent === '') {\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, range.endContainer.parentElement, 0);\n      } else {\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, range.endContainer, pointer);\n      }\n    }\n  };\n  Formats.prototype.deleteContent = function (range) {\n    if (range.startContainer !== range.endContainer || range.startOffset !== range.endOffset) {\n      range.deleteContents();\n    }\n  };\n  Formats.prototype.paraFocus = function (referNode, enterAction) {\n    var insertTag;\n    if (enterAction === 'DIV') {\n      insertTag = createElement('div');\n      insertTag.innerHTML = '<br>';\n    } else if (enterAction === 'BR') {\n      insertTag = createElement('br');\n    } else {\n      insertTag = createElement('p');\n      insertTag.innerHTML = '<br>';\n    }\n    this.parent.domNode.insertAfter(insertTag, referNode);\n    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, insertTag, 0);\n    detach(referNode.lastChild);\n  };\n  Formats.prototype.isNotEndCursor = function (preElem, range) {\n    var nodeCutter = new NodeCutter();\n    var isEnd = range.startOffset === preElem.lastChild.textContent.length && preElem.lastChild.textContent === range.startContainer.textContent;\n    //Cursor at start point\n    if (preElem.textContent.indexOf(range.startContainer.textContent) === 0 && (range.startOffset === 0 && range.endOffset === 0 || range.startContainer.nodeName === 'PRE')) {\n      this.insertMarker(preElem, range);\n      var brTag = createElement('br');\n      preElem.childNodes[range.endOffset].parentElement.insertBefore(brTag, preElem.childNodes[range.endOffset]);\n    } else {\n      //Cursor at middle\n      var cloneNode = nodeCutter.SplitNode(range, preElem, true);\n      this.insertMarker(preElem, range);\n      var previousSib = preElem.previousElementSibling;\n      if (previousSib.tagName === 'PRE') {\n        previousSib.insertAdjacentHTML('beforeend', '<br>' + cloneNode.innerHTML);\n        detach(preElem);\n      }\n    }\n    //To place the cursor position\n    this.setCursorPosition(isEnd, preElem);\n  };\n  Formats.prototype.setCursorPosition = function (isEnd, preElem) {\n    var isEmpty = false;\n    var markerElem = this.parent.editableElement.querySelector('.tempSpan');\n    var mrkParentElem = markerElem.parentElement;\n    // eslint-disable-next-line\n    markerElem.parentNode.textContent === '' ? isEmpty = true : this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, markerElem, 0);\n    if (isEnd) {\n      if (isEmpty) {\n        //Enter press when pre element is empty\n        if (mrkParentElem === preElem) {\n          this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, markerElem, 0);\n          detach(markerElem);\n        } else {\n          this.focusSelectionParent(markerElem, mrkParentElem);\n        }\n      } else {\n        var brElm = createElement('br');\n        this.parent.domNode.insertAfter(brElm, markerElem);\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, markerElem, 0);\n        detach(markerElem);\n      }\n    } else {\n      // eslint-disable-next-line\n      isEmpty ? this.focusSelectionParent(markerElem, mrkParentElem) : detach(markerElem);\n    }\n  };\n  Formats.prototype.focusSelectionParent = function (markerElem, tempSpanPElem) {\n    detach(markerElem);\n    tempSpanPElem.innerHTML = '\\u200B';\n    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, tempSpanPElem, 0);\n  };\n  Formats.prototype.insertMarker = function (preElem, range) {\n    var tempSpan = createElement('span', {\n      className: 'tempSpan'\n    });\n    if (range.startContainer.nodeName === 'PRE') {\n      preElem.childNodes[range.endOffset].parentElement.insertBefore(tempSpan, preElem.childNodes[range.endOffset]);\n    } else {\n      range.startContainer.parentElement.insertBefore(tempSpan, range.startContainer);\n    }\n  };\n  Formats.prototype.applyFormats = function (e) {\n    var range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n    var isSelectAll = false;\n    if (this.parent.editableElement === range.endContainer && !isNOU(this.parent.editableElement.children[range.endOffset - 1]) && this.parent.editableElement.children[range.endOffset - 1].tagName === 'TABLE' && !range.collapsed) {\n      isSelectAll = true;\n    }\n    var save = this.parent.nodeSelection.save(range, this.parent.currentDocument);\n    this.parent.domNode.setMarker(save);\n    var formatsNodes = this.parent.domNode.blockNodes();\n    if (e.enterAction === 'BR') {\n      this.setSelectionBRConfig();\n      var allSelectedNode = this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument);\n      var selectedNodes = this.parent.nodeSelection.getSelectionNodes(allSelectedNode);\n      var currentFormatNodes = [];\n      if (selectedNodes.length === 0) {\n        selectedNodes.push(formatsNodes[0]);\n      }\n      for (var i = 0; i < selectedNodes.length; i++) {\n        var currentNode = selectedNodes[i];\n        var previousCurrentNode = void 0;\n        while (!this.parent.domNode.isBlockNode(currentNode) && currentNode !== this.parent.editableElement) {\n          previousCurrentNode = currentNode;\n          currentNode = currentNode.parentElement;\n        }\n        if (this.parent.domNode.isBlockNode(currentNode) && currentNode === this.parent.editableElement) {\n          currentFormatNodes.push(previousCurrentNode);\n        }\n      }\n      for (var i = 0; i < currentFormatNodes.length; i++) {\n        if (!this.parent.domNode.isBlockNode(currentFormatNodes[i])) {\n          var currentNode = currentFormatNodes[i];\n          var previousNode = currentNode;\n          while (currentNode === this.parent.editableElement) {\n            previousNode = currentNode;\n            currentNode = currentNode.parentElement;\n          }\n          var tempElem = void 0;\n          if (this.parent.domNode.isBlockNode(previousNode.parentElement) && previousNode.parentElement === this.parent.editableElement) {\n            tempElem = createElement('div');\n            previousNode.parentElement.insertBefore(tempElem, previousNode);\n            tempElem.appendChild(previousNode);\n          } else {\n            tempElem = previousNode;\n          }\n          var preNode = tempElem.previousSibling;\n          while (!isNOU(preNode) && preNode.nodeName !== 'BR' && !this.parent.domNode.isBlockNode(preNode)) {\n            tempElem.firstChild.parentElement.insertBefore(preNode, tempElem.firstChild);\n            preNode = tempElem.previousSibling;\n          }\n          if (!isNOU(preNode) && preNode.nodeName === 'BR') {\n            detach(preNode);\n          }\n          var postNode = tempElem.nextSibling;\n          while (!isNOU(postNode) && postNode.nodeName !== 'BR' && !this.parent.domNode.isBlockNode(postNode)) {\n            tempElem.appendChild(postNode);\n            postNode = tempElem.nextSibling;\n          }\n          if (!isNOU(postNode) && postNode.nodeName === 'BR') {\n            detach(postNode);\n          }\n        }\n      }\n      this.setSelectionBRConfig();\n      formatsNodes = this.parent.domNode.blockNodes();\n    }\n    for (var i = 0; i < formatsNodes.length; i++) {\n      var parentNode = void 0;\n      var replaceHTML = void 0;\n      if (e.subCommand.toLowerCase() === 'blockquote') {\n        parentNode = this.getParentNode(formatsNodes[i]);\n        replaceHTML = this.parent.domNode.isList(parentNode) || parentNode.tagName === 'TABLE' ? parentNode.outerHTML : parentNode.innerHTML;\n      } else {\n        parentNode = formatsNodes[i];\n        replaceHTML = parentNode.innerHTML;\n      }\n      if (e.subCommand.toLowerCase() === parentNode.tagName.toLowerCase() && (e.subCommand.toLowerCase() !== 'pre' || !isNOU(e.exeValue) && e.exeValue.name === 'dropDownSelect') || isNOU(parentNode.parentNode) || parentNode.tagName === 'TABLE' && e.subCommand.toLowerCase() === 'pre') {\n        continue;\n      }\n      this.cleanFormats(parentNode, e.subCommand);\n      var replaceNode = e.subCommand.toLowerCase() === 'pre' && parentNode.tagName.toLowerCase() === 'pre' ? 'p' : e.subCommand;\n      var replaceTag = this.parent.domNode.createTagString(replaceNode, parentNode, replaceHTML.replace(/>\\s+</g, '><'));\n      if (parentNode.tagName === 'LI') {\n        parentNode.innerHTML = '';\n        parentNode.insertAdjacentHTML('beforeend', replaceTag);\n      } else {\n        this.parent.domNode.replaceWith(parentNode, replaceTag);\n      }\n    }\n    this.preFormatMerge();\n    var startNode = this.parent.editableElement.querySelector('.' + markerClassName.startSelection);\n    var endNode = this.parent.editableElement.querySelector('.' + markerClassName.endSelection);\n    if (!isNOU(startNode) && !isNOU(endNode)) {\n      startNode = startNode.lastChild;\n      endNode = endNode.lastChild;\n    }\n    save = this.parent.domNode.saveMarker(save, null);\n    if (isIDevice()) {\n      setEditFrameFocus(this.parent.editableElement, e.selector);\n    }\n    if (isSelectAll) {\n      this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, startNode, endNode, 0, endNode.textContent.length);\n    } else {\n      save.restore();\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.domNode.blockNodes()\n      });\n    }\n  };\n  Formats.prototype.setSelectionBRConfig = function () {\n    var startElem = this.parent.editableElement.querySelector('.' + markerClassName.startSelection);\n    var endElem = this.parent.editableElement.querySelector('.' + markerClassName.endSelection);\n    if (isNOU(endElem)) {\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, startElem, 0);\n    } else {\n      this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, startElem, endElem, 0, 0);\n    }\n  };\n  Formats.prototype.preFormatMerge = function () {\n    var preNodes = this.parent.editableElement.querySelectorAll('PRE');\n    if (!isNOU(preNodes)) {\n      for (var i = 0; i < preNodes.length; i++) {\n        var previousSib = preNodes[i].previousElementSibling;\n        if (!isNOU(previousSib) && previousSib.tagName === 'PRE') {\n          previousSib.insertAdjacentHTML('beforeend', '<br>' + preNodes[i].innerHTML);\n          detach(preNodes[i]);\n        }\n      }\n    }\n  };\n  Formats.prototype.cleanFormats = function (element, tagName) {\n    var ignoreAttr = ['display', 'font-size', 'margin-top', 'margin-bottom', 'margin-left', 'margin-right', 'font-weight'];\n    tagName = tagName.toLowerCase();\n    for (var i = 0; i < ignoreAttr.length && tagName !== 'p' && tagName !== 'blockquote' && tagName !== 'pre'; i++) {\n      element.style.removeProperty(ignoreAttr[i]);\n    }\n  };\n  return Formats;\n}();\nexport { Formats };","map":{"version":3,"names":["EVENTS","isNullOrUndefined","isNOU","detach","createElement","closest","isIDevice","setEditFrameFocus","markerClassName","NodeCutter","Formats","parent","addEventListener","prototype","observer","on","FORMAT_TYPE","applyFormats","KEY_UP_HANDLER","onKeyUp","KEY_DOWN_HANDLER","onKeyDown","getParentNode","node","parentNode","editableElement","e","range","nodeSelection","getRange","currentDocument","endCon","endContainer","lastChild","event","which","startContainer","nodeType","pTag","innerHTML","nodeName","previousSibling","replaceChild","setCursorPoint","brNode","getSelectionNodeCollectionBr","startCon","textContent","length","parentElement","preElem","endPreElem","liParent","tagName","preventDefault","deleteContent","removeCodeContent","lastEmpty","childNodes","endOffset","lastBeforeBr","startParent","nextSibling","paraFocus","enterAction","charCodeAt","isNotEndCursor","regEx","RegExp","String","fromCharCode","match","pointer","replace","startOffset","deleteContents","referNode","insertTag","domNode","insertAfter","nodeCutter","isEnd","indexOf","insertMarker","brTag","insertBefore","cloneNode","SplitNode","previousSib","previousElementSibling","insertAdjacentHTML","setCursorPosition","isEmpty","markerElem","querySelector","mrkParentElem","focusSelectionParent","brElm","tempSpanPElem","tempSpan","className","isSelectAll","children","collapsed","save","setMarker","formatsNodes","blockNodes","setSelectionBRConfig","allSelectedNode","getSelectedNodes","selectedNodes","getSelectionNodes","currentFormatNodes","push","i","currentNode","previousCurrentNode","isBlockNode","previousNode","tempElem","appendChild","preNode","firstChild","postNode","replaceHTML","subCommand","toLowerCase","isList","outerHTML","exeValue","name","cleanFormats","replaceNode","replaceTag","createTagString","replaceWith","preFormatMerge","startNode","startSelection","endNode","endSelection","saveMarker","selector","setSelectionText","restore","callBack","requestType","editorMode","elements","startElem","endElem","preNodes","querySelectorAll","element","ignoreAttr","style","removeProperty"],"sources":["D:/USPERSO IMPLEMENTATION/Projet_DevIII/frontend/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/formats.js"],"sourcesContent":["import * as EVENTS from './../../common/constant';\nimport { isNullOrUndefined as isNOU, detach, createElement, closest } from '@syncfusion/ej2-base';\nimport { isIDevice, setEditFrameFocus } from '../../common/util';\nimport { markerClassName } from './dom-node';\nimport { NodeCutter } from './nodecutter';\n/**\n * Formats internal component\n *\n * @hidden\n\n */\nvar Formats = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element.\n     * @hidden\n\n     */\n    function Formats(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Formats.prototype.addEventListener = function () {\n        this.parent.observer.on(EVENTS.FORMAT_TYPE, this.applyFormats, this);\n        this.parent.observer.on(EVENTS.KEY_UP_HANDLER, this.onKeyUp, this);\n        this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown, this);\n    };\n    Formats.prototype.getParentNode = function (node) {\n        for (; node.parentNode && node.parentNode !== this.parent.editableElement; null) {\n            node = node.parentNode;\n        }\n        return node;\n    };\n    Formats.prototype.onKeyUp = function (e) {\n        var range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n        var endCon = range.endContainer;\n        var lastChild = endCon.lastChild;\n        if (e.event.which === 13 && range.startContainer === endCon && endCon.nodeType !== 3) {\n            var pTag = createElement('p');\n            pTag.innerHTML = '<br>';\n            if (!isNOU(lastChild) && lastChild && lastChild.nodeName === 'BR' && (lastChild.previousSibling && lastChild.previousSibling.nodeName === 'TABLE')) {\n                endCon.replaceChild(pTag, lastChild);\n                this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, pTag, 0);\n            }\n            else {\n                var brNode = this.parent.nodeSelection.getSelectionNodeCollectionBr(range)[0];\n                if (!isNOU(brNode) && brNode.nodeName === 'BR' && (brNode.previousSibling && brNode.previousSibling.nodeName === 'TABLE')) {\n                    endCon.replaceChild(pTag, brNode);\n                    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, pTag, 0);\n                }\n            }\n        }\n    };\n    Formats.prototype.onKeyDown = function (e) {\n        if (e.event.which === 13) {\n            var range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n            var startCon = (range.startContainer.textContent.length === 0 || range.startContainer.nodeName === 'PRE')\n                ? range.startContainer : range.startContainer.parentElement;\n            var endCon = (range.endContainer.textContent.length === 0 || range.endContainer.nodeName === 'PRE')\n                ? range.endContainer : range.endContainer.parentElement;\n            var preElem = closest(startCon, 'pre');\n            var endPreElem = closest(endCon, 'pre');\n            var liParent = !isNOU(preElem) && !isNOU(preElem.parentElement) && preElem.parentElement.tagName === 'LI';\n            if (liParent) {\n                return;\n            }\n            if (((isNOU(preElem) && !isNOU(endPreElem)) || (!isNOU(preElem) && isNOU(endPreElem)))) {\n                e.event.preventDefault();\n                this.deleteContent(range);\n                this.removeCodeContent(range);\n                range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n                this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, endCon, 0);\n            }\n            if (e.event.which === 13 && !isNOU(preElem) && !isNOU(endPreElem)) {\n                e.event.preventDefault();\n                this.deleteContent(range);\n                this.removeCodeContent(range);\n                range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n                var lastEmpty = range.startContainer.childNodes[range.endOffset];\n                var lastBeforeBr = range.startContainer.childNodes[range.endOffset - 1];\n                var startParent = range.startContainer;\n                if (!isNOU(lastEmpty) && !isNOU(lastBeforeBr) && isNOU(lastEmpty.nextSibling) &&\n                    lastEmpty.nodeName === 'BR' && lastBeforeBr.nodeName === 'BR') {\n                    this.paraFocus(range.startContainer, e.enterAction);\n                }\n                else if ((startParent.textContent.charCodeAt(0) === 8203 &&\n                    startParent.textContent.length === 1) || startParent.textContent.length === 0) {\n                    //Double enter with any parent tag for the node\n                    while (startParent.parentElement.nodeName !== 'PRE' &&\n                        (startParent.textContent.length === 1 || startParent.textContent.length === 0)) {\n                        startParent = startParent.parentElement;\n                    }\n                    if (!isNOU(startParent.previousSibling) && startParent.previousSibling.nodeName === 'BR' &&\n                        isNOU(startParent.nextSibling)) {\n                        this.paraFocus(startParent.parentElement);\n                    }\n                    else {\n                        this.isNotEndCursor(preElem, range);\n                    }\n                }\n                else {\n                    //Cursor at start and middle\n                    this.isNotEndCursor(preElem, range);\n                }\n            }\n        }\n    };\n    Formats.prototype.removeCodeContent = function (range) {\n        var regEx = new RegExp(String.fromCharCode(65279), 'g');\n        if (!isNOU(range.endContainer.textContent.match(regEx))) {\n            var pointer = range.endContainer.textContent.charCodeAt(range.endOffset - 1) === 65279 ?\n                range.endOffset - 2 : range.endOffset;\n            range.endContainer.textContent = range.endContainer.textContent.replace(regEx, '');\n            if (range.endContainer.textContent === '') {\n                this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, range.endContainer.parentElement, 0);\n            }\n            else {\n                this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, range.endContainer, pointer);\n            }\n        }\n    };\n    Formats.prototype.deleteContent = function (range) {\n        if (range.startContainer !== range.endContainer || range.startOffset !== range.endOffset) {\n            range.deleteContents();\n        }\n    };\n    Formats.prototype.paraFocus = function (referNode, enterAction) {\n        var insertTag;\n        if (enterAction === 'DIV') {\n            insertTag = createElement('div');\n            insertTag.innerHTML = '<br>';\n        }\n        else if (enterAction === 'BR') {\n            insertTag = createElement('br');\n        }\n        else {\n            insertTag = createElement('p');\n            insertTag.innerHTML = '<br>';\n        }\n        this.parent.domNode.insertAfter(insertTag, referNode);\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, insertTag, 0);\n        detach(referNode.lastChild);\n    };\n    Formats.prototype.isNotEndCursor = function (preElem, range) {\n        var nodeCutter = new NodeCutter();\n        var isEnd = range.startOffset === preElem.lastChild.textContent.length &&\n            preElem.lastChild.textContent === range.startContainer.textContent;\n        //Cursor at start point\n        if (preElem.textContent.indexOf(range.startContainer.textContent) === 0 &&\n            ((range.startOffset === 0 && range.endOffset === 0) || range.startContainer.nodeName === 'PRE')) {\n            this.insertMarker(preElem, range);\n            var brTag = createElement('br');\n            preElem.childNodes[range.endOffset].parentElement.insertBefore(brTag, preElem.childNodes[range.endOffset]);\n        }\n        else {\n            //Cursor at middle\n            var cloneNode = nodeCutter.SplitNode(range, preElem, true);\n            this.insertMarker(preElem, range);\n            var previousSib = preElem.previousElementSibling;\n            if (previousSib.tagName === 'PRE') {\n                previousSib.insertAdjacentHTML('beforeend', '<br>' + cloneNode.innerHTML);\n                detach(preElem);\n            }\n        }\n        //To place the cursor position\n        this.setCursorPosition(isEnd, preElem);\n    };\n    Formats.prototype.setCursorPosition = function (isEnd, preElem) {\n        var isEmpty = false;\n        var markerElem = this.parent.editableElement.querySelector('.tempSpan');\n        var mrkParentElem = markerElem.parentElement;\n        // eslint-disable-next-line\n        markerElem.parentNode.textContent === '' ? isEmpty = true :\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, markerElem, 0);\n        if (isEnd) {\n            if (isEmpty) {\n                //Enter press when pre element is empty\n                if (mrkParentElem === preElem) {\n                    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, markerElem, 0);\n                    detach(markerElem);\n                }\n                else {\n                    this.focusSelectionParent(markerElem, mrkParentElem);\n                }\n            }\n            else {\n                var brElm = createElement('br');\n                this.parent.domNode.insertAfter(brElm, markerElem);\n                this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, markerElem, 0);\n                detach(markerElem);\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            isEmpty ? this.focusSelectionParent(markerElem, mrkParentElem) : detach(markerElem);\n        }\n    };\n    Formats.prototype.focusSelectionParent = function (markerElem, tempSpanPElem) {\n        detach(markerElem);\n        tempSpanPElem.innerHTML = '\\u200B';\n        this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, tempSpanPElem, 0);\n    };\n    Formats.prototype.insertMarker = function (preElem, range) {\n        var tempSpan = createElement('span', { className: 'tempSpan' });\n        if (range.startContainer.nodeName === 'PRE') {\n            preElem.childNodes[range.endOffset].parentElement.insertBefore(tempSpan, preElem.childNodes[range.endOffset]);\n        }\n        else {\n            range.startContainer.parentElement.insertBefore(tempSpan, range.startContainer);\n        }\n    };\n    Formats.prototype.applyFormats = function (e) {\n        var range = this.parent.nodeSelection.getRange(this.parent.currentDocument);\n        var isSelectAll = false;\n        if (this.parent.editableElement === range.endContainer &&\n            !isNOU(this.parent.editableElement.children[range.endOffset - 1]) &&\n            this.parent.editableElement.children[range.endOffset - 1].tagName === 'TABLE' && !range.collapsed) {\n            isSelectAll = true;\n        }\n        var save = this.parent.nodeSelection.save(range, this.parent.currentDocument);\n        this.parent.domNode.setMarker(save);\n        var formatsNodes = this.parent.domNode.blockNodes();\n        if (e.enterAction === 'BR') {\n            this.setSelectionBRConfig();\n            var allSelectedNode = this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument);\n            var selectedNodes = this.parent.nodeSelection.getSelectionNodes(allSelectedNode);\n            var currentFormatNodes = [];\n            if (selectedNodes.length === 0) {\n                selectedNodes.push(formatsNodes[0]);\n            }\n            for (var i = 0; i < selectedNodes.length; i++) {\n                var currentNode = selectedNodes[i];\n                var previousCurrentNode = void 0;\n                while (!this.parent.domNode.isBlockNode(currentNode) && currentNode !== this.parent.editableElement) {\n                    previousCurrentNode = currentNode;\n                    currentNode = currentNode.parentElement;\n                }\n                if (this.parent.domNode.isBlockNode(currentNode) && currentNode === this.parent.editableElement) {\n                    currentFormatNodes.push(previousCurrentNode);\n                }\n            }\n            for (var i = 0; i < currentFormatNodes.length; i++) {\n                if (!this.parent.domNode.isBlockNode(currentFormatNodes[i])) {\n                    var currentNode = currentFormatNodes[i];\n                    var previousNode = currentNode;\n                    while (currentNode === this.parent.editableElement) {\n                        previousNode = currentNode;\n                        currentNode = currentNode.parentElement;\n                    }\n                    var tempElem = void 0;\n                    if (this.parent.domNode.isBlockNode(previousNode.parentElement) &&\n                        previousNode.parentElement === this.parent.editableElement) {\n                        tempElem = createElement('div');\n                        previousNode.parentElement.insertBefore(tempElem, previousNode);\n                        tempElem.appendChild(previousNode);\n                    }\n                    else {\n                        tempElem = previousNode;\n                    }\n                    var preNode = tempElem.previousSibling;\n                    while (!isNOU(preNode) && preNode.nodeName !== 'BR' &&\n                        !this.parent.domNode.isBlockNode(preNode)) {\n                        tempElem.firstChild.parentElement.insertBefore(preNode, tempElem.firstChild);\n                        preNode = tempElem.previousSibling;\n                    }\n                    if (!isNOU(preNode) && preNode.nodeName === 'BR') {\n                        detach(preNode);\n                    }\n                    var postNode = tempElem.nextSibling;\n                    while (!isNOU(postNode) && postNode.nodeName !== 'BR' &&\n                        !this.parent.domNode.isBlockNode(postNode)) {\n                        tempElem.appendChild(postNode);\n                        postNode = tempElem.nextSibling;\n                    }\n                    if (!isNOU(postNode) && postNode.nodeName === 'BR') {\n                        detach(postNode);\n                    }\n                }\n            }\n            this.setSelectionBRConfig();\n            formatsNodes = this.parent.domNode.blockNodes();\n        }\n        for (var i = 0; i < formatsNodes.length; i++) {\n            var parentNode = void 0;\n            var replaceHTML = void 0;\n            if (e.subCommand.toLowerCase() === 'blockquote') {\n                parentNode = this.getParentNode(formatsNodes[i]);\n                replaceHTML = this.parent.domNode.isList(parentNode) ||\n                    parentNode.tagName === 'TABLE' ? parentNode.outerHTML : parentNode.innerHTML;\n            }\n            else {\n                parentNode = formatsNodes[i];\n                replaceHTML = parentNode.innerHTML;\n            }\n            if ((e.subCommand.toLowerCase() === parentNode.tagName.toLowerCase() &&\n                (e.subCommand.toLowerCase() !== 'pre' ||\n                    (!isNOU(e.exeValue) && e.exeValue.name === 'dropDownSelect'))) ||\n                isNOU(parentNode.parentNode) ||\n                (parentNode.tagName === 'TABLE' && e.subCommand.toLowerCase() === 'pre')) {\n                continue;\n            }\n            this.cleanFormats(parentNode, e.subCommand);\n            var replaceNode = (e.subCommand.toLowerCase() === 'pre' && parentNode.tagName.toLowerCase() === 'pre') ?\n                'p' : e.subCommand;\n            var replaceTag = this.parent.domNode.createTagString(replaceNode, parentNode, replaceHTML.replace(/>\\s+</g, '><'));\n            if (parentNode.tagName === 'LI') {\n                parentNode.innerHTML = '';\n                parentNode.insertAdjacentHTML('beforeend', replaceTag);\n            }\n            else {\n                this.parent.domNode.replaceWith(parentNode, replaceTag);\n            }\n        }\n        this.preFormatMerge();\n        var startNode = this.parent.editableElement.querySelector('.' + markerClassName.startSelection);\n        var endNode = this.parent.editableElement.querySelector('.' + markerClassName.endSelection);\n        if (!isNOU(startNode) && !isNOU(endNode)) {\n            startNode = startNode.lastChild;\n            endNode = endNode.lastChild;\n        }\n        save = this.parent.domNode.saveMarker(save, null);\n        if (isIDevice()) {\n            setEditFrameFocus(this.parent.editableElement, e.selector);\n        }\n        if (isSelectAll) {\n            this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, startNode, endNode, 0, endNode.textContent.length);\n        }\n        else {\n            save.restore();\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.domNode.blockNodes()\n            });\n        }\n    };\n    Formats.prototype.setSelectionBRConfig = function () {\n        var startElem = this.parent.editableElement.querySelector('.' + markerClassName.startSelection);\n        var endElem = this.parent.editableElement.querySelector('.' + markerClassName.endSelection);\n        if (isNOU(endElem)) {\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, startElem, 0);\n        }\n        else {\n            this.parent.nodeSelection.setSelectionText(this.parent.currentDocument, startElem, endElem, 0, 0);\n        }\n    };\n    Formats.prototype.preFormatMerge = function () {\n        var preNodes = this.parent.editableElement.querySelectorAll('PRE');\n        if (!isNOU(preNodes)) {\n            for (var i = 0; i < preNodes.length; i++) {\n                var previousSib = preNodes[i].previousElementSibling;\n                if (!isNOU(previousSib) && previousSib.tagName === 'PRE') {\n                    previousSib.insertAdjacentHTML('beforeend', '<br>' + preNodes[i].innerHTML);\n                    detach(preNodes[i]);\n                }\n            }\n        }\n    };\n    Formats.prototype.cleanFormats = function (element, tagName) {\n        var ignoreAttr = ['display', 'font-size', 'margin-top', 'margin-bottom', 'margin-left', 'margin-right', 'font-weight'];\n        tagName = tagName.toLowerCase();\n        for (var i = 0; i < ignoreAttr.length && (tagName !== 'p' && tagName !== 'blockquote' && tagName !== 'pre'); i++) {\n            element.style.removeProperty(ignoreAttr[i]);\n        }\n    };\n    return Formats;\n}());\nexport { Formats };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}